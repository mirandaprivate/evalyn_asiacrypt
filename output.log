Script started on 2025-08-21 11:34:11+08:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="117" LINES="53"]
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m âŒš [01;31m11:34:11[00m
$ [K[?1h=[?2004h[A[A[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m11:34:11[00m
$ [Kscript output.log[17Dcargo test-verbose test_nnprotocol[?1l>[?2004l
]2;cargo test-verbose test_nnprotocol]1;cargo[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:56:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m56[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused imports: `PointInfo` and `PointsContainer`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:48:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m48[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::{MatContainerMyInt, PointsContainer, PointInfo};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:15:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m15[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `ark_std::One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:34:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m34[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::One;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: function `mat_myint_to_field` is never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:455:4[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m455[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mfn mat_myint_to_field<F: PrimeField>(mat: Vec<Vec<MyInt>>) -> Vec<Vec<F>> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m    [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(dead_code)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::utils::matdef::MatOps`[0m
[0m    [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:1288:13[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1288[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        use mat::utils::matdef::MatOps;[0m
[0m     [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `ark_ff::Zero`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/matop.rs:268:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m268[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    use ark_ff::Zero;[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[33m^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused imports: `UniformRand` and `test_rng`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/matop.rs:269:19[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m269[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    use ark_std::{test_rng, UniformRand};[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                   [0m[0m[1m[33m^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `ark_std::test_rng`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:466:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m466[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    use ark_std::test_rng;[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[33m^^^^^^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `depth`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:428:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m428[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let depth = 1;  // single layer for easier reasoning[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_depth`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `rng`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:506:17[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m506[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let mut rng = test_rng();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                 [0m[0m[1m[33m^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_rng`[0m

[0m[1m[33mwarning[0m[0m[1m: variable does not need to be mutable[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:506:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m506[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let mut rng = test_rng();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;12m----[0m[0m[1m[33m^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;12mhelp: remove this `mut`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_mut)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `par_commit_cache`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:293:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m293[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let par_commit_cache = nn.par_commit_cache.clone();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_par_commit_cache`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `witness_commit_cache`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:295:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m295[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let witness_commit_cache = nn.witness_commit_cache.clone();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_witness_commit_cache`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `leaves_com_cache`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:297:26[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m297[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let (leaves_com, leaves_com_cache) = nn.mock_nn.commit_to_leaves(&nn.pcsrs);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                          [0m[0m[1m[33m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_leaves_com_cache`[0m

[0m[1m[33mwarning[0m[0m[1m: unused `PairingOutput` that must be used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:290:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m290[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        nn.commit_to_witness();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_must_use)]` on by default[0m
[0m[1m[38;5;14mhelp[0m[0m: use `let _ = ...` to ignore the resulting value[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m290[0m[0m [0m[0m[1m[38;5;12m| [0m[0m        [0m[0m[38;5;10mlet _ = [0m[0mnn.commit_to_witness();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[38;5;10m+++++++[0m

[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 7 warnings (run `cargo fix --lib -p composite` to apply 3 suggestions)
[1m[33mwarning[0m[1m:[0m `composite` (lib test) generated 14 warnings (3 duplicates) (run `cargo fix --lib -p composite --tests` to apply 5 suggestions)
[1m[32m    Finished[0m `release` profile [optimized + debuginfo] target(s) in 0.10s
[1m[32m     Running[0m unittests src/lib.rs (target/release/deps/ark_pcs_bench_templates-d7c7839af3e416aa)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/lib.rs (target/release/deps/ark_poly_commit-e7da8c0b1f10bd4b)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 118 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/lib.rs (target/release/deps/atomic_proof-bc8f98c3ea58e58f)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 104 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/lib.rs (target/release/deps/composite-2ca65516b9c183d8)

running 1 test
************************************************************************
========Preparing NN parameters=========================================
Table Len: 2^18
========End Preparing NN parameters=========================================
************************************************************************
************************************************************************
========Preparing SRS parameters=========================================
SRS size: 1378040 B
Setup time: 1.121926 seconds
========End Setup=========================================
************************************************************************
======================Unverified NN Feed Forward ============
Feed forward completed in 0.008171 seconds
=================================================
test protocols::nn::tests::test_nnprotocol has been running for over 60 seconds
Table Len: 2^18

thread 'protocols::nn::tests::test_nnprotocol' panicked at composite/src/utils/mock_nn.rs:239:9:
assertion `left == right` failed
  left: [0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 58, 0, 127, 127, 127, 127, 0, 0, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 0, 0, 0, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 123, 0, 0, 127, 127, 0, 0, 0, 120, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 40, 0, 0, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 37, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 1, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 15, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 126, 127, 0, 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 2, 127, 0, 125, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 15, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 111, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 127, 0, 127, 0, 110, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 53, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 97, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 127, 127, 0, 127, 0, 0, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 1, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 29, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 7, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 0, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 126, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 125, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 13, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 124, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 7, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 1, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 115, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 23, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 11, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 107, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 125, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 97, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 87, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 2, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 88, 127, 126, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 0, 0, 0, 36, 0, 0, 0, 127, 127, 0, 127, 83, 127, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 100, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 0, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 15, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 124, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 127, 27, 127, 127, 0, 127, 0, 0, 0, 127, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 127, 127, 126, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 0, 0, 3, 0, 127, 0, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 76, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 124, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 28, 127, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 126, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 127, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 125, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 61, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 38, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 33, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 99, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 115, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 50, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 10, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 107, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 126, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 0, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 91, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 6, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 0, 0, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 126, 0, 127, 127, 0, 127, 127, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 127, 127, 111, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 35, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 11, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 118, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 1, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 63, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 17, 0, 127, 0, 127, 0, 0, 127, 0, 0, 0, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 1, 127, 127, 0, 127, 127, 0, 0, 127, 7, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 123, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 4, 127, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 0, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 3, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 12, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 102, 127, 0, 0, 0, 127, 0, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 10, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 0, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 18, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 126, 0, 127, 127, 127, 127, 0, 0, 127, 0, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 127, 127, 127, 127, 127, 0, 127, 83, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 1, 0, 0, 127, 127, 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 0, 124, 0, 0, 0, 127, 12, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 86, 127, 0, 0, 127, 0, 127, 127, 127, 0, 125, 127, 0, 0, 0, 0, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 15, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 0, 127, 127, 34, 0, 127, 0, 127, 0, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 127, 127, 0, 0, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 0, 2, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 0, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 126, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 0, 0, 127, 127, 0, 0, 127, 126, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 0, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 0, 1, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 0, 127, 127, 127, 127, 127, 127, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 108, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 3, 0, 127, 127, 0, 0, 127, 0, 0, 0, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 0, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 0, 127, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 95, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 69, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 5, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 0, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 123, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 127, 127, 127, 127, 127, 127, 127, 127, 0, 0, 0, 0, 0, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 116, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 5, 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 123, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 0, 0, 0, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 126, 127, 0, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 106, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 0, 0, 0, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 0, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 22, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 0, 34, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 95, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 127, 127, 0, 127, 34, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 0, 0, 0, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 0, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 58, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 40, 127, 127, 127, 0, 4, 127, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127]
 right: [3241, 13748, 17362, 2159, 3946, 19677, 6280, 24119, 26967, 29984, 26069, 16210, 17589, 3664, 9626, 3045, 27989, 23308, 4846, 25255, 1741, 5270, 25359, 1679, 27639, 18956, 26229, 10094, 17272, 22205, 11984, 16654, 18135, 2693, 26131, 22947, 27295, 30214, 20095, 19399, 17444, 14742, 11729, 31823, 29849, 11101, 28983, 5864, 6376, 21245, 9418, 26450, 15421, 2047, 26933, 4971, 18857, 3405, 18735, 13362, 26559, 20389, 1918, 11380, 20192, 23981, 19626, 3523, 4030, 29976, 28544, 16814, 25593, 32206, 6481, 5683, 26275, 25009, 6598, 13047, 11858, 14405, 5950, 18254, 6840, 7845, 18315, 30625, 13741, 10440, 272, 9702, 15760, 4806, 28760, 14853, 1269, 11358, 21570, 7559, 6908, 9556, 24953, 29464, 16853, 32354, 7962, 26626, 20934, 5199, 7955, 30601, 13211, 32038, 28527, 6971, 23142, 4531, 2761, 8252, 29287, 10495, 1803, 17370, 26017, 16163, 28990, 8653, 16420, 16343, 16326, 16226, 16341, 16357, 16344, 16307, 16347, 16432, 16396, 16336, 16378, 16269, 16477, 16424, 16371, 16369, 16381, 16403, 16326, 16441, 16328, 16305, 16324, 16334, 16329, 16482, 16320, 16373, 16468, 16501, 16347, 16389, 16523, 16435, 16481, 16293, 16250, 16354, 16412, 16437, 16356, 16409, 16259, 16426, 16349, 16318, 16417, 16265, 16428, 16397, 16451, 16368, 16380, 16304, 16393, 16417, 16399, 16331, 16425, 16454, 16265, 16423, 16432, 16390, 16318, 16330, 16395, 16473, 16409, 16451, 16475, 16323, 16336, 16507, 16345, 16385, 16279, 16373, 16452, 16517, 16379, 16435, 16325, 16297, 16440, 16322, 16418, 16352, 16251, 16383, 16323, 16419, 16385, 16444, 16423, 16193, 16258, 16321, 16382, 16379, 16422, 16398, 16296, 16352, 16302, 16506, 16396, 16343, 16318, 16317, 16550, 16622, 16368, 16354, 16462, 16390, 16521, 16265, 16416, 16419, 16394, 16329, 16409, 16418, 16458, 16465, 16507, 16385, 16347, 16277, 16255, 16380, 16426, 16274, 16400, 16491, 16389, 16392, 16323, 16327, 16365, 16430, 16376, 16367, 16312, 16441, 16272, 16451, 16286, 16345, 16281, 16425, 16409, 16406, 16316, 16414, 16375, 16403, 16289, 16285, 16437, 16288, 16616, 16274, 16302, 16297, 16389, 16394, 16399, 16512, 16236, 16460, 16358, 16437, 16563, 16301, 16475, 16330, 16429, 16336, 16388, 16311, 16402, 16331, 16432, 16352, 16471, 16429, 16301, 16341, 16299, 16475, 16374, 16496, 16454, 16294, 16337, 16446, 16349, 16295, 16325, 16459, 16391, 16373, 16407, 16356, 16373, 16387, 16473, 16364, 16437, 16281, 16474, 16287, 16411, 16448, 16380, 16421, 16308, 16490, 16342, 16417, 16477, 16378, 16236, 16424, 16440, 16236, 16494, 16407, 16373, 16386, 16355, 16525, 16498, 16410, 16379, 16328, 16506, 16490, 16367, 16323, 16353, 16374, 16418, 16332, 16393, 16348, 16431, 16363, 16452, 16412, 16373, 16534, 16463, 16286, 16379, 16304, 16372, 16390, 16399, 16321, 16415, 16479, 16452, 16432, 16260, 16359, 16313, 16442, 16279, 16387, 16310, 16369, 16364, 16458, 16326, 16349, 16453, 16373, 16346, 16434, 16310, 16410, 16443, 16441, 16233, 16318, 16468, 16347, 16519, 16320, 16345, 16348, 16405, 16374, 16370, 16506, 16307, 16468, 16434, 16369, 16435, 16229, 16450, 16380, 16403, 16315, 16441, 16340, 16411, 16360, 16469, 16328, 16538, 16488, 16178, 16417, 16380, 16470, 16307, 16494, 16430, 16265, 16391, 16402, 16443, 16306, 16365, 16431, 16325, 16390, 16280, 16453, 16440, 16349, 16441, 16284, 16405, 16280, 16426, 16337, 16432, 16399, 16324, 16411, 16328, 16440, 16301, 16433, 16559, 16393, 16337, 16450, 16417, 16251, 16483, 16479, 16369, 16400, 16354, 16438, 16444, 16384, 16378, 16260, 16633, 16528, 16314, 16263, 16367, 16384, 16424, 16289, 16460, 16383, 16411, 16265, 16449, 16357, 16297, 16505, 16435, 16325, 16428, 16272, 16386, 16425, 16424, 16267, 16342, 16458, 16358, 16321, 16297, 16258, 16360, 16476, 16321, 16405, 16303, 16389, 16276, 16453, 16286, 16309, 16367, 16331, 16298, 16386, 16317, 16394, 16363, 16424, 16282, 16248, 16488, 16341, 16570, 16347, 16314, 16313, 16420, 16386, 16306, 16501, 16232, 16413, 16348, 16419, 16443, 16221, 16391, 16369, 16379, 16396, 16421, 16368, 16468, 16369, 16437, 16409, 16493, 16457, 16280, 16420, 16442, 16388, 16293, 16433, 16525, 16332, 16417, 16431, 16395, 16287, 16392, 16507, 16409, 16388, 16289, 16448, 16375, 16312, 16480, 16255, 16439, 16326, 16410, 16248, 16423, 16382, 16383, 16347, 16366, 16372, 16330, 16432, 16616, 16390, 16238, 16444, 16423, 16287, 16476, 16420, 16360, 16435, 16351, 16425, 16383, 16399, 16325, 16299, 16556, 16506, 16340, 16281, 16380, 16328, 16468, 16296, 16479, 16441, 16409, 16332, 16438, 16379, 16350, 16497, 16477, 16352, 16385, 16266, 16443, 16388, 16468, 16306, 16334, 16502, 16441, 16401, 16237, 16304, 16355, 16394, 16333, 16413, 16297, 16367, 16385, 16512, 16333, 16358, 16416, 16423, 16335, 16400, 16335, 16390, 16387, 16440, 16413, 16342, 16441, 16285, 16476, 16316, 16292, 16277, 16431, 16335, 16318, 16500, 16238, 16402, 16397, 16376, 16472, 16322, 16477, 16420, 16349, 16390, 16449, 16338, 16414, 16419, 16433, 16325, 16504, 16467, 16299, 16413, 16367, 16440, 16346, 16404, 16442, 16297, 16389, 16454, 16465, 16233, 16412, 16477, 16348, 16379, 16273, 16437, 16460, 16296, 16496, 16201, 16425, 16330, 16540, 16321, 16382, 16425, 16417, 16340, 16320, 16450, 16354, 16395, 16465, 16368, 16216, 16452, 16446, 16329, 16447, 16369, 16360, 16412, 16375, 16486, 16446, 16468, 16348, 16348, 16550, 16451, 16363, 16308, 16411, 16388, 16497, 16331, 16450, 16360, 16352, 16329, 16404, 16390, 16341, 16531, 16484, 16343, 16388, 16204, 16403, 16409, 16383, 16307, 16297, 16450, 16403, 16357, 16274, 16261, 16380, 16470, 16328, 16381, 16296, 16409, 16339, 16467, 16277, 16325, 16387, 16339, 16375, 16428, 16318, 16387, 16362, 16482, 16320, 16290, 16473, 16354, 16526, 16321, 16294, 16300, 16412, 16310, 16318, 16493, 16280, 16411, 16357, 16426, 16518, 16215, 16422, 16427, 16362, 16385, 16378, 16369, 16451, 16420, 16380, 16315, 16495, 16537, 16278, 16451, 16410, 16382, 16316, 16417, 16512, 16340, 16447, 16423, 16428, 16313, 16411, 16493, 16383, 16474, 16249, 16412, 16398, 16332, 16436, 16242, 16427, 16324, 16454, 16262, 16428, 16502, 16315, 16350, 16340, 16382, 16365, 16428, 16544, 16296, 16230, 16453, 16388, 16323, 16473, 16373, 16425, 16446, 16363, 16451, 16371, 16420, 16334, 16368, 16550, 16487, 16296, 16303, 16389, 16363, 16490, 16303, 16466, 16426, 16366, 16351, 16466, 16400, 16392, 16471, 16521, 16332, 16365, 16265, 16379, 16398, 16401, 16284, 16264, 16466, 16493, 16376, 16236, 16313, 16357, 16443, 16333, 16399, 16303, 16396, 16358, 16404, 16307, 16373, 16382, 16371, 16374, 16445, 16323, 16370, 16342, 16378, 16425, 16301, 16422, 16333, 16513, 16248, 16310, 16332, 16428, 16341, 16295, 16489, 16317, 16417, 16376, 16406, 16518, 16309, 16488, 16410, 16358, 16394, 16437, 16416, 16491, 16382, 16354, 16311, 16518, 16480, 16305, 16435, 16422, 16461, 16332, 16453, 16494, 16359, 16439, 16429, 16419, 16307, 16439, 16452, 16313, 16442, 16307, 16357, 16459, 16319, 16507, 16266, 16450, 16344, 16520, 16379, 16453, 16465, 16415, 16355, 16302, 16457, 16362, 16401, 16483, 16313, 16238, 16419, 16489, 16335, 16447, 16360, 16409, 16537, 16384, 16458, 16399, 16478, 16429, 16353, 16515, 16464, 16330, 16285, 16420, 16428, 16424, 16401, 16421, 16435, 16378, 16346, 16411, 16395, 16380, 16457, 16524, 16360, 16343, 16205, 16396, 16385, 16386, 16328, 16334, 16469, 16423, 16404, 16193, 16257, 16352, 16461, 16314, 16404, 16274, 16412, 16347, 16417, 16309, 16316, 16367, 16354, 16325, 16403, 16288, 16359, 16337, 16398, 16386, 16290, 16390, 16360, 16582, 16215, 16328, 16292, 16378, 16356, 16323, 16490, 16304, 16363, 16363, 16434, 16511, 16273, 16471, 16399, 16263, 16379, 16356, 16393, 16477, 16366, 16388, 16342, 16462, 16531, 16330, 16477, 16421, 16412, 16310, 16401, 16482, 16307, 16422, 16432, 16454, 16315, 16421, 16450, 16391, 16395, 16328, 16395, 16436, 16296, 16487, 16276, 16460, 16371, 16447, 16334, 16394, 16374, 16362, 16408, 16329, 16455, 16395, 16435, 16490, 16382, 16224, 16425, 16364, 16307, 16522, 16352, 16418, 16422, 16361, 16481, 16419, 16407, 16394, 16443, 16635, 16462, 16372, 16306, 16416, 16375, 16445, 16365, 16396, 16412, 16390, 16298, 16449, 16403, 16360, 16503, 16422, 16372, 16274, 16259, 16372, 16391, 16398, 16287, 16289, 16487, 16399, 16446, 16153, 16292, 16338, 16460, 16340, 16399, 16343, 16419, 16320, 16400, 16345, 16337, 16409, 16404, 16312, 16417, 16279, 16370, 16339, 16400, 16397, 16314, 16416, 16331, 16570, 16238, 16302, 16282, 16426, 16325, 16327, 16548, 16315, 16385, 16370, 16434, 16510, 16285, 16440, 16430, 16312, 16427, 16481, 16355, 16458, 16381, 16400, 16393, 16553, 16517, 16275, 16481, 16481, 16478, 16354, 16424, 16446, 16244, 16448, 16484, 16439, 16284, 16403, 16479, 16351, 16449, 16315, 16362, 16451, 16302, 16505, 16350, 16451, 16327, 16557, 16274, 16390, 16422, 16336, 16360, 16384, 16462, 16360, 16401, 16467, 16332, 16277, 16411, 16347, 16344, 16442, 16378, 16432, 16405, 16367, 16455, 16419, 16375, 16348, 16346, 16621, 16536, 16403, 16296, 16415, 16295, 16410, 16336, 16363, 16426, 16415, 16381, 16385, 16368, 16317, 16486, 16509, 16313, 16314, 16253, 16433, 16349, 16389, 16267, 16336, 16453, 16448, 16392, 16192, 16307, 16395, 16487, 16325, 16413, 16269, 16385, 16370, 16408, 16348, 16353, 16387, 16380, 16303, 16423, 16295, 16382, 16355, 16411, 16411, 16269, 16494, 16362, 16545, 16262, 16319, 16306, 16412, 16335, 16370, 16509, 16313, 16438, 16375, 16454, 16434, 16305, 16441, 16405, 16350, 16438, 16379, 16399, 16462, 16449, 16423, 16354, 16457, 16519, 16345, 16461, 16422, 16454, 16307, 16410, 16507, 16297, 16452, 16424, 16429, 16296, 16420, 16516, 16357, 16471, 16276, 16406, 16412, 16319, 16488, 16309, 16472, 16339, 16508, 16282, 16410, 16459, 16296, 16377, 16423, 16435, 16373, 16432, 16492, 16327, 16228, 16360, 16391, 16339, 16507, 16409, 16409, 16390, 16371, 16451, 16390, 16435, 16393, 16347, 16601, 16490, 16367, 16326, 16385, 16351, 16479, 16333, 16358, 16427, 16468, 16349, 16397, 16380, 16353, 16449, 16498, 16331, 16318, 16284, 16392, 16415, 16374, 16244, 16301, 16422, 16443, 16395, 16222, 16301, 16359, 16496, 16327, 16423, 16303, 16396, 16328, 16415, 16305, 16283, 16402, 16380, 16337, 16427, 16320, 16360, 16374, 16482, 16417, 16322, 16472, 16365, 16541, 16253, 16321, 16293, 16465, 16406, 16333, 16592, 16343, 16400, 16347, 16446, 16504, 16323, 16470, 16423, 16308, 16455, 16400, 16367, 16498, 16444, 16371, 16314, 16482, 16462, 16303, 16457, 16414, 16478, 16326, 16432, 16540, 16281, 16471, 16452, 16448, 16241, 16366, 16506, 16295, 16402, 16350, 16378, 16433, 16324, 16473, 16324, 16474, 16320, 16573, 16302, 16402, 16425, 16317, 16371, 16387, 16454, 16367, 16445, 16477, 16408, 16239, 16437, 16382, 16254, 16457, 16431, 16421, 16426, 16392, 16505, 16392, 16430, 16388, 16325, 16546, 16496, 16348, 16264, 16437, 16317, 16418, 16385, 16424, 16466, 16439, 16386, 16411, 16413, 16370, 16456, 16546, 16310, 16321, 16209, 16378, 16395, 16409, 16281, 16317, 16445, 16464, 16456, 16251, 16306, 16390, 16425, 16285, 16451, 16354, 16412, 16338, 16376, 16322, 16403, 16370, 16352, 16335, 16479, 16276, 16387, 16385, 16446, 16402, 16299, 16425, 16372, 16535, 16229, 16336, 16313, 16428, 16334, 16344, 16530, 16294, 16397, 16365, 16433, 16464, 16228, 16461, 16386, 16340, 16397, 16402, 16400, 16493, 16386, 16364, 16327, 16460, 16568, 16313, 16444, 16416, 16435, 16265, 16482, 16509, 16285, 16381, 16419, 16438, 16264, 16426, 16488, 16297, 16398, 16390, 16366, 16451, 16306, 16528, 16265, 16460, 16318, 16541, 16357, 16492, 16400, 16381, 16433, 16326, 16415, 16369, 16453, 16529, 16330, 16241, 16434, 16438, 16324, 16499, 16434, 16457, 16402, 16371, 16476, 16407, 16486, 16429, 16380, 16567, 16510, 16368, 16291, 16423, 16383, 16447, 16354, 16384, 16435, 16434, 16313, 16412, 16411, 16335, 16517, 16483, 16303, 16365, 16230, 16363, 16395, 16365, 16325, 16281, 16435, 16466, 16379, 16206, 16293, 16353, 16432, 16337, 16429, 16254, 16385, 16383, 16441, 16365, 16305, 16376, 16366, 16357, 16436, 16343, 16367, 16374, 16429, 16327, 16273, 16450, 16362, 16571, 16258, 16342, 16321, 16442, 16372, 16412, 16548, 16306, 16362, 16399, 16434, 16525, 16326, 16493, 16414, 16305, 16407, 16391, 16388, 16454, 16382, 16474, 16337, 16496, 16528, 16287, 16472, 16454, 16396, 16420, 16467, 16475, 16265, 16418, 16412, 16408, 16321, 16329, 16498, 16397, 16403, 16311, 16348, 16392, 16267, 16514, 16294, 16430, 16318, 16501, 16347, 16409, 16395, 16321, 16377, 16338, 16456, 16428, 16458, 16493, 16398, 16244, 16441, 16400, 16287, 16461, 16369, 16421, 16405, 16365, 16484, 16477, 16456, 16425, 16332, 16626, 16493, 16339, 16270, 16432, 16382, 16411, 16382, 16427, 16443, 16390, 16348, 16457, 16423, 16364, 16453, 16482, 16380, 16266, 16242, 16383, 16376, 16441, 16289, 16368, 16449, 16409, 16420, 16237, 16282, 16356, 16458, 16341, 16432, 16334, 16350, 16324, 16450, 16340, 16346, 16369, 16373, 16278, 16408, 16326, 16358, 16363, 16423, 16375, 16255, 16413, 16345, 16557, 16228, 16321, 16330, 16359, 16381, 16337, 16494, 16267, 16376, 16369, 16446, 16498, 16265, 16471, 16400, 16290, 16481, 16412, 16390, 16486, 16350, 16394, 16384, 16494, 16475, 16312, 16474, 16436, 16434, 16352, 16405, 16437, 16298, 16425, 16440, 16380, 16294, 16385, 16467, 16372, 16403, 16296, 16419, 16446, 16344, 16502, 16320, 16459, 16367, 16489, 16322, 16401, 16403, 16353, 16357, 16305, 16463, 16399, 16444, 16464, 16401, 16234, 16448, 16379, 16384, 16496, 16417, 16448, 16378, 16358, 16425, 16445, 16392, 16382, 16404, 16616, 16510, 16428, 16357, 16399, 16352, 16443, 16354, 16383, 16371, 16420, 16283, 16409, 16437, 16290, 16506, 16448, 16347, 16353, 16312, 16373, 16424, 16408, 16301, 16385, 16477, 16335, 16436, 16241, 16346, 16371, 16490, 16345, 16394, 16364, 16429, 16297, 16383, 16349, 16303, 16378, 16403, 16357, 16399, 16303, 16402, 16301, 16413, 16347, 16328, 16443, 16320, 16557, 16259, 16321, 16305, 16385, 16364, 16371, 16536, 16279, 16462, 16341, 16423, 16505, 16273, 16470, 16504, 16340, 16488, 16441, 16337, 16454, 16406, 16433, 16344, 16465, 16466, 16348, 16459, 16431, 16437, 16384, 16409, 16475, 16255, 16373, 16527, 16424, 16257, 16349, 16523, 16354, 16429, 16334, 16391, 16399, 16366, 16476, 16293, 16471, 16265, 16501, 16270, 16423, 16406, 16321, 16429, 16371, 16400, 16351, 16423, 16512, 16398, 16242, 16389, 16373, 16262, 16414, 16406, 16396, 16435, 16333, 16424, 16374, 16366, 16337, 16385, 16599, 16493, 16430, 16330, 16411, 16361, 16428, 16303, 16390, 16403, 16428, 16381, 16410, 16410, 16337, 16426, 16516, 16341, 16355, 16281, 16391, 16427, 16415, 16320, 16315, 16452, 16422, 16383, 16238, 16342, 16363, 16430, 16315, 16456, 16340, 16381, 16340, 16444, 16329, 16363, 16392, 16377, 16336, 16442, 16323, 16364, 16356, 16371, 16351, 16247, 16502, 16351, 16552, 16283, 16298, 16362, 16419, 16312, 16424, 16515, 16255, 16383, 16416, 16414, 16430, 16303, 16482, 16414, 16329, 16448, 16398, 16385, 16431, 16439, 16439, 16379, 16481, 16486, 16274, 16446, 16425, 16409, 16385, 16398, 16486, 16331, 16387, 16408, 16445, 16314, 16391, 16498, 16420, 16410, 16322, 16389, 16391, 16304, 16517, 16284, 16446, 16206, 16478, 16279, 16397, 16428, 16325, 16307, 16338, 16394, 16397, 16507, 16468, 16343, 16238, 16407, 16437, 16379, 16399, 16408, 16343, 16446, 16335, 16406, 16427, 16405, 16382, 16341, 16626, 16542, 16398, 16327, 16449, 16404, 16420, 16306, 16402, 16427, 16380, 16380, 16521, 16390, 16377, 16459, 16497, 16342, 16318, 16253, 16390, 16413, 16426, 16317, 16317, 16428, 16375, 16351, 16277, 16241, 16367, 16487, 16344, 16404, 16330, 16367, 16339, 16462, 16298, 16356, 16404, 16345, 16340, 16404, 16335, 16382, 16307, 16446, 16371, 16298, 16469, 16291, 16602, 16213, 16335, 16346, 16402, 16387, 16318, 16519, 16299, 16402, 16315, 16452, 16524, 16263, 16484, 16412, 16321, 16448, 16374, 16369, 16468, 16386, 16383, 16352, 16519, 16463, 16211, 16474, 16427, 16427, 16350, 16427, 16441, 16319, 16405, 16472, 16440, 16258, 16403, 16480, 16367, 16408, 16296, 16421, 16410, 16344, 16538, 16261, 16477, 16351, 16422, 16262, 16366, 16405, 16329, 16372, 16285, 16445, 16340, 16410, 16479, 16369, 16221, 16457, 16357, 16330, 16487, 16406, 16424, 16465, 16376, 16387, 16403, 16397, 16379, 16374, 16553, 16520, 16386, 16349, 16403, 16344, 16446, 16361, 16418, 16431, 16419, 16338, 16484, 16397, 16374, 16436, 16521, 16331, 16345, 16275, 16384, 16408, 16378, 16321, 16256, 16511, 16431, 16386, 16251, 16323, 16410, 16435, 16326, 16412, 16331, 16410, 16330, 16411, 16311, 16342, 16429, 16362, 16379, 16418, 16291, 16369, 16343, 16389, 16398, 16308, 16453, 16324, 16523, 16295, 16332, 16313, 16439, 16336, 16356, 16536, 16259, 16393, 16329, 16400, 16499, 16259, 16463, 16399, 16327, 16440, 16399, 16398, 16470, 16422, 16358, 16359, 16494, 16521, 16315, 16471, 16451, 16422, 16372, 16472, 16458, 16274, 16392, 16458, 16422, 16257, 16453, 16475, 16315, 16425, 16338, 16367, 16451, 16309, 16550, 16234, 16458, 16313, 16498, 16304, 16424, 16416, 16349, 16391, 16335, 16434, 16356, 16405, 16523, 16344, 16230, 16407, 16421, 16302, 16440, 16411, 16456, 16458, 16384, 16448, 16399, 16442, 16382, 16374, 16530, 16502, 16370, 16310, 16421, 16366, 16386, 16323, 16394, 16415, 16394, 16364, 16442, 16407, 16339, 16430, 16538, 16303, 16326, 16234, 16341, 16400, 16379, 16268, 16307, 16473, 16463, 16398, 16201, 16298, 16364, 16477, 16322, 16435, 16308, 16420, 16321, 16397, 16299, 16366, 16393, 16324, 16359, 16444, 16322, 16359, 16413, 16440, 16367, 16298, 16427, 16319, 16571, 16252, 16341, 16308, 16428, 16372, 16374, 16543, 16326, 16395, 16363, 16464, 16523, 16291, 16496, 16382, 16331, 16365, 16394, 16374, 16450, 16395, 16386, 16306, 16504, 16533, 16262, 16447, 16442, 16441, 16339, 16452, 16463, 16285, 16391, 16425, 16418, 16265, 16385, 16457, 16328, 16426, 16373, 16362, 16436, 16307, 16511, 16288, 16448, 16333, 16496, 16349, 16485, 16407, 16345, 16424, 16314, 16476, 16387, 16448, 16517, 16375, 16267, 16397, 16421, 16303, 16453, 16399, 16447, 16442, 16435, 16484, 16449, 16456, 16424, 16390, 16590, 16515, 16389, 16254, 16394, 16387, 16423, 16385, 16422, 16434, 16374, 16351, 16443, 16432, 16355, 16462, 16488, 16339, 16346, 16192, 16326, 16403, 16333, 16294, 16289, 16467, 16392, 16390, 16269, 16253, 16348, 16465, 16320, 16440, 16344, 16386, 16265, 16413, 16326, 16375, 16376, 16348, 16332, 16402, 16318, 16404, 16361, 16387, 16363, 16273, 16468, 16325, 16576, 16251, 16351, 16304, 16434, 16379, 16364, 16492, 16307, 16353, 16338, 16503, 16531, 16220, 16509, 16437, 16348, 16346, 16436, 16314, 16460, 16361, 16381, 16336, 16442, 16489, 16297, 16432, 16431, 16401, 16314, 16493, 16508, 16314, 16386, 16481, 16456, 16292, 16381, 16513, 16342, 16393, 16329, 16338, 16382, 16337, 16485, 16284, 16432, 16287, 16445, 16284, 16407, 16411, 16344, 16379, 16328, 16430, 16340, 16449, 16523, 16356, 16232, 16405, 16424, 16329, 16480, 16377, 16430, 16445, 16345, 16451, 16407, 16390, 16436, 16390, 16581, 16554, 16363, 16296, 16416, 16351, 16437, 16351, 16435, 16459, 16456, 16319, 16475, 16356, 16363, 16503, 16524, 16328, 16307, 16219, 16382, 16383, 16395, 16293, 16276, 16483, 16418, 16418, 16251, 16290, 16377, 16470, 16335, 16467, 16360, 16400, 16350, 16414, 16364, 16365, 16409, 16349, 16322, 16410, 16316, 16401, 16375, 16418, 16376, 16309, 16439, 16391, 16562, 16259, 16361, 16316, 16398, 16372, 16357, 16437, 16237, 16396, 16379, 16468, 16472, 16253, 16444, 16449, 16297, 16367, 16452, 16373, 16476, 16363, 16406, 16421, 16466, 16498, 16360, 16451, 16478, 16407, 16300, 16445, 16465, 16341, 16456, 16428, 16461, 16320, 16378, 16474, 16366, 16413, 16313, 16390, 16442, 16307, 16471, 16342, 16438, 16334, 16517, 16363, 16424, 16403, 16347, 16394, 16345, 16441, 16353, 16433, 16506, 16379, 16271, 16373, 16426, 16319, 16464, 16390, 16397, 16432, 16359, 16444, 16397, 16410, 16395, 16363, 16602, 16516, 16332, 16273, 16398, 16372, 16459, 16367, 16398, 16377, 16448, 16329, 16432, 16363, 16336, 16488, 16458, 16330, 16348, 16282, 16400, 16452, 16373, 16250, 16321, 16456, 16413, 16389, 16275, 16295, 16328, 16495, 16322, 16469, 16310, 16386, 16320, 16413, 16307, 16305, 16375, 16363, 16279, 16390, 16296, 16386, 16384, 16430, 16357, 16311, 16449, 16388, 16564, 16296, 16324, 16298, 16458, 16400, 16367, 16505, 16272, 16416, 16361, 16405, 16474, 16264, 16448, 16396, 16317, 16420, 16437, 16287, 16475, 16410, 16427, 16349, 16514, 16460, 16306, 16416, 16455, 16437, 16317, 16438, 16505, 16292, 16479, 16462, 16459, 16260, 16372, 16497, 16329, 16414, 16288, 16433, 16420, 16323, 16477, 16300, 16450, 16326, 16469, 16255, 16438, 16451, 16364, 16352, 16371, 16427, 16343, 16470, 16542, 16400, 16256, 16423, 16434, 16280, 16435, 16438, 16392, 16380, 16330, 16445, 16387, 16357, 16369, 16293, 16600, 16516, 16295, 16262, 16437, 16348, 16446, 16316, 16426, 16414, 16462, 16327, 16421, 16374, 16368, 16453, 16535, 16344, 16337, 16287, 16374, 16404, 16434, 16297, 16294, 16462, 16414, 16418, 16263, 16353, 16349, 16478, 16367, 16474, 16343, 16402, 16295, 16414, 16318, 16365, 16371, 16364, 16336, 16460, 16363, 16435, 16387, 16468, 16345, 16300, 16459, 16277, 16518, 16248, 16346, 16327, 16387, 16346, 16404, 16488, 16217, 16410, 16379, 16455, 16461, 16291, 16469, 16431, 16343, 16402, 16404, 16305, 16450, 16370, 16431, 16349, 16495, 16508, 16332, 16404, 16377, 16394, 16383, 16412, 16493, 16319, 16367, 16458, 16430, 16230, 16391, 16499, 16354, 16375, 16344, 16401, 16409, 16295, 16500, 16291, 16445, 16268, 16505, 16322, 16441, 16429, 16350, 16381, 16373, 16426, 16377, 16447, 16487, 16353, 16223, 16447, 16440, 16250, 16429, 16406, 16372, 16427, 16350, 16451, 16496, 16477, 16403, 16325, 16541, 16506, 16333, 16289, 16447, 16397, 16432, 16333, 16392, 16422, 16433, 16326, 16436, 16416, 16349, 16515, 16501, 16348, 16358, 16236, 16380, 16419, 16412, 16261, 16319, 16463, 16404, 16367, 16235, 16310, 16333, 16491, 16333, 16414, 16293, 16370, 16359, 16474, 16325, 16306, 16428, 16394, 16368, 16379, 16325, 16429, 16338, 16444, 16349, 16247, 16485, 16340, 16554, 16283, 16299, 16331, 16435, 16356, 16361, 16497, 16277, 16410, 16383, 16437, 16482, 16214, 16443, 16415, 16291, 16388, 16442, 16376, 16452, 16399, 16457, 16377, 16518, 16472, 16314, 16503, 16466, 16385, 16364, 16449, 16489, 16288, 16449, 16446, 16477, 16299, 16407, 16497, 16362, 16357, 16279, 16425, 16382, 16350, 16484, 16278, 16467, 16299, 16463, 16256, 16387, 16449, 16318, 16341, 16332, 16442, 16362, 16468, 16497, 16396, 16241, 16477, 16401, 16287, 16482, 16357, 16413, 16410, 16318, 16455, 16457, 16395, 16349, 16350, 16591, 16482, 16341, 16252, 16424, 16412, 16434, 16339, 16433, 16442, 16420, 16313, 16460, 16381, 16358, 16466, 16518, 16331, 16357, 16224, 16410, 16402, 16366, 16328, 16301, 16447, 16423, 16355, 16297, 16280, 16401, 16466, 16364, 16413, 16339, 16409, 16314, 16495, 16337, 16323, 16434, 16393, 16301, 16417, 16287, 16411, 16360, 16454, 16355, 16294, 16511, 16322, 16567, 16269, 16317, 16332, 16404, 16330, 16348, 16466, 16292, 16411, 16330, 16408, 16440, 16248, 16481, 16437, 16308, 16428, 16419, 16366, 16448, 16402, 16396, 16346, 16485, 16496, 16329, 16428, 16390, 16395, 16308, 16402, 16480, 16361, 16448, 16462, 16423, 16244, 16425, 16484, 16406, 16424, 16320, 16430, 16410, 16349, 16490, 16249, 16439, 16359, 16499, 16281, 16431, 16434, 16349, 16327, 16331, 16424, 16418, 16412, 16503, 16364, 16208, 16406, 16432, 16278, 16430, 16415, 16369, 16426, 16325, 16458, 16378, 16438, 16367, 16304, 16585, 16514, 16285, 16296, 16402, 16372, 16412, 16314, 16420, 16414, 16397, 16341, 16428, 16438, 16406, 16478, 16549, 16380, 16290, 16256, 16323, 16410, 16389, 16297, 16311, 16495, 16475, 16390, 16259, 16295, 16371, 16467, 16343, 16410, 16325, 16378, 16315, 16467, 16316, 16369, 16399, 16431, 16369, 16404, 16312, 16371, 16364, 16431, 16443, 16269, 16449, 16278, 16599, 16258, 16290, 16317, 16420, 16345, 16375, 16512, 16321, 16439, 16360, 16447, 16475, 16275, 16467, 16397, 16325, 16402, 16404, 16363, 16457, 16421, 16400, 16289, 16533, 16473, 16233, 16442, 16360, 16482, 16348, 16454, 16451, 16310, 16443, 16448, 16403, 16275, 16384, 16480, 16315, 16415, 16303, 16405, 16446, 16349, 16514, 16275, 16437, 16324, 16525, 16307, 16419, 16479, 16356, 16377, 16278, 16495, 16348, 16428, 16435, 16362, 16190, 16424, 16394, 16320, 16467, 16423, 16394, 16438, 16384, 16454, 16453, 16415, 16388, 16373, 16517, 16512, 16351, 16287, 16407, 16409, 16427, 16373, 16432, 16401, 16405, 16353, 16442, 16406, 16394, 16496, 16487, 16347, 16375, 16245, 16370, 16412, 16390, 16286, 16303, 16493, 16407, 16353, 16271, 16272, 16394, 16513, 16335, 16406, 16302, 16395, 16294, 16411, 16293, 16321, 16396, 16377, 16342, 16391, 16243, 16365, 16368, 16434, 16419, 16294, 16502, 16369, 16590, 16287, 16307, 16313, 16439, 16323, 16341, 16493, 16285, 16429, 16320, 16416, 16507, 16198, 16435, 16403, 16324, 16430, 16388, 16354, 16513, 16431, 16392, 16337, 16491, 16495, 16296, 16489, 16425, 16391, 16300, 16447, 16539, 16322, 16451, 16479, 16429, 16234, 16430, 16505, 16331, 16422, 16303, 16423, 16434, 16345, 16506, 16235, 16444, 16325, 16501, 16280, 16441, 16460, 16334, 16392, 16359, 16409, 16400, 16466, 16512, 16334, 16220, 16451, 16389, 16311, 16483, 16394, 16443, 16421, 16344, 16489, 16395, 16360, 16376, 16408, 16545, 16483, 16365, 16242, 16400, 16395, 16439, 16329, 16428, 16475, 16438, 16360, 16436, 16419, 16383, 16473, 16495, 16342, 16316, 16236, 16337, 16392, 16363, 16270, 16319, 16487, 16433, 16363, 16250, 16269, 16354, 16512, 16355, 16411, 16305, 16396, 16293, 16443, 16291, 16323, 16389, 16397, 16340, 16415, 16305, 16340, 16361, 16429, 16375, 16239, 16489, 16301, 16586, 16254, 16309, 16273, 16434, 16341, 16350, 16528, 16364, 16424, 16360, 16470, 16485, 16270, 16497, 16404, 16308, 16413, 16406, 16370, 16472, 16437, 16447, 16335, 16496, 16507, 16270, 16418, 16421, 16438, 16347, 16439, 16476, 16277, 16400, 16434, 16418, 16259, 16373, 16477, 16388, 16404, 16342, 16410, 16374, 16353, 16476, 16284, 16442, 16344, 16455, 16317, 16409, 16435, 16320, 16391, 16348, 16424, 16379, 16417, 16518, 16346, 16244, 16392, 16410, 16274, 16452, 16377, 16386, 16414, 16360, 16441, 16432, 16404, 16386, 16397, 16560, 16531, 16386, 16295, 16415, 16354, 16415, 16306, 16391, 16414, 16399, 16382, 16470, 16410, 16392, 16480, 16522, 16355, 16288, 16219, 16327, 16384, 16364, 16319, 16273, 16495, 16453, 16351, 16260, 16273, 16374, 16443, 16286, 16387, 16349, 16342, 16327, 16427, 16312, 16329, 16422, 16386, 16326, 16429, 16274, 16401, 16337, 16427, 16396, 16306, 16506, 16347, 16572, 16275, 16344, 16321, 16432, 16371, 16402, 16461, 16293, 16349, 16374, 16475, 16489, 16228, 16501, 16397, 16359, 16418, 16426, 16378, 16467, 16427, 16372, 16367, 16504, 16490, 16288, 16487, 16414, 16399, 16330, 16467, 16488, 16359, 16455, 16471, 16447, 16274, 16392, 16452, 16343, 16373, 16304, 16420, 16446, 16376, 16506, 16292, 16436, 16304, 16509, 16330, 16408, 16453, 16358, 16343, 16313, 16433, 16354, 16456, 16519, 16323, 16225, 16396, 16411, 16372, 16435, 16408, 16440, 16409, 16344, 16496, 16368, 16342, 16435, 16381, 16593, 16559, 16381, 16271, 16364, 16371, 16418, 16363, 16401, 16408, 16447, 16301, 16455, 16404, 16375, 16492, 16505, 16322, 16341, 16235, 16425, 16387, 16424, 16287, 16351, 16425, 16452, 16359, 16272, 16325, 16343, 16473, 16347, 16435, 16317, 16401, 16340, 16409, 16316, 16371, 16401, 16367, 16356, 16409, 16333, 16317, 16366, 16384, 16437, 16233, 16431, 16339, 16574, 16261, 16365, 16339, 16408, 16306, 16346, 16514, 16337, 16452, 16342, 16398, 16438, 16269, 16422, 16402, 16265, 16406, 16395, 16360, 16495, 16390, 16397, 16367, 16485, 16483, 16268, 16420, 16433, 16448, 16308, 16444, 16500, 16289, 16456, 16434, 16393, 16287, 16385, 16459, 16337, 16461, 16303, 16398, 16435, 16374, 16466, 16296, 16470, 16336, 16499, 16242, 16455, 16416, 16340, 16377, 16306, 16404, 16411, 16433, 16465, 16333, 16287, 16409, 16405, 16316, 16433, 16418, 16451, 16440, 16383, 16440, 16383, 16450, 16375, 16431, 16553, 16450, 16342, 16264, 16441, 16449, 16409, 16312, 16418, 16471, 16438, 16343, 16424, 16423, 16366, 16464, 16488, 16362, 16326, 16240, 16358, 16398, 16388, 16289, 16298, 16481, 16427, 16392, 16261, 16270, 16355, 16498, 16334, 16409, 16317, 16406, 16325, 16440, 16322, 16330, 16392, 16369, 16344, 16411, 16286, 16348, 16324, 16436, 16421, 16258, 16480, 16291, 16590, 16244, 16294, 16306, 16435, 16314, 16330, 16532, 16358, 16432, 16346, 16456, 16491, 16254, 16477, 16413, 16284, 16416, 16420, 16353, 16474, 16426, 16418, 16323, 16525, 16513, 16290, 16430, 16423, 16440, 16304, 16433, 16468, 16278, 16401, 16453, 16435, 16268, 16373, 16500, 16356, 16414, 16320, 16407, 16405, 16332, 16475, 16274, 16441, 16323, 16481, 16300, 16408, 16453, 16314, 16398, 16345, 16447, 16325, 16402, 16482, 16328, 16240, 16430, 16402, 16304, 16455, 16383, 16397, 16449, 16361, 16436, 16425, 16441, 16347, 16403, 16550, 16522, 16366, 16306, 16434, 16338, 16404, 16326, 16380, 16433, 16392, 16399, 16459, 16402, 16370, 16491, 16514, 16319, 16336, 16247, 16360, 16380, 16378, 16295, 16283, 16458, 16463, 16394, 16234, 16273, 16377, 16500, 16351, 16414, 16301, 16385, 16363, 16401, 16323, 16331, 16444, 16371, 16305, 16453, 16301, 16374, 16344, 16486, 16387, 16278, 16485, 16362, 16547, 16271, 16308, 16307, 16463, 16350, 16352, 16515, 16336, 16391, 16417, 16467, 16465, 16267, 16486, 16379, 16305, 16446, 16438, 16389, 16499, 16432, 16396, 16358, 16487, 16528, 16300, 16446, 16463, 16432, 16317, 16448, 16503, 16328, 16442, 16465, 16438, 16278, 16383, 16475, 16368, 16415, 16325, 16432, 16379, 16340, 16504, 16301, 16436, 16334, 16522, 16343, 16434, 16470, 16349, 16359, 16341, 16418, 16373, 16449, 16553, 16346, 16268, 16422, 16443, 16314, 16450, 16392, 16405, 16419, 16359, 16486, 16376, 16406, 16379, 16345, 16591, 16521, 16371, 16295, 16392, 16324, 16404, 16355, 16384, 16413, 16424, 16377, 16452, 16424, 16342, 16430, 16498, 16360, 16341, 16277, 16371, 16393, 16452, 16288, 16346, 16454, 16482, 16373, 16264, 16267, 16361, 16473, 16309, 16442, 16343, 16406, 16276, 16416, 16335, 16319, 16393, 16327, 16325, 16448, 16334, 16324, 16342, 16490, 16372, 16303, 16487, 16350, 16532, 16262, 16348, 16309, 16377, 16378, 16355, 16532, 16284, 16369, 16375, 16457, 16527, 16258, 16468, 16367, 16344, 16453, 16409, 16375, 16531, 16417, 16382, 16316, 16523, 16488, 16290, 16419, 16421, 16406, 16295, 16442, 16528, 16319, 16417, 16432, 16379, 16282, 16371, 16426, 16331, 16435, 16325, 16436, 16421, 16360, 16450, 16271, 16431, 16320, 16511, 16306, 16468, 16462, 16357, 16366, 16336, 16419, 16365, 16428, 16525, 16370, 16266, 16447, 16434, 16290, 16431, 16379, 16381, 16477, 16376, 16480, 16391, 16437, 16361, 16370, 16582, 16526, 16377, 16294, 16434, 16335, 16401, 16337, 16438, 16427, 16389, 16340, 16433, 16445, 16341, 16472, 16501, 16369, 16354, 16271, 16379, 16373, 16419, 16322, 16356, 16433, 16454, 16396, 16285, 16264, 16365, 16459, 16339, 16440, 16337, 16362, 16366, 16401, 16362, 16329, 16413, 16405, 16325, 16401, 16312, 16358, 16339, 16456, 16384, 16310, 16431, 16287, 16592, 16290, 16326, 16313, 16420, 16355, 16294, 16509, 16280, 16409, 16364, 16441, 16483, 16268, 16443, 16397, 16322, 16405, 16439, 16402, 16500, 16381, 16425, 16375, 16485, 16525, 16300, 16437, 16436, 16433, 16358, 16405, 16442, 16307, 16432, 16453, 16398, 16304, 16395, 16449, 16321, 16426, 16272, 16419, 16418, 16352, 16477, 16261, 16474, 16382, 16498, 16314, 16416, 16398, 16372, 16386, 16350, 16407, 16372, 16412, 16557, 16365, 16204, 16414, 16416, 16283, 16428, 16381, 16413, 16439, 16359, 16444, 16402, 16353, 16343, 16396, 16549, 16506, 16370, 16315, 16429, 16340, 16416, 16372, 16396, 16390, 16417, 16317, 16427, 16394, 16365, 16452, 16487, 16315, 16306, 16257, 16384, 16396, 16378, 16275, 16347, 16447, 16440, 16397, 16204, 16322, 16320, 16526, 16338, 16390, 16279, 16368, 16300, 16420, 16301, 16335, 16404, 16360, 16283, 16409, 16323, 16368, 16345, 16405, 16355, 16264, 16488, 16366, 16540, 16264, 16352, 16286, 16437, 16342, 16354, 16485, 16339, 16416, 16365, 16438, 16487, 16247, 16467, 16415, 16324, 16445, 16408, 16368, 16496, 16414, 16411, 16334, 16510, 16554, 16304, 16452, 16441, 16442, 16347, 16412, 16534, 16310, 16455, 16443, 16407, 16260, 16432, 16459, 16406, 16465, 16318, 16449, 16423, 16325, 16463, 16275, 16428, 16319, 16511, 16286, 16417, 16465, 16310, 16366, 16381, 16443, 16406, 16454, 16526, 16379, 16267, 16381, 16402, 16293, 16451, 16415, 16397, 16447, 16353, 16429, 16381, 16393, 16388, 16329, 16649, 16496, 16388, 16268, 16392, 16338, 16404, 16326, 16372, 16425, 16437, 16365, 16441, 16455, 16351, 16454, 16474, 16359, 16323, 16255, 16381, 16424, 16381, 16298, 16285, 16457, 16412, 16399, 16267, 16294, 16380, 16483, 16335, 16448, 16331, 16390, 16315, 16394, 16345, 16332, 16406, 16369, 16300, 16413, 16299, 16382, 16331, 16443, 16456, 16305, 16466, 16324, 16565, 16282, 16302, 16324, 16461, 16334, 16386, 16555, 16319, 16394, 16337, 16484, 16493, 16271, 16458, 16419, 16301, 16440, 16393, 16323, 16479, 16403, 16324, 16325, 16502, 16443, 16318, 16466, 16409, 16432, 16346, 16477, 16480, 16289, 16420, 16498, 16463, 16264, 16386, 16535, 16270, 16453, 16308, 16346, 16397, 16356, 16499, 16300, 16440, 16274, 16515, 16274, 16398, 16478, 16345, 16365, 16338, 16461, 16311, 16483, 16459, 16356, 16257, 16446, 16395, 16327, 16445, 16448, 16447, 16444, 16355, 16482, 16396, 16401, 16400, 16387, 16534, 16498, 16344, 16293, 16439, 16352, 16407, 16367, 16392, 16429, 16421, 16352, 16462, 16390, 16351, 16464, 16505, 16319, 16324, 16200, 16373, 16387, 16404, 16261, 16297, 16443, 16459, 16392, 16243, 16312, 16344, 16485, 16296, 16424, 16316, 16401, 16344, 16412, 16345, 16350, 16419, 16368, 16357, 16413, 16308, 16366, 16376, 16432, 16411, 16248, 16470, 16384, 16572, 16270, 16338, 16306, 16434, 16337, 16345, 16503, 16311, 16395, 16379, 16450, 16490, 16246, 16461, 16414, 16294, 16398, 16411, 16383, 16493, 16396, 16405, 16350, 16491, 16522, 16329, 16483, 16501, 16408, 16320, 16481, 16485, 16293, 16426, 16433, 16427, 16281, 16360, 16469, 16329, 16402, 16311, 16382, 16415, 16362, 16463, 16291, 16441, 16323, 16512, 16322, 16467, 16431, 16302, 16400, 16310, 16420, 16364, 16446, 16500, 16357, 16281, 16407, 16428, 16325, 16486, 16388, 16467, 16460, 16403, 16475, 16424, 16438, 16425, 16421, 16609, 16489, 16380, 16264, 16439, 16366, 16430, 16374, 16411, 16429, 16437, 16321, 16446, 16410, 16363, 16465, 16497, 16308, 16333, 16218, 16359, 16393, 16374, 16285, 16297, 16455, 16434, 16401, 16244, 16284, 16374, 16501, 16314, 16451, 16323, 16389, 16322, 16410, 16296, 16340, 16406, 16368, 16313, 16446, 16280, 16361, 16384, 16446, 16384, 16285, 16464, 16364, 16586, 16279, 16339, 16278, 16466, 16342, 16374, 16495, 16300, 16402, 16382, 16486, 16491, 16244, 16461, 16405, 16309, 16402, 16411, 16347, 16478, 16412, 16430, 16349, 16486, 16521, 16295, 16463, 16466, 16418, 16309, 16470, 16503, 16277, 16403, 16461, 16448, 16275, 16371, 16484, 16361, 16384, 16322, 16410, 16417, 16310, 16488, 16289, 16428, 16314, 16475, 16314, 16448, 16441, 16329, 16385, 16336, 16417, 16372, 16468, 16532, 16340, 16253, 16428, 16404, 16337, 16449, 16380, 16432, 16392, 16375, 16467, 16419, 16387, 16399, 16390, 16593, 16519, 16387, 16285, 16407, 16355, 16439, 16360, 16377, 16437, 16444, 16342, 16447, 16405, 16346, 16480, 16509, 16338, 16338, 16225, 16365, 16365, 16362, 16289, 16273, 16448, 16444, 16360, 16255, 16262, 16348, 16470, 16318, 16393, 16316, 16364, 16355, 16377, 16323, 16315, 16416, 16349, 16346, 16435, 16297, 16394, 16331, 16457, 16381, 16281, 16517, 16367, 16555, 16267, 16337, 16323, 16465, 16359, 16394, 16514, 16309, 16358, 16391, 16516, 16498, 16272, 16480, 16395, 16341, 16426, 16430, 16377, 16491, 16417, 16395, 16389, 16470, 16509, 16336, 16460, 16459, 16385, 16339, 16476, 16504, 16327, 16420, 16471, 16448, 16295, 16373, 16489, 16351, 16387, 16316, 16394, 16387, 16346, 16484, 16326, 16462, 16288, 16521, 16315, 16408, 16462, 16341, 16355, 16353, 16419, 16359, 16467, 16532, 16328, 16265, 16426, 16420, 16349, 16430, 16419, 16450, 16433, 16351, 16500, 16381, 16396, 16410, 16376, 16591, 16531, 16387, 16269, 16394, 16334, 16409, 16368, 16387, 16428, 16455, 16338, 16467, 16413, 16354, 16445, 16502, 16354, 16380, 16306, 16408, 16393, 16437, 16294, 16331, 16448, 16428, 16358, 16286, 16269, 16347, 16441, 16347, 16438, 16353, 16343, 16350, 16430, 16309, 16322, 16354, 16335, 16356, 16383, 16325, 16348, 16332, 16384, 16417, 16310, 16454, 16384, 16576, 16230, 16392, 16340, 16373, 16377, 16366, 16501, 16278, 16415, 16344, 16422, 16500, 16301, 16461, 16419, 16293, 16469, 16433, 16354, 16494, 16388, 16418, 16373, 16480, 16416, 16304, 16410, 16430, 16403, 16313, 16453, 16500, 16305, 16427, 16429, 16360, 16308, 16366, 16503, 16340, 16454, 16320, 16405, 16414, 16337, 16507, 16275, 16488, 16297, 16477, 16254, 16408, 16416, 16390, 16346, 16304, 16428, 16394, 16450, 16518, 16338, 16266, 16444, 16423, 16360, 16431, 16414, 16435, 16445, 16349, 16419, 16381, 16380, 16378, 16375, 16550, 16486, 16372, 16282, 16443, 16374, 16420, 16314, 16400, 16420, 16445, 16317, 16457, 16425, 16319, 16420, 16453, 16374, 16343, 16270, 16372, 16403, 16424, 16346, 16345, 16456, 16422, 16408, 16246, 16284, 16382, 16484, 16378, 16420, 16336, 16384, 16313, 16410, 16326, 16308, 16366, 16369, 16310, 16429, 16305, 16298, 16331, 16462, 16455, 16292, 16417, 16315, 16588, 16261, 16326, 16293, 16392, 16319, 16358, 16510, 16326, 16432, 16360, 16396, 16451, 16286, 16393, 16440, 16287, 16438, 16398, 16304, 16462, 16389, 16420, 16332, 16494, 16525, 16301, 16416, 16391, 16432, 16361, 16430, 16443, 16235, 16374, 16469, 16411, 16276, 16406, 16499, 16356, 16420, 16284, 16404, 16387, 16343, 16511, 16291, 16467, 16325, 16450, 16294, 16432, 16436, 16323, 16395, 16394, 16426, 16357, 16436, 16502, 16311, 16221, 16435, 16415, 16257, 16406, 16415, 16367, 16438, 16369, 16414, 16463, 16403, 16311, 16402, 16535, 16475, 16378, 16287, 16499, 16375, 16365, 16286, 16352, 16403, 16402, 16358, 16485, 16414, 16336, 16514, 16526, 16311, 16334, 16261, 16378, 16363, 16402, 16290, 16344, 16451, 16426, 16365, 16215, 16290, 16354, 16505, 16348, 16431, 16263, 16392, 16364, 16451, 16329, 16305, 16428, 16397, 16379, 16421, 16301, 16399, 16325, 16506, 16383, 16258, 16534, 16356, 16542, 16253, 16246, 16329, 16502, 16350, 16368, 16511, 16330, 16405, 16413, 16424, 16520, 16278, 16486, 16395, 16339, 16390, 16413, 16387, 16473, 16426, 16427, 16376, 16486, 16504, 16292, 16468, 16480, 16424, 16348, 16428, 16505, 16266, 16407, 16464, 16473, 16300, 16369, 16503, 16397, 16367, 16306, 16430, 16399, 16341, 16510, 16279, 16444, 16307, 16513, 16343, 16400, 16444, 16286, 16345, 16340, 16441, 16372, 16452, 16501, 16384, 16256, 16460, 16390, 16277, 16496, 16384, 16387, 16460, 16388, 16484, 16400, 16367, 16361, 16334, 16587, 16503, 16378, 16301, 16405, 16353, 16428, 16318, 16409, 16437, 16428, 16387, 16486, 16376, 16392, 16440, 16565, 16333, 16325, 16245, 16333, 16407, 16411, 16306, 16316, 16441, 16420, 16397, 16283, 16314, 16409, 16459, 16364, 16474, 16371, 16381, 16262, 16424, 16262, 16348, 16402, 16377, 16309, 16468, 16337, 16371, 16405, 16460, 16357, 16308, 16447, 16333, 16526, 16256, 16374, 16285, 16407, 16376, 16362, 16525, 16280, 16424, 16380, 16388, 16411, 16257, 16485, 16432, 16316, 16489, 16373, 16359, 16438, 16412, 16409, 16292, 16496, 16476, 16243, 16428, 16365, 16465, 16341, 16375, 16547, 16388, 16486, 16460, 16420, 16284, 16419, 16431, 16386, 16451, 16373, 16490, 16411, 16334, 16534, 16256, 16430, 16326, 16488, 16303, 16468, 16426, 16355, 16315, 16282, 16421, 16394, 16398, 16479, 16347, 16205, 16416, 16399, 16316, 16463, 16394, 16359, 16390, 16350, 16457, 16419, 16425, 16338, 16348, 16549, 16480, 16366, 16325, 16370, 16393, 16422, 16365, 16404, 16441, 16409, 16332, 16361, 16430, 16329, 16491, 16459, 16344, 16395, 16285, 16319, 16410, 16402, 16259, 16302, 16488, 16427, 16352, 16261, 16304, 16399, 16529, 16342, 16384, 16284, 16394, 16293, 16483, 16295, 16323, 16412, 16427, 16336, 16406, 16300, 16401, 16298, 16468, 16355, 16294, 16494, 16286, 16580, 16348, 16294, 16261, 16456, 16362, 16312, 16525, 16300, 16453, 16317, 16486, 16489, 16256, 16474, 16370, 16336, 16381, 16390, 16390, 16451, 16393, 16399, 16364, 16452, 16457, 16319, 16494, 16426, 16387, 16385, 16507, 16473, 16289, 16386, 16479, 16373, 16219, 16429, 16466, 16365, 16398, 16332, 16410, 16403, 16323, 16505, 16253, 16461, 16325, 16462, 16275, 16370, 16428, 16335, 16397, 16338, 16420, 16341, 16427, 16541, 16364, 16203, 16435, 16379, 16260, 16466, 16338, 16418, 16411, 16389, 16503, 16393, 16372, 16365, 16365, 16519, 16445, 16370, 16295, 16364, 16357, 16402, 16343, 16416, 16414, 16400, 16374, 16481, 16416, 16355, 16473, 16501, 16333, 16298, 16245, 16366, 16368, 16406, 16275, 16377, 16472, 16476, 16399, 16245, 16285, 16360, 16456, 16312, 16433, 16289, 16379, 16322, 16426, 16316, 16355, 16390, 16402, 16334, 16410, 16317, 16285, 16396, 16381, 16305, 16247, 16432, 16281, 16562, 16270, 16319, 16302, 16429, 16355, 16353, 16542, 16321, 16416, 16353, 16393, 16448, 16332, 16487, 16348, 16368, 16428, 16367, 16368, 16468, 16434, 16412, 16354, 16480, 16529, 16226, 16389, 16351, 16507, 16383, 16370, 16496, 16288, 16462, 16460, 16402, 16286, 16405, 16484, 16374, 16404, 16275, 16403, 16465, 16331, 16479, 16277, 16459, 16347, 16480, 16271, 16436, 16404, 16399, 16377, 16321, 16439, 16417, 16414, 16523, 16360, 16208, 16371, 16408, 16340, 16448, 16394, 16360, 16383, 16390, 16450, 16378, 16384, 16381, 16386, 16586, 16538, 16362, 16308, 16408, 16371, 16428, 16344, 16502, 16451, 16434, 16364, 16418, 16413, 16353, 16499, 16494, 16369, 16410, 16255, 16324, 16398, 16408, 16306, 16351, 16477, 16390, 16441, 16258, 16326, 16399, 16484, 16322, 16417, 16331, 16422, 16241, 16445, 16303, 16328, 16372, 16403, 16378, 16405, 16304, 16392, 16303, 16444, 16409, 16301, 16470, 16300, 16545, 16311, 16365, 16263, 16445, 16365, 16352, 16498, 16300, 16439, 16315, 16480, 16486, 16252, 16434, 16379, 16312, 16340, 16375, 16294, 16458, 16373, 16347, 16330, 16473, 16481, 16322, 16456, 16375, 16441, 16335, 16466, 16541, 16302, 16400, 16496, 16391, 16226, 16372, 16503, 16354, 16408, 16329, 16369, 16416, 16339, 16477, 16264, 16398, 16255, 16507, 16247, 16398, 16465, 16354, 16331, 16320, 16463, 16357, 16491, 16492, 16382, 16194, 16402, 16388, 16283, 16453, 16347, 16380, 16452, 16401, 16444, 16378, 16309, 16373, 16382, 16530, 16465, 16368, 16331, 16419, 16332, 16424, 16377, 16431, 16405, 16444, 16382, 16455, 16397, 16342, 16468, 16521, 16349, 16364, 16247, 16361, 16382, 16395, 16306, 16334, 16483, 16490, 16426, 16197, 16305, 16371, 16491, 16365, 16455, 16310, 16369, 16330, 16445, 16292, 16355, 16385, 16395, 16375, 16440, 16337, 16345, 16402, 16390, 16396, 16303, 16403, 16361, 16535, 16321, 16310, 16274, 16362, 16320, 16306, 16442, 16296, 16446, 16383, 16431, 16460, 16309, 16397, 16344, 16336, 16330, 16404, 16392, 16462, 16375, 16415, 16360, 16461, 16528, 16322, 16470, 16396, 16498, 16320, 16475, 16474, 16308, 16430, 16379, 16391, 16349, 16414, 16469, 16343, 16477, 16300, 16390, 16410, 16296, 16488, 16297, 16435, 16316, 16460, 16316, 16448, 16441, 16389, 16389, 16385, 16439, 16406, 16456, 16524, 16365, 16212, 16396, 16441, 16355, 16471, 16366, 16379, 16446, 16422, 16447, 16431, 16384, 16353, 16411, 16576, 16440, 16368, 16328, 16400, 16403, 16447, 16372, 16421, 16395, 16417, 16323, 16419, 16382, 16293, 16508, 16463, 16351, 16374, 16240, 16363, 16395, 16362, 16306, 16375, 16420, 16400, 16397, 16240, 16210, 16367, 16501, 16317, 16376, 16306, 16383, 16249, 16450, 16334, 16343, 16396, 16342, 16320, 16356, 16298, 16375, 16307, 16441, 16351, 16279, 16465, 16336, 16579, 16255, 16375, 16266, 16473, 16371, 16305, 16534, 16332, 16419, 16309, 16427, 16534, 16224, 16438, 16420, 16351, 16379, 16390, 16319, 16463, 16352, 16376, 16341, 16467, 16563, 16280, 16416, 16381, 16408, 16338, 16438, 16550, 16312, 16476, 16471, 16432, 16289, 16438, 16507, 16409, 16419, 16293, 16405, 16401, 16311, 16458, 16268, 16437, 16379, 16512, 16263, 16398, 16393, 16332, 16341, 16399, 16452, 16392, 16470, 16555, 16356, 16174, 16365, 16387, 16244, 16462, 16380, 16348, 16410, 16355, 16418, 16410, 16347, 16370, 16314, 16607, 16522, 16382, 16293, 16357, 16274, 16437, 16330, 16393, 16440, 16460, 16368, 16418, 16382, 16365, 16493, 16464, 16322, 16318, 16237, 16408, 16374, 16398, 16235, 16339, 16421, 16419, 16387, 16253, 16305, 16384, 16504, 16334, 16461, 16273, 16390, 16301, 16406, 16310, 16373, 16370, 16387, 16299, 16373, 16285, 16399, 16365, 16467, 16387, 16288, 16439, 16350, 16537, 16292, 16255, 16290, 16479, 16313, 16276, 16471, 16318, 16464, 16352, 16403, 16445, 16241, 16430, 16360, 16359, 16382, 16403, 16408, 16469, 16372, 16341, 16391, 16474, 16517, 16295, 16453, 16435, 16429, 16355, 16462, 16473, 16301, 16479, 16431, 16426, 16266, 16470, 16467, 16323, 16455, 16341, 16420, 16444, 16338, 16485, 16302, 16407, 16385, 16486, 16325, 16426, 16460, 16361, 16352, 16374, 16431, 16323, 16421, 16559, 16327, 16257, 16416, 16416, 16280, 16489, 16456, 16377, 16432, 16384, 16433, 16382, 16398, 16400, 16343, 16558, 16484, 16317, 16270, 16384, 16342, 16447, 16360, 16390, 16361, 16452, 16333, 16385, 16347, 16353, 16490, 16474, 16340, 16399, 16259, 16421, 16404, 16399, 16260, 16370, 16465, 16445, 16407, 16234, 16276, 16319, 16457, 16340, 16454, 16348, 16360, 16363, 16449, 16343, 16324, 16386, 16365, 16383, 16385, 16310, 16356, 16403, 16408, 16397, 16358, 16440, 16326, 16566, 16268, 16322, 16322, 16399, 16377, 16352, 16515, 16287, 16441, 16343, 16373, 16498, 16279, 16449, 16377, 16285, 16384, 16399, 16319, 16443, 16417, 16389, 16314, 16487, 16494, 16298, 16443, 16401, 16477, 16304, 16421, 16483, 16296, 16461, 16452, 16414, 16310, 16355, 16477, 16338, 16451, 16282, 16398, 16470, 16302, 16464, 16283, 16452, 16293, 16490, 16250, 16451, 16410, 16344, 16414, 16368, 16469, 16365, 16455, 16455, 16387, 16275, 16440, 16415, 16330, 16441, 16439, 16349, 16453, 16430, 16455, 16396, 16388, 16335, 16350, 16617, 16470, 16317, 16275, 16438, 16392, 16440, 16391, 16460, 16415, 16383, 16336, 16396, 16370, 16360, 16504, 16459, 16315, 16418, 16217, 16409, 16407, 16390, 16305, 16325, 16395, 16384, 16367, 16316, 16265, 16354, 16496, 16338, 16416, 16324, 16349, 16285, 16475, 16292, 16340, 16371, 16340, 16313, 16415, 16322, 16436, 16396, 16482, 16342, 16299, 16455, 16297, 16522, 16298, 16304, 16276, 16453, 16383, 16311, 16499, 16297, 16386, 16340, 16448, 16507, 16230, 16458, 16415, 16387, 16346, 16396, 16308, 16481, 16364, 16388, 16311, 16493, 16531, 16280, 16435, 16407, 16392, 16288, 16419, 16560, 16369, 16375, 16441, 16438, 16253, 16415, 16491, 16401, 16399, 16306, 16385, 16375, 16288, 16526, 16195, 16461, 16307, 16439, 16297, 16441, 16427, 16372, 16366, 16351, 16385, 16371, 16493, 16571, 16364, 16196, 16458, 16438, 16300, 16463, 16424, 16415, 16443, 16361, 16466, 16422, 16442, 16378, 16335, 16564, 16476, 16374, 16301, 16403, 16334, 16477, 16323, 16436, 16481, 16402, 16345, 16489, 16434, 16380, 16512, 16488, 16339, 16372, 16242, 16371, 16383, 16405, 16331, 16299, 16473, 16406, 16358, 16216, 16331, 16339, 16491, 16311, 16420, 16279, 16376, 16339, 16476, 16330, 16311, 16395, 16376, 16346, 16409, 16322, 16411, 16317, 16439, 16337, 16282, 16480, 16323, 16530, 16287, 16316, 16317, 16407, 16337, 16356, 16473, 16292, 16433, 16367, 16409, 16474, 16292, 16445, 16442, 16362, 16361, 16428, 16330, 16426, 16350, 16431, 16336, 16573, 16500, 16300, 16447, 16422, 16429, 16328, 16451, 16461, 16306, 16428, 16473, 16502, 16295, 16425, 16526, 16339, 16405, 16283, 16453, 16401, 16296, 16546, 16229, 16438, 16277, 16438, 16322, 16390, 16418, 16340, 16364, 16335, 16477, 16288, 16454, 16514, 16397, 16253, 16446, 16406, 16253, 16480, 16394, 16391, 16446, 16376, 16475, 16406, 16431, 16353, 16301, 16607, 16470, 16319, 16278, 16415, 16351, 16392, 16317, 16412, 16433, 16393, 16314, 16446, 16454, 16310, 16521, 16512, 16337, 16363, 16261, 16395, 16421, 16407, 16299, 16333, 16477, 16396, 16369, 16267, 16282, 16354, 16490, 16357, 16437, 16299, 16389, 16308, 16455, 16314, 16290, 16405, 16379, 16317, 16370, 16310, 16364, 16340, 16417, 16366, 16246, 16476, 16364, 16572, 16260, 16311, 16316, 16406, 16360, 16305, 16487, 16281, 16447, 16335, 16389, 16457, 16274, 16448, 16454, 16315, 16443, 16441, 16342, 16494, 16355, 16436, 16327, 16526, 16495, 16317, 16424, 16452, 16431, 16347, 16424, 16493, 16302, 16448, 16471, 16401, 16263, 16435, 16506, 16369, 16427, 16315, 16446, 16426, 16322, 16517, 16245, 16422, 16334, 16479, 16281, 16438, 16410, 16372, 16358, 16330, 16445, 16361, 16424, 16523, 16422, 16208, 16414, 16431, 16276, 16466, 16422, 16383, 16455, 16322, 16424, 16374, 16410, 16357, 16327, 16593, 16460, 16356, 16300, 16448, 16363, 16398, 16296, 16402, 16434, 16423, 16350, 16435, 16468, 16332, 16467, 16496, 16374, 16333, 16250, 16413, 16405, 16429, 16284, 16324, 16471, 16429, 16380, 16247, 16305, 16349, 16470, 16335, 16414, 16307, 16352, 16354, 16482, 16323, 16308, 16387, 16381, 16317, 16407, 16308, 16394, 16332, 16452, 16398, 16258, 16474, 16291, 16560, 16283, 16254, 16344, 16410, 16348, 16313, 16506, 16324, 16431, 16345, 16416, 16444, 16274, 16441, 16413, 16293, 16420, 16432, 16374, 16474, 16412, 16416, 16312, 16543, 16522, 16311, 16456, 16439, 16446, 16324, 16411, 16447, 16297, 16413, 16479, 16413, 16252, 16399, 16478, 16333, 16397, 16305, 16427, 16460, 16326, 16512, 16262, 16419, 16325, 16492, 16281, 16448, 16431, 16359, 16349, 16317, 16467, 16350, 16441, 16486, 16381, 16218, 16464, 16430, 16335, 16436, 16408, 16384, 16464, 16366, 16430, 16417, 16438, 16354, 16351, 16581, 16469, 16356, 16303, 16469, 16368, 16414, 16361, 16387, 16406, 16376, 16347, 16436, 16451, 16363, 16498, 16512, 16301, 16360, 16238, 16412, 16411, 16390, 16305, 16297, 16448, 16427, 16367, 16246, 16265, 16359, 16502, 16367, 16424, 16283, 16398, 16339, 16448, 16310, 16331, 16400, 16378, 16354, 16400, 16318, 16365, 16360, 16462, 16409, 16287, 16454, 16340, 16573, 16238, 16319, 16312, 16425, 16349, 16322, 16495, 16302, 16427, 16369, 16418, 16495, 16288, 16453, 16440, 16314, 16431, 16419, 16352, 16504, 16401, 16431, 16297, 16520, 16507, 16263, 16448, 16444, 16433, 16325, 16426, 16493, 16289, 16432, 16442, 16431, 16256, 16408, 16504, 16362, 16438, 16299, 16423, 16408, 16320, 16506, 16242, 16450, 16326, 16474, 16293, 16420, 16451, 16337, 16382, 16345, 16426, 16353, 16409, 16503, 16367, 16224, 16433, 16400, 16287, 16448, 16407, 16406, 16468, 16367, 16439, 16391, 16454, 16370, 16351, 16529, 16487, 16352, 16274, 16433, 16384, 16422, 16322, 16400, 16455, 16403, 16372, 16461, 16428, 16358, 16443, 16508, 16353, 16351, 16260, 16381, 16387, 16399, 16290, 16305, 16478, 16433, 16367, 16256, 16268, 16348, 16487, 16331, 16413, 16298, 16399, 16343, 16433, 16312, 16309, 16406, 16368, 16337, 16403, 16296, 16355, 16347, 16452, 16398, 16272, 16490, 16303, 16577, 16245, 16299, 16322, 16415, 16339, 16318, 16529, 16328, 16416, 16354, 16430, 16499, 16277, 16479, 16411, 16308, 16420, 16419, 16362, 16492, 16410, 16428, 16318, 16529, 16521, 16284, 16440, 16436, 16425, 16320, 16409, 16467, 16293, 16415, 16451, 16432, 16256, 16401, 16493, 16340, 16412, 16308, 16429, 16419, 16331, 16491, 16253, 16456, 16339, 16479, 16293, 16425, 16433, 16321, 16392, 16351, 16435, 16348, 16413, 16507, 16347, 16230, 16446, 16405, 16286, 16460, 16387, 16424, 16446, 16360, 16476, 16418, 16438, 16355, 16386, 16556, 16511, 16356, 16291, 16440, 16350, 16412, 16316, 16387, 16450, 16388, 16374, 16453, 16435, 16375, 16473, 16498, 16317, 16341, 16234, 16355, 16381, 16392, 16273, 16309, 16472, 16437, 16366, 16230, 16278, 16352, 16494, 16328, 16417, 16292, 16385, 16332, 16438, 16302, 16310, 16410, 16382, 16341, 16413, 16302, 16352, 16355, 16459, 16382, 16253, 16501, 16331, 16566, 16266, 16308, 16299, 16455, 16347, 16346, 16515, 16339, 16406, 16383, 16428, 16488, 16275, 16497, 16403, 16312, 16409, 16427, 16365, 16490, 16424, 16439, 16330, 16526, 16518, 16274, 16443, 16476, 16423, 16340, 16430, 16486, 16281, 16422, 16458, 16430, 16258, 16371, 16477, 16377, 16400, 16312, 16438, 16411, 16342, 16499, 16259, 16422, 16337, 16480, 16318, 16436, 16438, 16320, 16353, 16326, 16419, 16364, 16420, 16535, 16362, 16244, 16407, 16414, 16295, 16440, 16376, 16416, 16428, 16371, 16462, 16394, 16404, 16379, 16383, 16595, 16517, 16381, 16292, 16417, 16339, 16407, 16323, 16389, 16433, 16411, 16372, 16460, 16433, 16376, 16441, 16530, 16358, 16338, 16291, 16364, 16382, 16397, 16291, 16322, 16465, 16448, 16384, 16246, 16275, 16358, 16490, 16347, 16428, 16320, 16366, 16327, 16427, 16325, 16311, 16396, 16379, 16311, 16398, 16300, 16345, 16335, 16441, 16365, 16286, 16474, 16337, 16556, 16252, 16318, 16308, 16430, 16366, 16326, 16493, 16293, 16407, 16370, 16451, 16475, 16278, 16474, 16406, 16310, 16470, 16422, 16384, 16496, 16409, 16407, 16340, 16518, 16510, 16316, 16440, 16433, 16427, 16340, 16410, 16490, 16333, 16439, 16443, 16399, 16294, 16425, 16458, 16369, 16437, 16317, 16465, 16419, 16337, 16486, 16245, 16466, 16345, 16479, 16316, 16410, 16452, 16362, 16343, 16340, 16438, 16366, 16422, 16549, 16365, 16214, 16425, 16422, 16306, 16465, 16386, 16407, 16424, 16336, 16468, 16379, 16375, 16354, 16359, 16572, 16496, 16364, 16313, 16419, 16328, 16388, 16326, 16372, 16406, 16405, 16334, 16431, 16446, 16346, 16458, 16495, 16352, 16334, 16309, 16386, 16410, 16425, 16302, 16326, 16441, 16425, 16384, 16225, 16332, 16363, 16517, 16376, 16444, 16309, 16376, 16300, 16407, 16326, 16314, 16400, 16349, 16292, 16433, 16327, 16335, 16320, 16439, 16389, 16271, 16484, 16336, 16567, 16280, 16316, 16322, 16431, 16348, 16360, 16537, 16316, 16433, 16333, 16456, 16475, 16286, 16456, 16435, 16273, 16490, 16375, 16359, 16492, 16432, 16378, 16324, 16507, 16485, 16317, 16420, 16430, 16457, 16369, 16427, 16528, 16319, 16425, 16486, 16405, 16280, 16414, 16465, 16353, 16467, 16320, 16418, 16404, 16331, 16489, 16263, 16439, 16293, 16499, 16278, 16404, 16452, 16341, 16367, 16341, 16458, 16385, 16460, 16492, 16399, 16268, 16434, 16432, 16271, 16448, 16397, 16400, 16485, 16368, 16447, 16397, 16421, 16372, 16346, 16568, 16453, 16364, 16298, 16459, 16348, 16369, 16335, 16389, 16464, 16394, 16387, 16442, 16450, 16342, 16435, 16524, 16321, 16362, 16236, 16398, 16445, 16386, 16311, 16287, 16471, 16414, 16416, 16285, 16300, 16383, 16493, 16373, 16437, 16308, 16445, 16306, 16403, 16342, 16346, 16419, 16366, 16339, 16454, 16297, 16367, 16329, 16463, 16438, 16271, 16450, 16344, 16532, 16269, 16286, 16304, 16433, 16326, 16306, 16525, 16317, 16421, 16326, 16396, 16502, 16250, 16436, 16408, 16312, 16432, 16410, 16337, 16496, 16369, 16344, 16332, 16483, 16526, 16335, 16488, 16438, 16422, 16332, 16449, 16484, 16297, 16398, 16481, 16386, 16229, 16402, 16485, 16325, 16434, 16357, 16382, 16429, 16321, 16537, 16291, 16443, 16323, 16522, 16316, 16470, 16415, 16331, 16385, 16368, 16447, 16361, 16397, 16511, 16365, 16232, 16426, 16426, 16267, 16459, 16396, 16429, 16471, 16371, 16463, 16384, 16461, 16348, 16345, 16565, 16449, 16373, 16332, 16458, 16381, 16407, 16327, 16415, 16420, 16394, 16382, 16429, 16432, 16347, 16472, 16504, 16313, 16330, 16228, 16389, 16406, 16382, 16272, 16302, 16471, 16445, 16386, 16206, 16314, 16350, 16486, 16312, 16437, 16278, 16389, 16370, 16422, 16341, 16343, 16403, 16335, 16311, 16428, 16317, 16376, 16373, 16427, 16395, 16259, 16433, 16343, 16561, 16287, 16310, 16316, 16435, 16346, 16341, 16538, 16319, 16414, 16372, 16433, 16492, 16268, 16441, 16405, 16315, 16376, 16427, 16353, 16474, 16393, 16410, 16304, 16537, 16551, 16305, 16468, 16481, 16432, 16321, 16462, 16471, 16279, 16404, 16421, 16444, 16272, 16395, 16479, 16333, 16438, 16309, 16389, 16420, 16301, 16495, 16286, 16440, 16348, 16470, 16329, 16475, 16435, 16315, 16404, 16351, 16450, 16354, 16447, 16526, 16367, 16261, 16410, 16429, 16319, 16462, 16401, 16442, 16438, 16380, 16440, 16432, 16463, 16392, 16365, 16616, 16491, 16360, 16276, 16425, 16369, 16433, 16358, 16374, 16433, 16388, 16354, 16440, 16425, 16360, 16460, 16500, 16342, 16327, 16247, 16368, 16386, 16399, 16276, 16286, 16470, 16423, 16366, 16244, 16267, 16319, 16474, 16327, 16423, 16310, 16407, 16353, 16389, 16335, 16328, 16420, 16336, 16337, 16413, 16307, 16364, 16380, 16468, 16403, 16268, 16496, 16357, 16575, 16250, 16296, 16353, 16447, 16363, 16360, 16539, 16330, 16401, 16368, 16457, 16517, 16290, 16465, 16406, 16330, 16408, 16450, 16337, 16483, 16401, 16389, 16343, 16529, 16508, 16281, 16432, 16479, 16430, 16324, 16457, 16477, 16293, 16425, 16482, 16448, 16259, 16378, 16504, 16303, 16417, 16300, 16380, 16438, 16352, 16499, 16313, 16458, 16303, 16528, 16300, 16457, 16451, 16351, 16376, 16347, 16449, 16352, 16462, 16497, 16374, 16291, 16459, 16423, 16317, 16457, 16436, 16451, 16461, 16372, 16488, 16393, 16424, 16397, 16358, 16577, 16517, 16332, 16255, 16444, 16350, 16401, 16327, 16423, 16473, 16425, 16363, 16448, 16416, 16368, 16459, 16500, 16330, 16341, 16224, 16366, 16389, 16394, 16307, 16313, 16449, 16441, 16380, 16254, 16274, 16369, 16479, 16325, 16435, 16305, 16371, 16341, 16421, 16318, 16308, 16385, 16391, 16315, 16415, 16284, 16337, 16366, 16460, 16409, 16266, 16460, 16367, 16603, 16277, 16326, 16302, 16419, 16351, 16349, 16499, 16294, 16400, 16385, 16454, 16479, 16275, 16439, 16404, 16298, 16446, 16406, 16381, 16507, 16421, 16439, 16326, 16505, 16514, 16316, 16465, 16453, 16417, 16317, 16451, 16481, 16274, 16428, 16449, 16409, 16285, 16382, 16485, 16345, 16397, 16295, 16430, 16419, 16332, 16489, 16284, 16447, 16338, 16477, 16316, 16424, 16436, 16338, 16387, 16357, 16425, 16364, 16435, 16511, 16359, 16228, 16432, 16389, 16314, 16459, 16394, 16449, 16400, 16360, 16475, 16404, 16410, 16375, 16407, 16567, 16494, 16376, 16310, 16423, 16353, 16427, 16340, 16377, 16428, 16421, 16334, 16443, 16439, 16345, 16477, 16505, 16323, 16340, 16246, 16346, 16367, 16382, 16310, 16323, 16449, 16438, 16337, 16258, 16272, 16370, 16520, 16326, 16400, 16311, 16383, 16310, 16447, 16287, 16325, 16417, 16362, 16332, 16426, 16302, 16365, 16357, 16469, 16403, 16289, 16504, 16384, 16569, 16281, 16345, 16315, 16445, 16355, 16355, 16501, 16327, 16406, 16389, 16422, 16466, 16248, 16450, 16382, 16329, 16449, 16416, 16402, 16488, 16442, 16421, 16363, 16504, 16504, 16277, 16425, 16478, 16399, 16311, 16433, 16542, 16295, 16427, 16450, 16418, 16268, 16395, 16515, 16396, 16434, 16320, 16454, 16387, 16358, 16508, 16253, 16463, 16330, 16480, 16309, 16434, 16459, 16339, 16349, 16323, 16398, 16394, 16458, 16553, 16352, 16255, 16428, 16411, 16316, 16444, 16416, 16432, 16431, 16384, 16439, 16375, 16397, 16356, 16340, 16557, 16515, 16368, 16285, 16360, 16320, 16409, 16308, 16372, 16440, 16431, 16363, 16458, 16434, 16335, 16446, 16491, 16373, 16353, 16293, 16382, 16355, 16420, 16303, 16376, 16450, 16454, 16374, 16271, 16263, 16373, 16501, 16345, 16446, 16311, 16421, 16255, 16405, 16305, 16330, 16401, 16358, 16315, 16409, 16320, 16292, 16325, 16448, 16424, 16287, 16437, 16303, 16532, 16238, 16325, 16268, 16423, 16334, 16328, 16545, 16315, 16439, 16339, 16439, 16521, 16283, 16474, 16344, 16304, 16464, 16387, 16343, 16465, 16374, 16374, 16338, 16481, 16436, 16271, 16393, 16387, 16448, 16314, 16447, 16526, 16265, 16394, 16487, 16350, 16273, 16371, 16467, 16326, 16460, 16346, 16441, 16427, 16364, 16474, 16264, 16445, 16367, 16480, 16266, 16421, 16448, 16375, 16373, 16296, 16441, 16343, 16407, 16496, 16360, 16247, 16468, 16375, 16304, 16473, 16399, 16394, 16433, 16410, 16500, 16404, 16429, 16326, 16400, 16540, 16484, 16388, 16334, 16402, 16338, 16374, 16317, 16402, 16455, 16405, 16353, 16352, 16433, 16291, 16483, 16519, 16346, 16351, 16230, 16388, 16370, 16398, 16276, 16350, 16483, 16451, 16405, 16303, 16283, 16372, 16486, 16305, 16443, 16331, 16375, 16322, 16402, 16328, 16321, 16388, 16330, 16383, 16403, 16290, 16342, 16317, 16406, 16363, 16303, 16477, 16332, 16490, 16259, 16350, 16265, 16421, 16373, 16355, 16541, 16312, 16426, 16372, 16424, 16440, 16244, 16462, 16380, 16342, 16420, 16413, 16385, 16499, 16389, 16442, 16369, 16468, 16535, 16351, 16458, 16447, 16416, 16335, 16433, 16535, 16285, 16404, 16438, 16422, 16290, 16388, 16456, 16350, 16408, 16366, 16431, 16435, 16337, 16511, 16266, 16452, 16322, 16448, 16297, 16463, 16387, 16311, 16410, 16374, 16389, 16302, 16379, 16550, 16332, 16235, 16371, 16390, 16324, 16428, 16403, 16380, 16401, 16348, 16448, 16378, 16375, 16332, 16422, 16594, 16470, 16463, 16322, 16419, 16358, 16423, 16349, 16380, 16437, 16444, 16364, 16432, 16387, 16343, 16496, 16475, 16308, 16319, 16295, 16380, 16407, 16386, 16289, 16317, 16434, 16405, 16407, 16242, 16314, 16340, 16457, 16353, 16451, 16340, 16326, 16322, 16402, 16315, 16333, 16422, 16362, 16290, 16434, 16369, 16391, 16349, 16418, 16399, 16306, 16498, 16328, 16529, 16302, 16361, 16293, 16482, 16379, 16370, 16547, 16345, 16394, 16355, 16482, 16514, 16291, 16468, 16429, 16306, 16431, 16409, 16326, 16460, 16425, 16364, 16314, 16496, 16501, 16269, 16418, 16397, 16483, 16344, 16431, 16518, 16281, 16400, 16455, 16457, 16286, 16359, 16505, 16342, 16427, 16314, 16376, 16374, 16342, 16468, 16310, 16441, 16245, 16532, 16262, 16365, 16465, 16326, 16356, 16334, 16447, 16355, 16471, 16479, 16388, 16266, 16434, 16439, 16318, 16399, 16437, 16369, 16506, 16382, 16408, 16375, 16393, 16412, 16333, 16553, 16533, 16406, 16291, 16416, 16316, 16388, 16389, 16404, 16466, 16414, 16391, 16468, 16393, 16325, 16415, 16558, 16296, 16374, 16169, 16409, 16472, 16396, 16372, 16278, 16408, 16450, 16392, 16322, 16270, 16427, 16417, 16315, 16469, 16325, 16371, 16376, 16430, 16348, 16332, 16442, 16370, 16315, 16454, 16283, 16384, 16338, 16439, 16403, 16299, 16446, 16401, 16593, 16303, 16327, 16311, 16400, 16342, 16357, 16496, 16261, 16375, 16345, 16419, 16453, 16252, 16391, 16404, 16333, 16434, 16364, 16358, 16501, 16378, 16370, 16313, 16438, 16516, 16330, 16478, 16388, 16376, 16316, 16540, 16502, 16311, 16386, 16438, 16413, 16334, 16371, 16475, 16348, 16369, 16314, 16409, 16375, 16333, 16487, 16296, 16427, 16297, 16513, 16331, 16432, 16430, 16358, 16397, 16296, 16417, 16379, 16445, 16522, 16359, 16223, 16434, 16437, 16304, 16456, 16431, 16424, 16462, 16361, 16481, 16361, 16451, 16398, 16382, 16597, 16478, 16342, 16312, 16423, 16415, 16438, 16377, 16425, 16398, 16445, 16344, 16476, 16420, 16344, 16451, 16487, 16321, 16351, 16269, 16415, 16450, 16365, 16295, 16278, 16467, 16453, 16358, 16282, 16294, 16392, 16491, 16318, 16427, 16349, 16408, 16342, 16442, 16300, 16336, 16441, 16315, 16323, 16460, 16317, 16391, 16322, 16395, 16412, 16309, 16426, 16339, 16561, 16287, 16371, 16306, 16400, 16345, 16347, 16531, 16324, 16426, 16321, 16476, 16501, 16225, 16402, 16408, 16309, 16359, 16468, 16348, 16499, 16385, 16414, 16384, 16492, 16474, 16292, 16440, 16426, 16413, 16264, 16512, 16488, 16284, 16405, 16406, 16444, 16267, 16397, 16461, 16317, 16411, 16353, 16335, 16416, 16307, 16490, 16348, 16469, 16354, 16467, 16299, 16439, 16412, 16378, 16405, 16352, 16402, 16400, 16480, 16521, 16358, 16293, 16433, 16436, 16272, 16379, 16391, 16425, 16429, 16356, 16412, 16404, 16432, 16389, 16326, 16562, 16505, 16325, 16249, 16425, 16432, 16421, 16333, 16401, 16457, 16390, 16355, 16461, 16412, 16376, 16489, 16517, 16324, 16317, 16238, 16330, 16405, 16354, 16272, 16303, 16493, 16439, 16363, 16236, 16242, 16329, 16438, 16332, 16409, 16307, 16421, 16332, 16430, 16316, 16356, 16360, 16369, 16362, 16393, 16285, 16351, 16398, 16389, 16398, 16273, 16449, 16346, 16646, 16217, 16318, 16307, 16419, 16375, 16353, 16511, 16330, 16408, 16374, 16471, 16516, 16318, 16496, 16383, 16330, 16389, 16459, 16327, 16423, 16390, 16461, 16311, 16484, 16487, 16283, 16377, 16393, 16458, 16310, 16471, 16416, 16235, 16415, 16406, 16383, 16278, 16345, 16524, 16350, 16390, 16325, 16355, 16430, 16316, 16482, 16309, 16477, 16362, 16497, 16324, 16431, 16428, 16377, 16423, 16350, 16489, 16360, 16395, 16475, 16369, 16255, 16422, 16409, 16325, 16472, 16428, 16412, 16405, 16384, 16460, 16427, 16422, 16389, 16378, 16547, 16539, 16345, 16248, 16415, 16370, 16431, 16320, 16416, 16439, 16408, 16368, 16451, 16400, 16371, 16492, 16491, 16340, 16373, 16218, 16350, 16360, 16391, 16296, 16332, 16460, 16443, 16398, 16276, 16265, 16336, 16437, 16317, 16425, 16308, 16347, 16347, 16393, 16323, 16341, 16392, 16376, 16360, 16421, 16308, 16344, 16420, 16451, 16377, 16287, 16429, 16325, 16576, 16272, 16371, 16328, 16400, 16375, 16392, 16523, 16303, 16376, 16381, 16451, 16520, 16283, 16482, 16400, 16321, 16381, 16414, 16341, 16456, 16366, 16439, 16336, 16439, 16486, 16315, 16431, 16394, 16406, 16336, 16434, 16487, 16261, 16392, 16455, 16395, 16275, 16338, 16468, 16352, 16355, 16292, 16396, 16420, 16323, 16492, 16297, 16423, 16308, 16446, 16340, 16427, 16403, 16366, 16405, 16338, 16444, 16365, 16475, 16525, 16365, 16268, 16416, 16389, 16314, 16429, 16405, 16436, 16376, 16386, 16500, 16445, 16389, 16396, 16437, 16559, 16475, 16403, 16265, 16429, 16376, 16442, 16346, 16385, 16443, 16418, 16307, 16480, 16437, 16313, 16482, 16488, 16309, 16364, 16262, 16372, 16400, 16373, 16285, 16320, 16454, 16340, 16379, 16256, 16312, 16379, 16510, 16349, 16418, 16359, 16346, 16301, 16412, 16286, 16330, 16399, 16313, 16356, 16383, 16321, 16412, 16332, 16387, 16328, 16286, 16463, 16345, 16547, 16256, 16392, 16312, 16457, 16400, 16372, 16508, 16298, 16445, 16332, 16472, 16464, 16213, 16441, 16476, 16333, 16395, 16462, 16278, 16471, 16351, 16393, 16374, 16519, 16504, 16281, 16454, 16481, 16400, 16331, 16499, 16529, 16308, 16444, 16502, 16470, 16283, 16395, 16507, 16353, 16408, 16343, 16388, 16408, 16342, 16523, 16313, 16445, 16268, 16449, 16244, 16448, 16389, 16338, 16338, 16333, 16421, 16358, 16508, 16567, 16354, 16280, 16409, 16408, 16315, 16423, 16400, 16431, 16404, 16329, 16417, 16368, 16314, 16391, 16354, 16614, 16491, 16413, 16274, 16396, 16370, 16407, 16342, 16377, 16491, 16484, 16331, 16456, 16437, 16324, 16467, 16502, 16363, 16339, 16276, 16385, 16383, 16381, 16317, 16324, 16498, 16437, 16357, 16254, 16309, 16379, 16435, 16370, 16408, 16314, 16370, 16344, 16422, 16305, 16311, 16375, 16359, 16326, 16425, 16315, 16350, 16321, 16374, 16430, 16288, 16486, 16375, 16534, 16282, 16331, 16325, 16418, 16347, 16416, 16493, 16276, 16408, 16372, 16426, 16453, 16293, 16464, 16422, 16265, 16442, 16423, 16387, 16488, 16419, 16401, 16355, 16471, 16485, 16344, 16422, 16435, 16439, 16355, 16493, 16462, 16282, 16405, 16490, 16444, 16266, 16430, 16500, 16321, 16428, 16301, 16386, 16415, 16349, 16524, 16270, 16431, 16305, 16507, 16279, 16425, 16443, 16361, 16372, 16334, 16460, 16362, 16469, 16459, 16368, 16246, 16428, 16444, 16325, 16433, 16465, 16409, 16456, 16340, 16445, 16423, 16454, 16376, 16376, 16517, 16472, 16345, 16272, 16469, 16408, 16388, 16351, 16401, 16399, 16430, 16325, 16455, 16401, 16353, 16443, 16498, 16351, 16345, 16272, 16370, 16393, 16439, 16303, 16319, 16470, 16412, 16376, 16250, 16287, 16302, 16486, 16343, 16383, 16304, 16403, 16330, 16426, 16288, 16310, 16412, 16346, 16370, 16381, 16322, 16358, 16350, 16436, 16385, 16278, 16463, 16317, 16574, 16193, 16358, 16349, 16365, 16373, 16353, 16498, 16334, 16394, 16353, 16416, 16534, 16280, 16502, 16399, 16288, 16434, 16408, 16363, 16463, 16371, 16397, 16337, 16521, 16482, 16291, 16436, 16413, 16426, 16322, 16417, 16473, 16287, 16410, 16440, 16397, 16239, 16387, 16480, 16373, 16386, 16341, 16417, 16426, 16340, 16525, 16262, 16468, 16344, 16467, 16296, 16408, 16414, 16334, 16425, 16322, 16461, 16372, 16430, 16477, 16387, 16283, 16442, 16401, 16272, 16477, 16422, 16435, 16490, 16400, 16478, 16428, 16421, 16385, 16391, 16578, 16479, 16382, 16271, 16437, 16356, 16388, 16310, 16411, 16446, 16404, 16361, 16488, 16461, 16352, 16452, 16463, 16341, 16364, 16218, 16399, 16383, 16368, 16270, 16348, 16458, 16394, 16374, 16241, 16278, 16355, 16466, 16295, 16406, 16320, 16394, 16328, 16440, 16296, 16285, 16391, 16395, 16326, 16429, 16268, 16373, 16363, 16420, 16369, 16286, 16467, 16341, 16559, 16264, 16293, 16284, 16444, 16344, 16310, 16518, 16336, 16416, 16374, 16396, 16464, 16264, 16472, 16414, 16315, 16416, 16436, 16385, 16482, 16389, 16439, 16332, 16518, 16519, 16294, 16450, 16464, 16409, 16324, 16434, 16508, 16262, 16436, 16477, 16429, 16252, 16387, 16489, 16359, 16373, 16327, 16428, 16447, 16341, 16498, 16263, 16411, 16345, 16508, 16289, 16479, 16395, 16341, 16357, 16318, 16424, 16365, 16452, 16515, 16343, 16238, 16436, 16426, 16334, 16418, 16401, 16390, 16418, 16344, 16469, 16403, 16389, 16377, 16369, 16613, 16494, 16395, 16265, 16426, 16368, 16436, 16379, 16369, 16418, 16432, 16356, 16394, 16415, 16353, 16491, 16554, 16341, 16318, 16268, 16340, 16401, 16372, 16302, 16308, 16460, 16428, 16376, 16249, 16313, 16328, 16468, 16331, 16410, 16347, 16402, 16331, 16409, 16295, 16322, 16433, 16317, 16356, 16428, 16356, 16379, 16352, 16447, 16384, 16306, 16513, 16317, 16554, 16238, 16356, 16367, 16408, 16379, 16387, 16528, 16328, 16416, 16356, 16459, 16489, 16277, 16516, 16424, 16313, 16437, 16432, 16379, 16431, 16414, 16393, 16318, 16505, 16469, 16287, 16433, 16418, 16440, 16361, 16416, 16476, 16323, 16432, 16484, 16427, 16269, 16399, 16493, 16306, 16442, 16354, 16413, 16455, 16385, 16495, 16288, 16475, 16289, 16516, 16265, 16405, 16446, 16318, 16364, 16317, 16469, 16353, 16409, 16466, 16392, 16240, 16413, 16402, 16307, 16429, 16428, 16448, 16460, 16364, 16480, 16387, 16436, 16357, 16359, 16572, 16515, 16362, 16293, 16404, 16375, 16379, 16328, 16392, 16459, 16402, 16350, 16421, 16448, 16370, 16445, 16530, 16346, 16323, 16257, 16406, 16382, 16447, 16293, 16372, 16473, 16418, 16370, 16287, 16289, 16333, 16486, 16365, 16405, 16281, 16395, 16301, 16450, 16335, 16316, 16391, 16380, 16356, 16411, 16290, 16382, 16366, 16480, 16385, 16215, 16506, 16327, 16527, 16235, 16292, 16330, 16397, 16359, 16337, 16511, 16341, 16402, 16364, 16382, 16472, 16275, 16473, 16398, 16323, 16415, 16395, 16348, 16500, 16372, 16396, 16327, 16536, 16514, 16296, 16445, 16463, 16412, 16336, 16414, 16470, 16318, 16414, 16460, 16387, 16243, 16374, 16465, 16349, 16383, 16321, 16419, 16427, 16376, 16513, 16265, 16435, 16317, 16503, 16299, 16469, 16408, 16316, 16343, 16308, 16434, 16368, 16429, 16491, 16380, 16238, 16457, 16438, 16298, 16483, 16402, 16447, 16454, 16369, 16496, 16412, 16423, 16395, 16374, 16607, 16464, 16407, 16304, 16465, 16367, 16426, 16309, 16446, 16421, 16407, 16341, 16454, 16449, 16374, 16480, 16505, 16336, 16345, 16249, 16391, 16414, 16380, 16278, 16319, 16466, 16394, 16376, 16283, 16276, 16345, 16456, 16307, 16425, 16333, 16372, 16354, 16424, 16285, 16274, 16393, 16333, 16338, 16402, 16321, 16355, 16359, 16422, 16386, 16285, 16470, 16345, 16548, 16264, 16340, 16295, 16433, 16380, 16359, 16514, 16301, 16415, 16372, 16463, 16477, 16245, 16456, 16426, 16310, 16429, 16440, 16360, 16484, 16393, 16424, 16327, 16540, 16486, 16297, 16486, 16435, 16418, 16309, 16443, 16483, 16287, 16437, 16443, 16442, 16296, 16386, 16493, 16329, 16411, 16322, 16419, 16442, 16362, 16484, 16296, 16456, 16322, 16448, 16253, 16417, 16438, 16320, 16383, 16391, 16422, 16309, 16414, 16521, 16358, 16232, 16416, 16383, 16334, 16440, 16426, 16422, 16393, 16301, 16470, 16380, 16403, 16331, 16402, 16581, 16479, 16403, 16307, 16415, 16384, 16423, 16311, 16359, 16440, 16405, 16328, 16434, 16451, 16356, 16497, 16508, 16343, 16329, 16253, 16391, 16357, 16396, 16284, 16283, 16472, 16440, 16360, 16245, 16263, 16391, 16468, 16312, 16378, 16329, 16398, 16336, 16419, 16304, 16327, 16404, 16341, 16380, 16417, 16281, 16366, 16283, 16425, 16433, 16273, 16516, 16333, 16564, 16226, 16326, 16343, 16423, 16324, 16340, 16545, 16350, 16425, 16334, 16458, 16490, 16266, 16479, 16410, 16319, 16428, 16414, 16402, 16473, 16423, 16397, 16371, 16481, 16485, 16314, 16399, 16433, 16427, 16285, 16465, 16508, 16265, 16397, 16442, 16442, 16271, 16390, 16532, 16335, 16410, 16344, 16360, 16403, 16343, 16507, 16281, 16459, 16310, 16507, 16290, 16405, 16433, 16332, 16406, 16341, 16428, 16320, 16434, 16495, 16298, 16254, 16427, 16421, 16331, 16454, 16418, 16411, 16479, 16386, 16449, 16382, 16452, 16383, 16384, 16524, 16529, 16388, 16291, 16416, 16344, 16409, 16316, 16357, 16478, 16432, 16409, 16472, 16408, 16355, 16452, 16552, 16306, 16348, 16258, 16339, 16388, 16350, 16289, 16310, 16460, 16440, 16421, 16198, 16295, 16400, 16449, 16333, 16423, 16343, 16373, 16370, 16402, 16266, 16333, 16414, 16325, 16342, 16465, 16333, 16324, 16363, 16397, 16385, 16329, 16441, 16313, 16556, 16224, 16362, 16308, 16424, 16381, 16356, 16569, 16390, 16426, 16377, 16466, 16477, 16333, 16519, 16399, 16292, 16434, 16393, 16367, 16436, 16430, 16402, 16289, 16479, 16483, 16255, 16400, 16396, 16487, 16321, 16469, 16504, 16260, 16403, 16452, 16406, 16291, 16320, 16482, 16338, 16409, 16375, 16392, 16395, 16314, 16526, 16329, 16413, 16302, 16516, 16342, 16430, 16403, 16340, 16408, 16282, 16498, 16327, 16414, 16499, 16367, 16267, 16406, 16445, 16330, 16417, 16408, 16391, 16433, 16406, 16464, 16392, 16448, 16396, 16368, 16590, 16496, 16415, 16310, 16376, 16389, 16412, 16415, 16362, 16447, 16422, 16433, 16429, 16416, 16290, 16446, 16536, 16311, 16394, 16267, 16365, 16415, 16371, 16314, 16312, 16483, 16442, 16343, 16272, 16242, 16391, 16477, 16344, 16391, 16315, 16397, 16327, 16400, 16275, 16326, 16437, 16357, 16334, 16406, 16302, 16357, 16345, 16412, 16405, 16314, 16441, 16352, 16557, 16249, 16336, 16302, 16431, 16387, 16348, 16508, 16339, 16358, 16372, 16463, 16483, 16275, 16493, 16367, 16334, 16415, 16423, 16366, 16497, 16404, 16369, 16364, 16415, 16465, 16266, 16436, 16409, 16378, 16296, 16491, 16524, 16298, 16385, 16475, 16445, 16268, 16410, 16519, 16309, 16374, 16404, 16386, 16387, 16361, 16520, 16280, 16503, 16342, 16484, 16305, 16437, 16379, 16396, 16429, 16338, 16396, 16394, 16505, 16549, 16346, 16233, 16437, 16425, 16308, 16450, 16432, 16428, 16413, 16352, 16545, 16374, 16393, 16396, 16382, 16541, 16526, 16359, 16245, 16378, 16392, 16429, 16347, 16445, 16443, 16440, 16356, 16471, 16432, 16350, 16460, 16431, 16337, 16381, 16225, 16377, 16375, 16414, 16272, 16347, 16491, 16483, 16364, 16260, 16253, 16359, 16413, 16330, 16398, 16345, 16404, 16347, 16430, 16344, 16327, 16372, 16320, 16342, 16401, 16349, 16327, 16340, 16429, 16412, 16258, 16435, 16274, 16545, 16275, 16347, 16300, 16445, 16310, 16330, 16605, 16352, 16403, 16351, 16438, 16532, 16286, 16462, 16370, 16331, 16346, 16444, 16358, 16496, 16430, 16436, 16341, 16483, 16494, 16280, 16372, 16372, 16414, 16305, 16454, 16449, 16255, 16373, 16447, 16410, 16269, 16387, 16440, 16324, 16442, 16326, 16307, 16436, 16343, 16468, 16284, 16447, 16410, 16504, 16336, 16423, 16387, 16423, 16393, 16291, 16400, 16420, 16412, 16484, 16305, 16262, 16420, 16412, 16297, 16431, 16359, 16461, 16392, 16371, 16453, 16426, 16426, 16382, 16462, 16542, 16501, 16339, 16285, 16419, 16387, 16431, 16297, 16446, 16429, 16344, 16342, 16434, 16406, 16430, 16523, 16476, 16321, 16377, 16234, 16347, 16377, 16368, 16324, 16320, 16504, 16427, 16356, 16198, 16231, 16349, 16436, 16361, 16404, 16309, 16353, 16314, 16430, 16346, 16280, 16386, 16390, 16355, 16358, 16287, 16378, 16363, 16451, 16375, 16258, 16459, 16376, 16580, 16239, 16314, 16315, 16387, 16355, 16302, 16495, 16308, 16402, 16381, 16427, 16547, 16285, 16502, 16424, 16303, 16371, 16453, 16342, 16453, 16366, 16426, 16331, 16481, 16460, 16290, 16407, 16436, 16408, 16293, 16433, 16477, 16304, 16416, 16436, 16376, 16301, 16383, 16429, 16422, 16394, 16286, 16394, 16385, 16336, 16465, 16294, 16412, 16333, 16449, 16403, 16356, 16457, 16328, 16381, 16345, 16432, 16372, 16404, 16492, 16347, 16247, 16433, 16410, 16321, 16512, 16377, 16328, 16430, 16356, 16422, 16392, 16336, 16385, 16408, 16595, 16540, 16396, 16303, 16408, 16340, 16399, 16277, 16401, 16435, 16375, 16348, 16466, 16374, 16347, 16456, 16497, 16370, 16302, 16195, 16401, 16392, 16350, 16305, 16293, 16410, 16443, 16362, 16291, 16285, 16345, 16493, 16346, 16410, 16357, 16283, 16316, 16457, 16305, 16348, 16418, 16362, 16341, 16340, 16296, 16428, 16370, 16436, 16362, 16303, 16479, 16362, 16532, 16292, 16357, 16323, 16415, 16374, 16338, 16418, 16281, 16399, 16365, 16424, 16431, 16244, 16430, 16440, 16364, 16447, 16438, 16388, 16465, 16431, 16437, 16381, 16428, 16513, 16329, 16488, 16426, 16411, 16358, 16426, 16461, 16371, 16466, 16481, 16442, 16302, 16446, 16452, 16346, 16433, 16300, 16455, 16459, 16382, 16476, 16278, 16435, 16326, 16468, 16296, 16405, 16440, 16343, 16349, 16379, 16425, 16326, 16429, 16511, 16320, 16255, 16414, 16367, 16361, 16451, 16459, 16364, 16426, 16367, 16445, 16364, 16328, 16380, 16365, 16596, 16481, 16323, 16263, 16389, 16348, 16441, 16351, 16396, 16371, 16507, 16305, 16449, 16400, 16362, 16522, 16496, 16351, 16310, 16266, 16392, 16387, 16439, 16306, 16325, 16455, 16448, 16411, 16246, 16315, 16341, 16456, 16362, 16407, 16337, 16380, 16299, 16420, 16293, 16357, 16350, 16393, 16348, 16431, 16304, 16357, 16323, 16433, 16375, 16275, 16457, 16311, 16574, 16248, 16312, 16331, 16399, 16343, 16379, 16489, 16308, 16432, 16345, 16423, 16473, 16284, 16451, 16403, 16278, 16449, 16386, 16390, 16464, 16433, 16388, 16340, 16521, 16520, 16272, 16399, 16426, 16483, 16345, 16427, 16466, 16276, 16411, 16467, 16400, 16281, 16393, 16459, 16358, 16430, 16319, 16399, 16442, 16327, 16507, 16283, 16435, 16295, 16495, 16237, 16432, 16450, 16370, 16388, 16306, 16470, 16357, 16429, 16478, 16352, 16266, 16429, 16424, 16308, 16401, 16432, 16387, 16510, 16423, 16423, 16420, 16455, 16375, 16338, 16514, 16522, 16346, 16294, 16458, 16379, 16404, 16343, 16413, 16429, 16378, 16381, 16433, 16406, 16358, 16438, 16483, 16298, 16338, 16264, 16369, 16437, 16388, 16291, 16308, 16474, 16400, 16396, 16187, 16303, 16350, 16534, 16365, 16430, 16310, 16400, 16307, 16445, 16302, 16373, 16413, 16336, 16324, 16427, 16338, 16379, 16401, 16440, 16377, 16330, 16441, 16304, 16569, 16254, 16328, 16346, 16432, 16374, 16377, 16498, 16301, 16393, 16352, 16418, 16527, 16235, 16491, 16419, 16318, 16417, 16386, 16336, 16454, 16422, 16366, 16306, 16505, 16506, 16252, 16486, 16435, 16441, 16361, 16383, 16513, 16310, 16426, 16478, 16449, 16235, 16436, 16504, 16371, 16451, 16317, 16394, 16449, 16305, 16537, 16223, 16457, 16279, 16466, 16286, 16435, 16427, 16343, 16377, 16345, 16457, 16399, 16476, 16505, 16395, 16245, 16423, 16395, 16303, 16440, 16388, 16424, 16449, 16386, 16444, 16406, 16397, 16394, 16340, 16582, 16490, 16360, 16251, 16399, 16394, 16425, 16328, 16409, 16467, 16382, 16360, 16482, 16419, 16353, 16471, 16479, 16367, 16387, 16186, 16384, 16429, 16367, 16273, 16304, 16448, 16375, 16359, 16300, 16280, 16387, 16496, 16331, 16448, 16328, 16435, 16305, 16432, 16361, 16339, 16389, 16352, 16349, 16438, 16284, 16392, 16354, 16448, 16363, 16280, 16472, 16290, 16600, 16290, 16296, 16317, 16461, 16355, 16334, 16546, 16260, 16417, 16292, 16487, 16502, 16203, 16463, 16420, 16314, 16404, 16361, 16334, 16458, 16392, 16387, 16334, 16460, 16509, 16355, 16509, 16447, 16395, 16353, 16434, 16502, 16362, 16398, 16500, 16432, 16256, 16412, 16483, 16350, 16412, 16320, 16363, 16396, 16332, 16482, 16235, 16470, 16277, 16453, 16286, 16442, 16403, 16352, 16378, 16316, 16421, 16357, 16471, 16492, 16367, 16204, 16439, 16403, 16319, 16487, 16350, 16436, 16435, 16334, 16469, 16403, 16430, 16390, 16390, 16563, 16451, 16341, 16289, 16446, 16385, 16429, 16358, 16413, 16443, 16375, 16320, 16443, 16409, 16380, 16526, 16533, 16350, 16315, 16234, 16339, 16391, 16326, 16289, 16237, 16493, 16471, 16394, 16215, 16311, 16346, 16446, 16320, 16358, 16328, 16414, 16324, 16473, 16295, 16357, 16400, 16423, 16377, 16421, 16313, 16376, 16354, 16374, 16389, 16293, 16433, 16359, 16545, 16267, 16342, 16281, 16401, 16354, 16310, 16479, 16303, 16375, 16389, 16503, 16528, 16320, 16517, 16454, 16288, 16390, 16459, 16423, 16450, 16414, 16422, 16333, 16459, 16482, 16326, 16433, 16426, 16454, 16316, 16457, 16453, 16309, 16434, 16411, 16439, 16264, 16389, 16475, 16337, 16395, 16320, 16333, 16422, 16300, 16465, 16275, 16468, 16323, 16526, 16346, 16383, 16449, 16374, 16387, 16315, 16452, 16355, 16433, 16464, 16349, 16212, 16431, 16447, 16362, 16464, 16358, 16427, 16457, 16388, 16476, 16421, 16456, 16411, 16399, 16521, 16512, 16340, 16287, 16425, 16377, 16444, 16393, 16437, 16397, 16402, 16345, 16457, 16386, 16362, 16470, 16538, 16334, 16296, 16227, 16350, 16350, 16398, 16295, 16346, 16446, 16441, 16427, 16237, 16311, 16340, 16452, 16271, 16432, 16312, 16433, 16322, 16377, 16287, 16379, 16381, 16359, 16304, 16452, 16269, 16369, 16405, 16387, 16343, 16315, 16444, 16356, 16569, 16220, 16371, 16323, 16409, 16344, 16378, 16495, 16344, 16370, 16391, 16458, 16505, 16264, 16506, 16377, 16343, 16390, 16370, 16412, 16499, 16383, 16369, 16344, 16479, 16532, 16244, 16428, 16432, 16413, 16294, 16415, 16515, 16293, 16436, 16446, 16405, 16294, 16373, 16453, 16379, 16418, 16321, 16417, 16474, 16302, 16470, 16303, 16416, 16346, 16549, 16349, 16440, 16448, 16313, 16384, 16262, 16446, 16431, 16422, 16493, 16333, 16293, 16427, 16373, 16352, 16495, 16417, 16455, 16438, 16396, 16465, 16367, 16389, 16442, 16405, 16636, 16545, 16351, 16298, 16372, 16336, 16464, 16397, 16423, 16386, 16484, 16334, 16420, 16384, 16358, 16452, 16451, 16377, 16341, 16284, 16381, 16371, 16401, 16263, 16348, 16458, 16402, 16438, 16247, 16319, 16338, 16474, 16309, 16448, 16356, 16371, 16269, 16406, 16327, 16370, 16338, 16352, 16331, 16431, 16336, 16351, 16314, 16366, 16388, 16300, 16376, 16343, 16506, 16264, 16362, 16261, 16433, 16376, 16357, 16551, 16294, 16396, 16343, 16430, 16505, 16230, 16450, 16386, 16281, 16412, 16419, 16359, 16478, 16386, 16361, 16414, 16451, 16477, 16316, 16438, 16448, 16432, 16323, 16439, 16587, 16289, 16391, 16443, 16391, 16322, 16364, 16473, 16371, 16428, 16396, 16373, 16447, 16276, 16487, 16307, 16492, 16294, 16478, 16267, 16406, 16367, 16383, 16351, 16319, 16409, 16388, 16447, 16550, 16357, 16259, 16425, 16377, 16343, 16426, 16347, 16410, 16401, 16367, 16419, 16408, 16417, 16348, 16353, 16599, 16507, 16405, 16302, 16417, 16316, 16419, 16351, 16392, 16450, 16408, 16346, 16371, 16374, 16299, 16508, 16485, 16310, 16379, 16224, 16414, 16407, 16405, 16319, 16258, 16472, 16427, 16429, 16242, 16264, 16395, 16459, 16372, 16430, 16314, 16404, 16379, 16400, 16406, 16373, 16382, 16357, 16340, 16384, 16281, 16368, 16352, 16411, 16383, 16350, 16456, 16370, 16553, 16262, 16363, 16285, 16412, 16343, 16409, 16504, 16273, 16416, 16382, 16457, 16475, 16336, 16439, 16393, 16353, 16460, 16369, 16362, 16411, 16392, 16414, 16345, 16466, 16511, 16389, 16463, 16370, 16386, 16353, 16469, 16465, 16282, 16359, 16400, 16385, 16295, 16407, 16455, 16445, 16499, 16357, 16405, 16389, 16267, 16552, 16261, 16475, 16384, 16459, 16329, 16357, 16464, 16312, 16443, 16407, 16443, 16368, 16384, 16494, 16295, 16251, 16342, 16371, 16328, 16486, 16414, 16447, 16404, 16375, 16456, 16407, 16405, 16365, 16393, 16617, 16422, 16379, 16335, 16377, 16334, 16411, 16327, 16328, 16380, 16437, 16369, 16438, 16383, 16338, 16422, 16478, 16308, 16329, 16301, 16388, 16361, 16394, 16241, 16306, 16474, 16429, 16387, 16146, 16367, 16400, 16519, 16332, 16387, 16325, 16361, 16338, 16467, 16318, 16292, 16454, 16420, 16354, 16430, 16288, 16416, 16372, 16492, 16370, 16284, 16441, 16337, 16454, 16314, 16270, 16304, 16487, 16374, 16361, 16587, 16368, 16408, 16391, 16380, 16416, 16292, 16470, 16367, 16316, 16400, 16407, 16394, 16423, 16477, 16357, 16380, 16491, 16444, 16257, 16481, 16485, 16483, 16348, 16425, 16524, 16250, 16425, 16451, 16460, 16263, 16385, 16501, 16345, 16363, 16308, 16357, 16394, 16349, 16507, 16311, 16468, 16299, 16507, 16343, 16405, 16415, 16296, 16373, 16344, 16418, 16349, 16469, 16493, 16358, 16297, 16475, 16420, 16343, 16469, 16414, 16412, 16373, 16440, 16476, 16399, 16354, 16393, 16341, 16566, 16566, 16383, 16274, 16408, 16307, 16395, 16335, 16456, 16433, 16394, 16407, 16421, 16328, 16310, 16444, 16570, 16280, 16348, 16263, 16342, 16432, 16381, 16288, 16319, 16452, 16407, 16443, 16258, 16314, 16406, 16454, 16331, 16494, 16375, 16432, 16281, 16422, 16310, 16386, 16380, 16366, 16304, 16445, 16377, 16342, 16428, 16353, 16369, 16348, 16379, 16325, 16539, 16275, 16431, 16252, 16404, 16395, 16378, 16526, 16261, 16423, 16359, 16439, 16471, 16262, 16466, 16423, 16279, 16424, 16353, 16338, 16421, 16387, 16360, 16291, 16475, 16477, 16262, 16423, 16350, 16445, 16318, 16421, 16566, 16297, 16443, 16431, 16411, 16269, 16348, 16520, 16344, 16476, 16358, 16344, 16413, 16346, 16463, 16293, 16450, 16328, 16492, 16262, 16459, 16397, 16346, 16413, 16361, 16453, 16391, 16429, 16499, 16362, 16233, 16357, 16403, 16284, 16469, 16380, 16363, 16405, 16385, 16449, 16404, 16429, 16385, 16366, 16536, 16483, 16340, 16320, 16367, 16425, 16477, 16404, 16436, 16466, 16401, 16332, 16372, 16391, 16324, 16495, 16494, 16344, 16326, 16257, 16270, 16395, 16328, 16290, 16306, 16510, 16447, 16443, 16214, 16271, 16386, 16441, 16350, 16374, 16316, 16379, 16334, 16406, 16317, 16409, 16359, 16372, 16347, 16448, 16300, 16400, 16369, 16383, 16337, 16336, 16432, 16336, 16523, 16280, 16334, 16282, 16444, 16391, 16399, 16496, 16335, 16344, 16389, 16521, 16471, 16292, 16492, 16316, 16335, 16293, 16395, 16417, 16442, 16334, 16366, 16405, 16400, 16515, 16340, 16477, 16365, 16431, 16375, 16538, 16452, 16270, 16343, 16395, 16387, 16256, 16420, 16461, 16404, 16385, 16402, 16365, 16411, 16288, 16535, 16269, 16462, 16348, 16501, 16357, 16388, 16439, 16391, 16417, 16338, 16455, 16405, 16467, 16537, 16390, 16209, 16409, 16397, 16297, 16501, 16404, 16465, 16342, 16358, 16514, 16466, 16397, 16416, 16398, 16540, 16474, 16335, 16261, 16378, 16378, 16402, 16383, 16435, 16380, 16489, 16312, 16490, 16302, 16369, 16481, 16425, 16286, 16366, 16292, 16364, 16370, 16456, 16324, 16366, 16514, 16413, 16435, 16176, 16340, 16362, 16425, 16309, 16393, 16339, 16422, 16301, 16425, 16337, 16344, 16330, 16358, 16339, 16418, 16327, 16412, 16380, 16389, 16315, 16306, 16356, 16361, 16506, 16264, 16394, 16286, 16396, 16381, 16345, 16510, 16296, 16400, 16395, 16389, 16483, 16278, 16493, 16378, 16338, 16367, 16417, 16351, 16445, 16366, 16428, 16418, 16483, 16474, 16244, 16395, 16471, 16394, 16334, 16479, 16480, 16220, 16420, 16418, 16389, 16230, 16338, 16483, 16376, 16400, 16329, 16332, 16447, 16275, 16539, 16298, 16417, 16369, 16503, 16384, 16452, 16345, 16379, 16414, 16284, 16420, 16411, 16398, 16502, 16382, 16294, 16446, 16421, 16305, 16511, 16414, 16379, 16406, 16394, 16367, 16438, 16365, 16445, 16363, 16606, 16524, 16352, 16301, 16355, 16376, 16483, 16355, 16494, 16366, 16453, 16298, 16378, 16294, 16267, 16517, 16473, 16343, 16354, 16289, 16380, 16414, 16406, 16266, 16391, 16481, 16373, 16435, 16239, 16230, 16314, 16488, 16397, 16474, 16338, 16342, 16353, 16449, 16342, 16383, 16336, 16370, 16277, 16376, 16310, 16315, 16423, 16354, 16362, 16331, 16404, 16379, 16532, 16296, 16351, 16240, 16408, 16410, 16398, 16493, 16260, 16422, 16417, 16422, 16462, 16320, 16424, 16415, 16304, 16431, 16429, 16310, 16417, 16384, 16456, 16341, 16424, 16489, 16305, 16440, 16387, 16458, 16365, 16413, 16509, 16238, 16366, 16463, 16438, 16316, 16395, 16498, 16436, 16466, 16294, 16482, 16401, 16319, 16479, 16262, 16470, 16347, 16437, 16229, 16421, 16434, 16361, 16426, 16399, 16450, 16352, 16411, 16511, 16351, 16244, 16357, 16351, 16338, 16469, 16416, 16386, 16347, 16399, 16432, 16453, 16353, 16310, 16377, 16550, 16472, 16345, 16300, 16384, 16384, 16466, 16280, 16432, 16429, 16483, 16312, 16385, 16256, 16312, 16491, 16486, 16356, 16368, 16298, 16366, 16345, 16427, 16285, 16365, 16433, 16377, 16372, 16190, 16365, 16427, 16456, 16314, 16445, 16303, 16403, 16264, 16452, 16303, 16359, 16356, 16396, 16358, 16414, 16285, 16406, 16377, 16404, 16302, 16282, 16482, 16285, 16499, 16235, 16304, 16327, 16483, 16353, 16389, 16581, 16260, 16380, 16382, 16404, 16451, 16286, 16470, 16382, 16365, 16419, 16351, 16367, 16392, 16424, 16356, 16344, 16540, 16502, 16263, 16439, 16391, 16408, 16334, 16426, 16538, 16295, 16410, 16438, 16486, 16246, 16403, 16491, 16426, 16389, 16341, 16372, 16355, 16300, 16538, 16221, 16434, 16312, 16441, 16308, 16429, 16416, 16335, 16304, 16304, 16408, 16368, 16532, 16532, 16309, 16307, 16463, 16415, 16254, 16504, 16407, 16350, 16409, 16405, 16489, 16470, 16353, 16415, 16314, 16564, 16500, 16321, 16287, 16407, 16337, 16430, 16332, 16398, 16458, 16397, 16326, 16472, 16348, 16382, 16468, 16556, 16368, 16356, 16271, 16389, 16373, 16383, 16329, 16340, 16458, 16441, 16420, 16257, 16332, 16379, 16447, 16364, 16472, 16374, 16361, 16334, 16487, 16333, 16372, 16452, 16443, 16366, 16410, 16351, 16337, 16426, 16352, 16418, 16332, 16413, 16315, 16520, 16271, 16380, 16260, 16366, 16397, 16344, 16485, 16270, 16423, 16342, 16435, 16478, 16307, 16458, 16444, 16264, 16390, 16390, 16339, 16413, 16374, 16388, 16348, 16419, 16456, 16285, 16466, 16383, 16511, 16369, 16450, 16481, 16351, 16432, 16402, 16417, 16306, 16353, 16422, 16340, 16423, 16297, 16401, 16429, 16332, 16494, 16267, 16463, 16319, 16501, 16296, 16395, 16368, 16324, 16361, 16281, 16455, 16398, 16453, 16440, 16432, 16228, 16387, 16412, 16314, 16454, 16392, 16429, 16412, 16435, 16483, 16446, 16373, 16399, 16402, 16547, 16439, 16375, 16329, 16442, 16427, 16467, 16388, 16433, 16410, 16423, 16344, 16391, 16358, 16336, 16479, 16490, 16391, 16341, 16227, 16361, 16427, 16381, 16294, 16329, 16439, 16359, 16420, 16287, 16312, 16311, 16490, 16326, 16393, 16373, 16385, 16254, 16410, 16300, 16376, 16353, 16316, 16326, 16411, 16277, 16453, 16363, 16419, 16384, 16333, 16457, 16347, 16530, 16252, 16391, 16289, 16413, 16324, 16359, 16471, 16301, 16406, 16317, 16447, 16424, 16207, 16403, 16452, 16349, 16400, 16439, 16350, 16435, 16393, 16417, 16359, 16482, 16499, 16350, 16407, 16355, 16362, 16289, 16449, 16559, 16335, 16380, 16439, 16451, 16210, 16472, 16493, 16373, 16415, 16402, 16424, 16404, 16313, 16490, 16253, 16459, 16304, 16524, 16292, 16394, 16432, 16352, 16407, 16396, 16423, 16370, 16465, 16480, 16329, 16248, 16419, 16407, 16304, 16471, 16468, 16436, 16398, 16318, 16437, 16460, 16420, 16364, 16337, 16539, 16470, 16369, 16231, 16407, 16342, 16454, 16329, 16393, 16407, 16484, 16354, 16417, 16391, 16352, 16543, 16503, 16302, 16394, 16286, 16321, 16406, 16415, 16271, 16322, 16484, 16459, 16381, 16212, 16290, 16370, 16466, 16323, 16427, 16232, 16421, 16359, 16437, 16325, 16296, 16417, 16369, 16378, 16396, 16298, 16351, 16341, 16431, 16377, 16285, 16510, 16378, 16503, 16260, 16302, 16317, 16438, 16368, 16401, 16492, 16303, 16413, 16433, 16386, 16544, 16298, 16490, 16395, 16341, 16383, 16461, 16381, 16450, 16402, 16443, 16313, 16510, 16505, 16244, 16448, 16442, 16422, 16396, 16450, 16461, 16268, 16392, 16402, 16461, 16281, 16422, 16479, 16360, 16396, 16306, 16409, 16412, 16311, 16530, 16236, 16456, 16330, 16493, 16401, 16432, 16460, 16308, 16358, 16351, 16436, 16378, 16466, 16479, 16354, 16256, 16449, 16441, 16265, 16470, 16420, 16438, 16442, 16398, 16469, 16440, 16418, 16404, 16374, 16536, 16511, 16354, 16268, 16444, 16410, 16391, 16297, 16456, 16410, 16382, 16373, 16492, 16388, 16373, 16388, 16486, 16366, 16353, 16240, 16398, 16407, 16401, 16254, 16325, 16440, 16399, 16328, 16249, 16217, 16362, 16509, 16328, 16437, 16336, 16372, 16324, 16476, 16308, 16342, 16377, 16342, 16355, 16379, 16304, 16319, 16361, 16417, 16359, 16258, 16479, 16347, 16559, 16250, 16290, 16335, 16427, 16378, 16276, 16504, 16277, 16410, 16335, 16395, 16513, 16282, 16484, 16421, 16308, 16427, 16405, 16356, 16507, 16410, 16415, 16348, 16517, 16492, 16247, 16462, 16471, 16417, 16316, 16395, 16488, 16339, 16435, 16487, 16476, 16284, 16421, 16511, 16342, 16419, 16258, 16421, 16430, 16379, 16499, 16209, 16480, 16350, 16429, 16245, 16459, 16387, 16375, 16348, 16309, 16419, 16355, 16474, 16532, 16346, 16214, 16459, 16432, 16354, 16499, 16329, 16404, 16415, 16372, 16467, 16388, 16378, 16372, 16397, 16581, 16482, 16328, 16307, 16443, 16370, 16455, 16322, 16461, 16505, 16434, 16317, 16449, 16407, 16381, 16495, 16500, 16347, 16318, 16274, 16394, 16355, 16404, 16302, 16285, 16484, 16406, 16414, 16221, 16315, 16344, 16491, 16375, 16430, 16311, 16357, 16333, 16442, 16311, 16336, 16387, 16413, 16320, 16399, 16312, 16379, 16354, 16418, 16397, 16296, 16472, 16307, 16536, 16251, 16308, 16311, 16429, 16329, 16336, 16441, 16326, 16415, 16373, 16435, 16466, 16284, 16483, 16453, 16271, 16440, 16421, 16365, 16454, 16402, 16398, 16359, 16492, 16531, 16312, 16443, 16421, 16445, 16338, 16394, 16461, 16293, 16417, 16461, 16434, 16265, 16399, 16506, 16394, 16432, 16323, 16421, 16421, 16327, 16503, 16266, 16432, 16319, 16471, 16297, 16375, 16450, 16322, 16372, 16355, 16442, 16382, 16424, 16511, 16337, 16264, 16414, 16433, 16314, 16447, 16388, 16376, 16486, 16396, 16443, 16401, 16377, 16383, 16361, 16554, 16491, 16365, 16289, 16436, 16351, 16383, 16331, 16347, 16403, 16385, 16356, 16453, 16422, 16326, 16482, 16547, 16360, 16327, 16277, 16415, 16367, 16372, 16332, 16345, 16449, 16409, 16403, 16282, 16320, 16373, 16522, 16374, 16447, 16293, 16383, 16317, 16432, 16317, 16342, 16452, 16358, 16343, 16424, 16289, 16398, 16369, 16460, 16399, 16309, 16509, 16316, 16519, 16259, 16286, 16307, 16452, 16330, 16356, 16518, 16331, 16458, 16341, 16433, 16467, 16267, 16417, 16423, 16350, 16441, 16357, 16334, 16468, 16393, 16379, 16319, 16480, 16533, 16281, 16472, 16393, 16466, 16368, 16420, 16516, 16342, 16422, 16472, 16433, 16300, 16435, 16472, 16354, 16471, 16307, 16457, 16445, 16339, 16491, 16243, 16436, 16271, 16517, 16278, 16416, 16473, 16282, 16357, 16320, 16463, 16374, 16458, 16457, 16354, 16269, 16469, 16366, 16317, 16501, 16439, 16427, 16466, 16400, 16500, 16403, 16371, 16356, 16353, 16543, 16443, 16375, 16296, 16433, 16366, 16433, 16338, 16392, 16444, 16433, 16405, 16425, 16408, 16362, 16476, 16571, 16312, 16371, 16258, 16393, 16392, 16403, 16275, 16281, 16480, 16460, 16437, 16253, 16317, 16367, 16462, 16356, 16444, 16352, 16448, 16295, 16360, 16307, 16386, 16415, 16361, 16380, 16448, 16319, 16336, 16351, 16390, 16406, 16285, 16435, 16367, 16494, 16217, 16371, 16279, 16411, 16344, 16331, 16522, 16297, 16439, 16341, 16418, 16489, 16289, 16454, 16414, 16312, 16422, 16414, 16360, 16473, 16352, 16359, 16335, 16466, 16517, 16311, 16428, 16411, 16471, 16327, 16458, 16528, 16315, 16402, 16427, 16407, 16273, 16428, 16459, 16325, 16477, 16394, 16385, 16435, 16315, 16513, 16268, 16466, 16306, 16521, 16276, 16486, 16437, 16360, 16405, 16327, 16454, 16349, 16423, 16513, 16327, 16269, 16384, 16445, 16292, 16457, 16396, 16411, 16480, 16401, 16490, 16406, 16483, 16364, 16352, 16521, 16463, 16364, 16273, 16451, 16407, 16406, 16339, 16388, 16454, 16417, 16404, 16392, 16418, 16323, 16420, 16484, 16322, 16367, 16243, 16400, 16397, 16365, 16286, 16276, 16492, 16439, 16402, 16255, 16243, 16370, 16463, 16345, 16412, 16281, 16410, 16385, 16429, 16336, 16344, 16418, 16280, 16317, 16432, 16331, 16380, 16359, 16424, 16367, 16293, 16451, 16318, 16518, 16232, 16316, 16323, 16440, 16361, 16328, 16554, 16353, 16411, 16354, 16405, 16506, 16254, 16501, 16401, 16306, 16387, 16439, 16375, 16478, 16355, 16417, 16326, 16508, 16556, 16272, 16462, 16444, 16419, 16349, 16443, 16470, 16312, 16416, 16425, 16450, 16263, 16401, 16494, 16344, 16456, 16342, 16367, 16434, 16287, 16528, 16249, 16406, 16357, 16486, 16308, 16487, 16393, 16354, 16394, 16348, 16447, 16368, 16470, 16549, 16345, 16253, 16442, 16439, 16326, 16472, 16371, 16412, 16403, 16332, 16479, 16462, 16465, 16375, 16340, 16581, 16493, 16336, 16268, 16440, 16375, 16440, 16359, 16387, 16444, 16391, 16389, 16437, 16412, 16385, 16460, 16537, 16328, 16296, 16233, 16360, 16406, 16398, 16263, 16272, 16526, 16432, 16416, 16215, 16292, 16356, 16439, 16338, 16414, 16297, 16362, 16370, 16395, 16325, 16370, 16404, 16360, 16288, 16409, 16340, 16384, 16366, 16417, 16393, 16242, 16410, 16345, 16527, 16267, 16309, 16323, 16410, 16376, 16362, 16478, 16306, 16381, 16393, 16442, 16518, 16268, 16497, 16430, 16320, 16415, 16476, 16363, 16465, 16393, 16366, 16294, 16514, 16516, 16316, 16438, 16412, 16447, 16288, 16452, 16478, 16299, 16428, 16449, 16406, 16249, 16388, 16478, 16312, 16421, 16323, 16395, 16449, 16317, 16520, 16320, 16401, 16389, 16516, 16349, 16469, 16452, 16356, 16410, 16337, 16497, 16346, 16458, 16514, 16359, 16258, 16387, 16437, 16340, 16494, 16389, 16427, 16429, 16357, 16474, 16425, 16433, 16406, 16323, 16583, 16512, 16345, 16281, 16382, 16390, 16443, 16387, 16407, 16410, 16406, 16350, 16431, 16433, 16349, 16458, 16495, 16301, 16393, 16252, 16410, 16393, 16406, 16274, 16340, 16449, 16429, 16322, 16266, 16270, 16353, 16464, 16309, 16445, 16311, 16404, 16332, 16409, 16331, 16325, 16403, 16376, 16317, 16398, 16279, 16351, 16332, 16410, 16384, 16277, 16467, 16371, 16590, 16255, 16343, 16310, 16440, 16334, 16307, 16557, 16280, 16392, 16335, 16413, 16507, 16264, 16455, 16415, 16299, 16398, 16416, 16365, 16542, 16377, 16376, 16367, 16491, 16494, 16274, 16415, 16480, 16364, 16299, 16453, 16529, 16290, 16398, 16442, 16420, 16284, 16413, 16487, 16374, 16418, 16312, 16404, 16394, 16297, 16458, 16251, 16503, 16362, 16473, 16308, 16427, 16403, 16340, 16396, 16310, 16359, 16409, 16447, 16556, 16326, 16265, 16480, 16418, 16294, 16476, 16396, 16449, 16430, 16349, 16464, 16352, 16434, 16371, 16383, 16582, 16516, 16306, 16269, 16426, 16359, 16420, 16318, 16420, 16454, 16410, 16343, 16452, 16406, 16403, 16437, 16467, 16328, 16354, 16221, 16363, 16425, 16403, 16278, 16307, 16475, 16443, 16352, 16259, 16284, 16350, 16487, 16326, 16403, 16263, 16358, 16365, 16413, 16317, 16339, 16363, 16346, 16341, 16404, 16308, 16351, 16341, 16408, 16439, 16246, 16442, 16325, 16540, 16269, 16289, 16303, 16469, 16349, 16334, 16535, 16350, 16455, 16352, 16393, 16507, 16264, 16433, 16399, 16343, 16395, 16441, 16348, 16469, 16414, 16386, 16282, 16568, 16515, 16296, 16449, 16437, 16449, 16313, 16478, 16490, 16311, 16411, 16452, 16444, 16288, 16402, 16502, 16329, 16424, 16299, 16390, 16434, 16345, 16519, 16281, 16457, 16372, 16466, 16360, 16459, 16463, 16373, 16375, 16336, 16448, 16352, 16441, 16497, 16338, 16249, 16402, 16441, 16317, 16450, 16387, 16424, 16465, 16374, 16440, 16414, 16439, 16386, 16383, 16561, 16468, 16373, 16295, 16412, 16395, 16419, 16346, 16396, 16452, 16357, 16364, 16424, 16440, 16401, 16475, 16471, 16341, 16363, 16239, 16398, 16400, 16389, 16293, 16288, 16481, 16393, 16335, 16260, 16253, 16375, 16489, 16368, 16400, 16292, 16379, 16322, 16440, 16311, 16299, 16393, 16400, 16351, 16370, 16292, 16357, 16356, 16444, 16418, 16279, 16469, 16355, 16586, 16253, 16295, 16323, 16417, 16356, 16325, 16496, 16276, 16395, 16359, 16403, 16543, 16243, 16462, 16434, 16308, 16458, 16393, 16355, 16520, 16414, 16427, 16322, 16487, 16468, 16309, 16480, 16431, 16396, 16315, 16425, 16511, 16289, 16438, 16468, 16422, 16255, 16387, 16491, 16369, 16402, 16288, 16412, 16407, 16357, 16505, 16245, 16451, 16347, 16466, 16307, 16404, 16437, 16343, 16397, 16353, 16402, 16381, 16435, 16491, 16355, 16225, 16459, 16381, 16290, 16487, 16374, 16407, 16451, 16341, 16485, 16399, 16391, 16377, 16405, 16544, 16469, 16368, 16262, 16416, 16400, 16422, 16305, 16397, 16468, 16408, 16348, 16471, 16431, 16389, 16473, 16481, 16343, 16314, 16236, 16378, 16351, 16358, 16303, 16283, 16484, 16443, 16361, 16254, 16293, 16371, 16463, 16321, 16346, 16307, 16371, 16318, 16440, 16301, 16337, 16388, 16414, 16339, 16389, 16247, 16401, 16340, 16406, 16395, 16271, 16504, 16341, 16569, 16244, 16309, 16321, 16445, 16326, 16343, 16492, 16346, 16412, 16355, 16409, 16482, 16240, 16469, 16394, 16328, 16431, 16435, 16379, 16476, 16432, 16401, 16351, 16524, 16559, 16283, 16429, 16433, 16440, 16271, 16428, 16504, 16307, 16438, 16451, 16411, 16239, 16401, 16499, 16396, 16413, 16325, 16406, 16432, 16340, 16519, 16265, 16459, 16355, 16515, 16291, 16429, 16477, 16328, 16377, 16324, 16426, 16399, 16427, 16512, 16290, 16246, 16418, 16416, 16344, 16451, 16428, 16400, 16454, 16378, 16446, 16384, 16398, 16397, 16328, 16574, 16555, 16362, 16252, 16380, 16334, 16400, 16324, 16370, 16459, 16416, 16390, 16438, 16430, 16392, 16467, 16527, 16341, 16360, 16245, 16363, 16379, 16359, 16308, 16335, 16454, 16449, 16371, 16308, 16298, 16364, 16463, 16331, 16405, 16305, 16412, 16327, 16389, 16318, 16336, 16426, 16430, 16331, 16403, 16286, 16318, 16344, 16419, 16459, 16266, 16450, 16384, 16568, 16232, 16329, 16298, 16442, 16334, 16338, 16529, 16317, 16456, 16383, 16398, 16486, 16265, 16466, 16390, 16314, 16492, 16411, 16362, 16497, 16395, 16382, 16309, 16461, 16448, 16280, 16422, 16370, 16447, 16327, 16481, 16554, 16299, 16478, 16485, 16371, 16260, 16380, 16499, 16315, 16419, 16326, 16453, 16443, 16380, 16493, 16292, 16452, 16357, 16561, 16301, 16417, 16481, 16354, 16400, 16277, 16449, 16333, 16402, 16461, 16342, 16238, 16437, 16390, 16296, 16480, 16466, 16423, 16416, 16344, 16523, 16362, 16440, 16368, 16366, 16532, 16470, 16347, 16273, 16383, 16407, 16419, 16336, 16404, 16439, 16471, 16391, 16360, 16425, 16343, 16466, 16513, 16357, 16370, 16239, 16319, 16441, 16414, 16263, 16303, 16453, 16531, 16339, 16286, 16310, 16340, 16471, 16298, 16417, 16315, 16388, 16354, 16419, 16307, 16364, 16420, 16303, 16335, 16420, 16303, 16307, 16331, 16434, 16374, 16279, 16471, 16332, 16555, 16291, 16345, 16351, 16377, 16348, 16329, 16550, 16342, 16421, 16350, 16392, 16448, 16247, 16462, 16282, 16315, 16411, 16434, 16399, 16441, 16416, 16426, 16352, 16459, 16482, 16318, 16399, 16400, 16393, 16336, 16473, 16501, 16306, 16399, 16428, 16347, 16232, 16381, 16414, 16312, 16395, 16362, 16453, 16434, 16373, 16481, 16272, 16473, 16376, 16469, 16331, 16471, 16445, 16375, 16406, 16349, 16394, 16335, 16402, 16561, 16317, 16258, 16443, 16451, 16292, 16411, 16419, 16424, 16364, 16358, 16484, 16388, 16440, 16339, 16432, 16589, 16469, 16326, 16261, 16413, 16403, 16382, 16304, 16409, 16429, 16441, 16390, 16454, 16433, 16376, 16455, 16486, 16340, 16328, 16270, 16290, 16425, 16386, 16327, 16336, 16478, 16436, 16403, 16260, 16286, 16376, 16467, 16318, 16407, 16331, 16403, 16281, 16424, 16316, 16306, 16403, 16384, 16320, 16446, 16310, 16378, 16299, 16456, 16346, 16303, 16447, 16292, 16584, 16270, 16354, 16296, 16403, 16387, 16347, 16543, 16309, 16359, 16393, 16410, 16492, 16247, 16508, 16373, 16307, 16434, 16451, 16379, 16487, 16421, 16428, 16350, 16503, 16507, 16287, 16401, 16416, 16411, 16359, 16416, 16511, 16272, 16433, 16487, 16411, 16236, 16356, 16488, 16348, 16338, 16338, 16393, 16401, 16361, 16492, 16287, 16440, 16346, 16493, 16322, 16440, 16369, 16363, 16388, 16371, 16428, 16362, 16418, 16544, 16349, 16226, 16428, 16429, 16250, 16407, 16332, 16364, 16411, 16336, 16462, 16421, 16357, 16349, 16366, 16554, 16566, 16389, 16309, 16412, 16337, 16421, 16378, 16436, 16435, 16421, 16377, 16464, 16392, 16362, 16479, 16517, 16335, 16316, 16276, 16379, 16361, 16426, 16295, 16351, 16456, 16448, 16387, 16246, 16270, 16358, 16436, 16375, 16465, 16372, 16350, 16348, 16412, 16309, 16378, 16405, 16358, 16291, 16447, 16366, 16393, 16403, 16443, 16347, 16332, 16485, 16286, 16544, 16292, 16358, 16339, 16433, 16331, 16377, 16506, 16263, 16371, 16396, 16472, 16480, 16253, 16468, 16386, 16376, 16402, 16427, 16380, 16491, 16430, 16421, 16373, 16491, 16519, 16249, 16432, 16408, 16428, 16343, 16398, 16457, 16312, 16397, 16458, 16429, 16285, 16431, 16446, 16367, 16487, 16296, 16421, 16393, 16348, 16482, 16278, 16434, 16330, 16500, 16265, 16417, 16452, 16365, 16329, 16354, 16393, 16447, 16403, 16545, 16323, 16239, 16402, 16397, 16340, 16429, 16395, 16413, 16407, 16335, 16408, 16404, 16364, 16367, 16346, 16560, 16549, 16357, 16332, 16366, 16353, 16451, 16311, 16393, 16390, 16423, 16280, 16445, 16374, 16386, 16466, 16509, 16335, 16358, 16292, 16395, 16383, 16419, 16273, 16321, 16452, 16371, 16360, 16302, 16318, 16385, 16501, 16391, 16460, 16314, 16380, 16270, 16387, 16330, 16356, 16348, 16401, 16316, 16387, 16335, 16348, 16343, 16424, 16379, 16246, 16458, 16334, 16541, 16253, 16361, 16276, 16464, 16369, 16343, 16529, 16249, 16456, 16330, 16436, 16469, 16282, 16419, 16494, 16320, 16469, 16390, 16297, 16501, 16399, 16403, 16334, 16481, 16464, 16281, 16401, 16401, 16427, 16334, 16413, 16567, 16341, 16444, 16480, 16400, 16277, 16392, 16489, 16395, 16449, 16315, 16460, 16388, 16300, 16485, 16283, 16471, 16351, 16494, 16276, 16404, 16451, 16315, 16355, 16315, 16406, 16370, 16390, 16509, 16340, 16219, 16405, 16393, 16257, 16475, 16392, 16378, 16441, 16347, 16430, 16399, 16432, 16350, 16334, 16500, 16472, 16342, 16284, 16418, 16367, 16429, 16322, 16415, 16454, 16449, 16392, 16386, 16405, 16363, 16439, 16567, 16364, 16355, 16286, 16336, 16398, 16366, 16303, 16313, 16469, 16416, 16429, 16229, 16309, 16378, 16476, 16343, 16415, 16320, 16359, 16329, 16503, 16305, 16366, 16480, 16420, 16357, 16386, 16348, 16341, 16372, 16419, 16423, 16324, 16468, 16299, 16538, 16280, 16313, 16318, 16410, 16354, 16312, 16505, 16305, 16435, 16365, 16412, 16488, 16271, 16469, 16422, 16301, 16463, 16392, 16371, 16414, 16425, 16406, 16284, 16499, 16485, 16266, 16456, 16371, 16450, 16381, 16430, 16467, 16300, 16435, 16439, 16398, 16234, 16386, 16472, 16344, 16418, 16315, 16439, 16418, 16339, 16531, 16206, 16431, 16319, 16525, 16326, 16371, 16449, 16346, 16368, 16288, 16466, 16335, 16450, 16497, 16412, 16224, 16458, 16427, 16261, 16455, 16427, 16397, 16430, 16396, 16494, 16409, 16366, 16346, 16356, 16569, 16429, 16367, 16299, 16403, 16409, 16429, 16324, 16372, 16388, 16373, 16367, 16465, 16457, 16345, 16477, 16501, 16354, 16361, 16228, 16406, 16404, 16389, 16303, 16312, 16465, 16416, 16340, 16274, 16295, 16379, 16533, 16378, 16419, 16296, 16427, 16273, 16432, 16298, 16335, 16424, 16315, 16350, 16430, 16284, 16411, 16397, 16474, 16375, 16285, 16512, 16347, 16539, 16279, 16291, 16355, 16375, 16323, 16334, 16495, 16305, 16426, 16329, 16434, 16468, 16225, 16442, 16397, 16358, 16436, 16373, 16396, 16478, 16410, 16393, 16338, 16434, 16483, 16320, 16458, 16424, 16391, 16345, 16411, 16526, 16368, 16409, 16459, 16405, 16245, 16460, 16466, 16349, 16465, 16336, 16411, 16419, 16371, 16478, 16225, 16434, 16287, 16496, 16308, 16452, 16473, 16336, 16376, 16340, 16397, 16421, 16460, 16482, 16344, 16263, 16465, 16414, 16333, 16490, 16422, 16435, 16466, 16375, 16479, 16404, 16428, 16390, 16409, 16525, 16465, 16363, 16251, 16426, 16395, 16442, 16294, 16434, 16442, 16423, 16378, 16442, 16417, 16366, 16462, 16480, 16372, 16321, 16244, 16315, 16435, 16346, 16313, 16268, 16468, 16403, 16396, 16250, 16286, 16337, 16463, 16312, 16385, 16337, 16424, 16289, 16429, 16316, 16304, 16389, 16411, 16355, 16445, 16298, 16374, 16290, 16398, 16395, 16284, 16461, 16316, 16615, 16251, 16355, 16279, 16436, 16363, 16337, 16544, 16304, 16384, 16330, 16465, 16516, 16260, 16475, 16449, 16267, 16431, 16441, 16378, 16449, 16395, 16414, 16352, 16505, 16487, 16305, 16443, 16412, 16437, 16371, 16447, 16505, 16274, 16443, 16489, 16432, 16279, 16387, 16525, 16352, 16359, 16327, 16375, 16419, 16313, 16462, 16300, 16480, 16300, 16526, 16242, 16356, 16407, 16328, 16385, 16349, 16479, 16337, 16404, 16469, 16348, 16204, 16420, 16396, 16270, 16424, 16347, 16425, 16448, 16349, 16456, 16447, 16441, 16354, 16341, 16521, 16544, 16353, 16275, 16440, 16330, 16396, 16385, 16407, 16456, 16420, 16386, 16415, 16369, 16339, 16472, 16554, 16293, 16312, 16203, 16353, 16401, 16360, 16283, 16291, 16441, 16471, 16424, 16233, 16309, 16380, 16456, 16346, 16437, 16300, 16405, 16334, 16425, 16339, 16393, 16452, 16356, 16275, 16423, 16324, 16398, 16426, 16459, 16369, 16263, 16444, 16337, 16522, 16269, 16334, 16324, 16417, 16347, 16384, 16496, 16343, 16366, 16403, 16399, 16458, 16266, 16495, 16381, 16340, 16395, 16416, 16364, 16469, 16398, 16374, 16293, 16477, 16516, 16287, 16433, 16407, 16407, 16306, 16443, 16480, 16319, 16447, 16431, 16408, 16275, 16398, 16452, 16365, 16442, 16313, 16417, 16412, 16353, 16492, 16295, 16413, 16382, 16531, 16350, 16467, 16475, 16311, 16343, 16332, 16437, 16420, 16424, 16512, 16356, 16253, 16390, 16418, 16292, 16493, 16414, 16433, 16386, 16365, 16506, 16402, 16441, 16399, 16360, 16632, 16534, 16301, 16309, 16369, 16370, 16428, 16331, 16426, 16392, 16447, 16346, 16438, 16436, 16400, 16432, 16481, 16357, 16341, 16260, 16375, 16370, 16426, 16277, 16316, 16467, 16444, 16353, 16307, 16275, 16358, 16455, 16329, 16434, 16320, 16392, 16316, 16378, 16379, 16357, 16365, 16395, 16356, 16405, 16332, 16335, 16360, 16393, 16402, 16225, 16433, 16329, 16547, 16251, 16351, 16315, 16453, 16378, 16328, 16555, 16266, 16391, 16347, 16451, 16496, 16231, 16447, 16419, 16300, 16432, 16431, 16339, 16532, 16362, 16384, 16377, 16476, 16483, 16268, 16438, 16453, 16423, 16330, 16466, 16536, 16330, 16471, 16463, 16381, 16270, 16341, 16506, 16326, 16400, 16284, 16378, 16430, 16351, 16477, 16288, 16474, 16364, 16530, 16267, 16456, 16435, 16339, 16372, 16264, 16394, 16396, 16404, 16496, 16354, 16228, 16431, 16425, 16320, 16490, 16379, 16426, 16440, 16358, 16471, 16420, 16423, 16396, 16385, 16507, 16502, 16359, 16267, 16458, 16387, 16437, 16360, 16487, 16471, 16453, 16317, 16387, 16366, 16375, 16479, 16479, 16376, 16317, 16209, 16362, 16369, 16341, 16289, 16341, 16438, 16420, 16429, 16285, 16277, 16327, 16492, 16341, 16398, 16326, 16344, 16364, 16456, 16352, 16338, 16395, 16369, 16314, 16358, 16305, 16364, 16372, 16420, 16401, 16290, 16438, 16364, 16583, 16239, 16351, 16293, 16398, 16333, 16366, 16475, 16309, 16423, 16382, 16434, 16487, 16246, 16456, 16435, 16290, 16444, 16432, 16375, 16441, 16421, 16470, 16364, 16432, 16493, 16404, 16467, 16394, 16414, 16331, 16406, 16482, 16295, 16423, 16411, 16409, 16304, 16364, 16508, 16399, 16422, 16318, 16424, 16403, 16325, 16440, 16324, 16468, 16343, 16478, 16338, 16382, 16424, 16328, 16406, 16423, 16434, 16353, 16419, 16497, 16368, 16226, 16396, 16343, 16331, 16464, 16429, 16393, 16351, 16307, 16434, 16449, 16412, 16332, 16383, 16618, 16496, 16356, 16302, 16382, 16326, 16448, 16325, 16350, 16369, 16452, 16345, 16436, 16406, 16359, 16531, 16476, 16335, 16361, 16294, 16399, 16338, 16376, 16311, 16333, 16442, 16456, 16351, 16241, 16324, 16392, 16497, 16333, 16380, 16295, 16400, 16310, 16423, 16328, 16291, 16406, 16390, 16348, 16435, 16239, 16389, 16313, 16501, 16326, 16256, 16480, 16377, 16509, 16280, 16289, 16314, 16462, 16344, 16358, 16558, 16320, 16435, 16393, 16392, 16468, 16272, 16449, 16360, 16369, 16463, 16426, 16364, 16467, 16426, 16354, 16339, 16482, 16519, 16291, 16406, 16443, 16433, 16331, 16513, 16547, 16288, 16410, 16480, 16403, 16273, 16406, 16479, 16351, 16413, 16361, 16409, 16426, 16380, 16473, 16265, 16461, 16341, 16494, 16327, 16473, 16474, 16337, 16391, 16320, 16382, 16380, 16464, 16543, 16300, 16298, 16481, 16389, 16327, 16452, 16461, 16417, 16429, 16402, 16534, 16363, 16365, 16383, 16372, 16561, 16550, 16374, 16277, 16396, 16296, 16394, 16309, 16406, 16430, 16410, 16394, 16382, 16447, 16373, 16426, 16584, 16347, 16358, 16276, 16350, 16402, 16409, 16249, 16321, 16492, 16511, 16401, 16261, 16280, 16339, 16431, 16322, 16474, 16351, 16406, 16333, 16420, 16302, 16424, 16382, 16348, 16326, 16460, 16362, 16284, 16415, 16316, 16384, 16342, 16418, 16296, 16489, 16240, 16399, 16316, 16379, 16401, 16338, 16553, 16349, 16426, 16370, 16393, 16461, 16293, 16518, 16338, 16318, 16421, 16384, 16399, 16438, 16370, 16363, 16289, 16485, 16472, 16243, 16341, 16355, 16456, 16343, 16441, 16554, 16305, 16415, 16402, 16374, 16263, 16384, 16460, 16319, 16459, 16354, 16401, 16451, 16357, 16484, 16245, 16439, 16344, 16519, 16309, 16490, 16417, 16386, 16390, 16302, 16473, 16379, 16411, 16510, 16312, 16272, 16389, 16495, 16315, 16424, 16397, 16348, 16443, 16379, 16443, 16395, 16442, 16423, 16365, 16532, 16479, 16344, 16290, 16413, 16449, 16445, 16385, 16410, 16424, 16412, 16368, 16404, 16383, 16336, 16475, 16438, 16341, 16382, 16260, 16335, 16414, 16403, 16316, 16340, 16461, 16428, 16404, 16227, 16253, 16339, 16419, 16282, 16354, 16303, 16357, 16370, 16391, 16351, 16304, 16401, 16336, 16320, 16450, 16323, 16398, 16347, 16453, 16343, 16324, 16443, 16343, 16562, 16305, 16364, 16306, 16411, 16375, 16346, 16562, 16307, 16345, 16351, 16393, 16489, 16239, 16462, 16390, 16303, 16325, 16406, 16365, 16489, 16361, 16454, 16389, 16457, 16538, 16306, 16441, 16438, 16360, 16383, 16458, 16491, 16277, 16411, 16445, 16430, 16224, 16397, 16466, 16360, 16331, 16267, 16387, 16420, 16305, 16505, 16250, 16437, 16349, 16496, 16351, 16413, 16360, 16344, 16395, 16353, 16408, 16403, 16454, 16534, 16420, 16214, 16438, 16396, 16208, 16470, 16388, 16391, 16386, 16310, 16452, 16472, 16386, 16378, 16377, 16614, 16482, 16350, 16231, 16471, 16335, 16454, 16367, 16450, 16432, 16439, 16284, 16498, 16354, 16409, 16476, 16456, 16289, 16369, 16263, 16400, 16426, 16421, 16258, 16330, 16462, 16347, 16379, 16278, 16298, 16387, 16473, 16387, 16467, 16321, 16401, 16321, 16418, 16329, 16351, 16390, 16349, 16286, 16370, 16300, 16413, 16404, 16415, 16392, 16273, 16436, 16332, 16577, 16278, 16308, 16324, 16462, 16337, 16353, 16520, 16297, 16467, 16362, 16392, 16471, 16245, 16446, 16479, 16372, 16418, 16479, 16298, 16479, 16386, 16442, 16333, 16511, 16458, 16265, 16403, 16431, 16416, 16329, 16407, 16495, 16298, 16453, 16479, 16423, 16246, 16433, 16492, 16392, 16461, 16326, 16388, 16413, 16299, 16558, 16308, 16406, 16372, 16504, 16312, 16440, 16450, 16377, 16349, 16318, 16432, 16419, 16398, 16497, 16372, 16270, 16373, 16429, 16274, 16445, 16438, 16397, 16420, 16332, 16368, 16402, 16397, 16382, 16282, 16580, 16475, 16356, 16275, 16372, 16393, 16459, 16293, 16428, 16430, 16418, 16366, 16407, 16386, 16381, 16461, 16499, 16389, 16360, 16255, 16363, 16385, 16333, 16305, 16334, 16426, 16420, 16381, 16297, 16321, 16373, 16460, 16309, 16415, 16243, 16406, 16307, 16486, 16282, 16306, 16383, 16443, 16373, 16401, 16277, 16357, 16366, 16428, 16382, 16275, 16476, 16297, 16559, 16264, 16282, 16271, 16448, 16319, 16326, 16597, 16344, 16403, 16356, 16452, 16441, 16316, 16452, 16404, 16292, 16440, 16413, 16371, 16441, 16407, 16406, 16283, 16515, 16512, 16260, 16433, 16364, 16449, 16360, 16443, 16470, 16280, 16444, 16450, 16447, 16259, 16353, 16509, 16345, 16360, 16337, 16424, 16367, 16314, 16467, 16264, 16440, 16343, 16490, 16296, 16387, 16478, 16323, 16363, 16302, 16422, 16309, 16391, 16476, 16336, 16233, 16472, 16399, 16256, 16418, 16462, 16394, 16391, 16389, 16506, 16462, 16441, 16355, 16392, 16512, 16510, 16340, 16267, 16430, 16362, 16410, 16344, 16415, 16408, 16372, 16371, 16426, 16399, 16380, 16491, 16535, 16336, 16330, 16220, 16320, 16402, 16372, 16269, 16305, 16489, 16417, 16396, 16245, 16287, 16408, 16527, 16329, 16425, 16350, 16419, 16275, 16459, 16272, 16363, 16431, 16334, 16400, 16442, 16304, 16393, 16385, 16488, 16365, 16347, 16493, 16330, 16526, 16283, 16333, 16320, 16397, 16366, 16368, 16417, 16294, 16427, 16387, 16468, 16471, 16192, 16480, 16396, 16326, 16365, 16441, 16403, 16432, 16436, 16406, 16352, 16500, 16465, 16256, 16469, 16435, 16405, 16327, 16413, 16480, 16331, 16433, 16445, 16452, 16244, 16408, 16447, 16341, 16416, 16373, 16439, 16469, 16386, 16488, 16247, 16429, 16274, 16459, 16333, 16454, 16446, 16350, 16351, 16336, 16415, 16353, 16438, 16522, 16347, 16262, 16410, 16424, 16318, 16415, 16354, 16399, 16398, 16383, 16460, 16395, 16405, 16382, 16383, 16527, 16516, 16387, 16273, 16379, 16423, 16422, 16297, 16426, 16401, 16390, 16329, 16463, 16403, 16352, 16486]
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test protocols::nn::tests::test_nnprotocol ... FAILED

failures:

failures:
    protocols::nn::tests::test_nnprotocol

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 14 filtered out; finished in 66.58s

[1m[31merror[0m[1m:[0m test failed, to rerun pass `-p composite --lib`
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m11:35:25[00m
$ [K[?1h=[?2004hvvim outl put.log[?1l>[?2004l
]2;vim output.log]1;vim[?1049h[22;0;0t[>4;2m[?1h=[?2004h[?1004h[1;53r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[53;1H"output.log" [noeol] 184L, 192512B[2;1Hâ–½[6n[2;1H  [3;1HPzz\[0%m[6n[3;1H           [1;1H[>c]10;?]11;?[1;1HScript started on 2025-08-21 11:34:11+08:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="117" LINES="53"]
[34m^[[m[1m[34m^[[m[7m%[34m^[[m[27m[34m^[[m[1m[34m^[[m[0m                                                                                           [3;1H                          [34m^M[m [34m^M^[[m]2;luck@DESKTOP-RLSIS6U:~/git/evalyn[34m^G^[[m]1;~/git/evalyn[34m^G^[[m]7;file://DESKTOP-RLSIS6UU[4;1H/home/luck/git/evalyn[34m^[[m\[34m^M^[[m[0m[34m^[[m[27m[34m^[[m[24m[34m^[[m[J[34m^M
^[[m[01;32m~/git/evalyn[34m^[[m[00m âŒš[5;32H[34m^[[m[01;31m11:34:11[34m^[[m[00m[34m^M[m
$ [34m^[[m[K[34m^[[m[?1h[34m^[[m=[34m^[[m[?2004h[34m^M^M^[[m[A[34m^[[m[A[34m^[[m[0m[34m^[[m[27m[34m^[[m[24m[34m^[[m[J[34m^M
^[[m[01;32m~/git/evalyn[34m^[[m[00m on [34m^[[m[35mî‚ [7;40Hmain[34m^[[m[31m![34m^[[m[00m âŒš[7;61H[34m^[[m[01;31m11:34:11[34m^[[m[00m[34m^M[m
$ [34m^[[m[Kscript output.log[34m^[[m[17Dcargo test-verbose test_nnprotocol[34m^[[m[?1l[34m^[[m>[34m^[[m[?2004l[34m^M^M
^[[m]2;cargo test-verbose test_nnprotocol[34m^G^[[m]1;cargo[34m^G^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `crate::MM[10;1HyInt`[34m^[[m[0m[34m^M
^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mmat/src/protocols/proj.rs:16:5[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m16[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0muse crate::MyInt;[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m     [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m= [34m^[[m[0m[34m^[[m[0m[34m^[[m[1mnote[34m^[[m[0m[34m^[[m[0m: `#[warn(unused_imports)]` on by default[34m^[[m[0m[34m^M
^M
^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[1m:[34m^[[m[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestioo[19;1Hn)[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[34m^[[m[0m[34m^M
^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/activation.rs:20:56[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m20[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0muse atomic_proof::atomic_protocol:::[24;1H{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[56C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^^[26;1H[[m[33m^^^^^^^^^^^^^^^^^^^^^^[34m^[[m[0m[34m^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m= [34m^[[m[0m[34m^[[m[0m[34m^[[m[1mnote[34m^[[m[0m[34m^[[m[0m: `#[warn(unused_imports)]` on by default[34m^[[m[0m[34m^M
^M
^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `mat::MyInt`[34m^[[m[0m[34m^M
^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/lookup.rs:56:5[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m56[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0muse mat::MyInt;[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m     [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^[34m^[[m[0m[34m^M
^M
^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused imports: `PointInfo` and `PointsContainer`[34m^[[m[0m[34m^M
^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/utils/mock_nn.rs:48:39[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m48[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0muse atomic_proof::{MatContainerMyInn[40;1Ht, PointsContainer, PointInfo};[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[39C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^^[42;1H^^^[34m^[[m[0m[34m^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^[34m^[[m[0m[34m^M
^M
^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `Zero`[34m^[[m[0m[34m^M
^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/activation.rs:15:28[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m15[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0muse ark_std::{UniformRand, Zero};[34m^[[[m[48;1H[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[28C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^[34m^[[m[0m[34m^M
^M
^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `ark_std::One`[34m^[[m[0m[34m^M
^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/lookup.rs:34:5[34m^[[m[0m[34m^M[m[53;100H1,1[11CTop[1;1H[?25h[?4m[?25l[53;90H~@k[1;1H[53;90H   [2;1H[53;100H2[2;1H[?25h[?25l[53;90H~@k[2;1H[53;90H   [5;1H[53;100H3[5;1H[?25h[?25l[53;90H~@k[5;1H[53;90H   [6;1H[53;100H4[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [7;1H[53;100H5[7;1H[?25h[?25l[53;90H~@k[7;1H[53;90H   [8;1H[53;100H6[8;1H[?25h[?25l[53;90H~@k[8;1H[53;90H   [9;1H[53;100H7[9;1H[?25h[?25l[53;90H~@k[9;1H[53;90H   [11;1H[53;100H8[11;1H[?25h[?25l[53;90H~@k[11;1H[53;90H   [12;1H[53;100H9[12;1H[?25h[?25l[53;90H~@k[12;1H[53;90H   [13;1H[53;100H10,1[13;1H[?25h[?25l[53;90H~@k[13;1H[53;90H   [14;1H[53;101H1[14;1H[?25h[?25l[53;90H~@k[14;1H[53;90H   [15;1H[53;101H2[15;1H[?25h[?25l[53;90H~@k[15;1H[53;90H   [16;1H[53;101H3[16;1H[?25h[?25l[53;90H~@k[16;1H[53;90H   [17;1H[53;101H4[17;1H[?25h[?25l[53;101H5[18;1H[?25h[?25l[53;90H~@k[18;1H[53;90H   [20;1H[53;101H6[20;1H[?25h[?25l[53;90H~@k[20;1H[53;90H   [21;1H[53;101H7[21;1H[?25h[?25l[53;90H~@k[21;1H[53;90H   [22;1H[53;101H8[22;1H[?25h[?25l[53;90H~@k[22;1H[53;90H   [23;1H[53;101H9[23;1H[?25h[?25l[53;90H~@k[23;1H[53;90H   [25;1H[53;100H20[25;1H[?25h[?25l[53;90H~@k[25;1H[53;90H   [27;1H[53;101H1[27;1H[?25h[?25l[53;90H~@k[27;1H[53;90H   [28;1H[53;101H2[28;1H[?25h[?25l[53;90H~@k[28;1H[53;90H   [29;1H[53;101H3[29;1H[?25h[?25l[53;90H~@k[29;1H[53;90H   [30;1H[53;101H4[30;1H[?25h[?25l[53;101H5[31;1H[?25h[?25l[53;90H~@k[31;1H[53;90H   [32;1H[53;101H6[32;1H[?25h[?25l[53;90H~@k[32;1H[53;90H   [33;1H[53;101H7[33;1H[?25h[?25l[53;90H~@k[33;1H[53;90H   [34;1H[53;101H8[34;1H[?25h[?25l[53;90H~@k[34;1H[53;90H   [35;1H[53;101H9[35;1H[?25h[?25l[53;90H~@k[35;1H[53;90H   [36;1H[53;100H30[36;1H[?25h[?25l[53;90H~@k[36;1H[53;90H   [37;1H[53;101H1[37;1H[?25h[?25l[53;90H~@k[37;1H[53;90H   [38;1H[53;101H2[38;1H[?25h[?25l[53;90H~@k[38;1H[53;90H   [39;1H[53;101H3[39;1H[?25h[?25l[53;90H~@k[39;1H[53;90H   [41;1H[53;101H4[41;1H[?25h[?25l[53;90H~@k[41;1H[53;90H   [43;1H[53;101H5[43;1H[?25h[?25l[53;90H~@k[43;1H[53;90H   [44;1H[53;101H6[44;1H[?25h[?25l[53;90H~@k[44;1H[53;90H   [45;1H[53;101H7[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [46;1H[53;101H8[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [46;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;1H[K[53;100H39,1[11C0%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [45;1H[1;52r[1;1H[3M[1;53r[50;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m34[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0muse ark_std::One;[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m     [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^[34m^[[m[0m[34m^M
^M[m[53;100H[K[53;100H40,1[11C1%[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [46;1H[53;101H1[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H2[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `Zero`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H43,1[11C2%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/range.rs:13:28[34m^[[m[0m[34m^M[m[53;100H[K[53;100H44,1[11C2%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H45,1[11C3%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [45;1H[1;52r[1;1H[3M[1;53r[50;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m13[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0muse ark_std::{UniformRand, Zero};[34m^[[[m[51;1H[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[28C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^[34m^[[m[0m[34m^M[m[53;100H[K[53;100H46,1[11C5%[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [46;1H[53;101H7[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H8[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H49,1[11C5%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: function `mat_myint_to_field` is never used[34m^[[m[0m[34m^M[m[53;100H[K[53;100H50,1[11C6%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/utils/mock_nn.rs:455:4[34m^[[m[0m[34m^M
^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H51,1[11C7%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m455[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0mfn mat_myint_to_field<F: PrimeFiell[52;1Hd>(mat: Vec<Vec<MyInt>>) -> Vec<Vec<F>> {[34m^[[m[0m[34m^M[m[53;100H[K[53;100H52,1[11C9%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H3[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^^^^^^^[34m^[[m[0m[34m^M[m[53;100H[K[53;100H54,1[10C10%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m= [34m^[[m[0m[34m^[[m[0m[34m^[[m[1mnote[34m^[[m[0m[34m^[[m[0m: `#[warn(dead_code)]` on by default[34m^[[m[0m[34m^M[m[53;100H[K[53;100H55,1[10C10%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H6[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `mat::utils::matdef::MatOps`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H57,1[10C12%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/lookup.rs:1288:13[34m^[[m[0m[34m^M[m[53;100H[K[53;100H58,1[10C12%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m     [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m1288[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[8Cuse mat::utils::matdef::M[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H59,1[10C13%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;100H60[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[50;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m1288[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m        use mat::utils::matdef::MM[51;1HatOps;[34m^[[m[0m[34m^M
^[[m[0m     [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[13C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^[34m^[[m[0m[34m^M[m[53;100H[K[53;100H61,1[10C14%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H2[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H63,1[10C15%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `ark_ff::Zero`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H64,1[10C15%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/utils/matop.rs:268:9[34m^[[m[0m[34m^M
^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H65,1[10C17%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m268[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m    use ark_ff::Zero;[34m^[[m[0m[34m^M[m[53;100H[K[53;100H66,1[10C18%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[9C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^[34m^[[m[0m[34m^M[m[53;100H[K[53;100H67,1[10C18%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H68,1[10C19%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused imports: `UniformRand` and `test_rng`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H69,1[10C20%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/utils/matop.rs:269:19[34m^[[m[0m[34m^M[m[53;100H[K[53;100H70,1[10C21%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H71,1[10C21%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m269[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m    use ark_std::{test_rng, Uniforr[52;1HmRand};[34m^[[m[0m[34m^M[m[53;100H[K[53;100H72,1[10C23%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [45;1H[53;101H1[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [44;1H[53;101H0[44;1H[?25h[?25l[53;90H~@k[44;1H[53;90H   [43;1H[53;100H69[43;1H[?25h[?25l[53;90H~@k[43;1H[53;90H   [42;1H[53;101H8[42;1H[?25h[?25l[53;90H~@k[42;1H[53;90H   [41;1H[53;101H7[41;1H[?25h[?25l[53;90H~@k[41;1H[53;90H   [40;1H[53;101H6[40;1H[?25h[?25l[53;90H~@k[40;1H[53;90H   [38;1H[53;101H5[38;1H[?25h[?25l[53;90H~@k[38;1H[53;90H   [37;1H[53;101H4[37;1H[?25h[?25l[53;90H~@k[37;1H[53;90H   [36;1H[53;101H3[36;1H[?25h[?25l[53;90H~@k[36;1H[53;90H   [35;1H[53;101H2[35;1H[?25h[?25l[53;90H~@k[35;1H[53;90H   [34;1H[53;101H1[34;1H[?25h[?25l[53;90H~@k[34;1H[53;90H   [33;1H[53;101H0[33;1H[?25h[?25l[53;90H~@k[33;1H[53;90H   [32;1H[53;100H59[32;1H[?25h[?25l[53;90H~@k[32;1H[53;90H   [31;1H[53;101H8[31;1H[?25h[?25l[53;90H~@k[31;1H[53;90H   [29;1H[53;101H7[29;1H[?25h[?25l[53;90H~@k[29;1H[53;90H   [28;1H[53;101H6[28;1H[?25h[?25l[53;90H~@k[28;1H[53;90H   [27;1H[53;101H5[27;1H[?25h[?25l[53;90H~@k[27;1H[53;90H   [26;1H[53;101H4[26;1H[?25h[?25l[53;90H~@k[26;1H[53;90H   [25;1H[53;101H3[25;1H[?25h[?25l[53;90H~@k[25;1H[53;90H   [24;1H[53;101H2[24;1H[?25h[?25l[53;90H~@k[24;1H[53;90H   [22;1H[53;101H1[22;1H[?25h[?25l[53;90H~@k[22;1H[53;90H   [21;1H[53;101H0[21;1H[?25h[?25l[53;90H~@k[21;1H[53;90H   [20;1H[53;100H49[20;1H[?25h[?25l[53;90H~@k[20;1H[53;90H   [19;1H[53;101H8[19;1H[?25h[?25l[53;101H7[18;1H[?25h[?25l[53;90H~@k[18;1H[53;90H   [17;1H[53;101H6[17;1H[?25h[?25l[53;90H~@k[17;1H[53;90H   [16;1H[53;101H5[16;1H[?25h[?25l[53;90H~@k[16;1H[53;90H   [15;1H[53;101H4[15;1H[?25h[?25l[53;90H~@k[15;1H[53;90H   [14;1H[53;101H3[14;1H[?25h[?25l[53;90H~@k[14;1H[53;90H   [13;1H[53;101H2[13;1H[?25h[?25l[53;90H~@k[13;1H[53;90H   [12;1H[53;101H1[12;1H[?25h[?25l[53;90H~@k[12;1H[53;90H   [11;1H[53;101H0[11;1H[?25h[?25l[53;90H~@k[11;1H[53;90H   [9;1H[53;100H39[9;1H[?25h[?25l[53;90H~@k[9;1H[53;90H   [8;1H[53;101H8[8;1H[?25h[?25l[53;90H~@k[8;1H[53;90H   [7;1H[53;101H7[7;1H[?25h[?25l[53;90H~@k[7;1H[53;90H   [6;1H[53;101H6[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H35,1[10C22%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[2L[1;53r[1;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused imports: `PointInfo` and `PointsContainer`[34m^[[m[0m[34m^M
^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/utils/mock_nn.rs:48:39[34m^[[m[0m[34m^M[m[53;100H[K[53;100H34,1[10C21%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[2L[1;53r[1;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m     [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^[34m^[[m[0m[34m^M
^M[m[53;100H[K[53;100H33,1[10C19%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m56[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0muse mat::MyInt;[34m^[[m[0m[34m^M[m[53;100H[K[53;100H32,1[10C18%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H31,1[10C18%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/lookup.rs:56:5[34m^[[m[0m[34m^M[m[53;100H[K[53;100H30,1[10C17%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `mat::MyInt`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H29,1[10C16%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^M[m[53;100H[K[53;100H28,1[10C15%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m= [34m^[[m[0m[34m^[[m[0m[34m^[[m[1mnote[34m^[[m[0m[34m^[[m[0m: `#[warn(unused_imports)]` on by default[34m^[[m[0m[34m^M[m[53;100H[K[53;100H27,1[10C15%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H26,1[10C14%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [7;1H[1;52r[1;1H[2L[1;53r[1;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[56C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^^[2;1H[[m[33m^^^^^^^^^^^^^^^^^^^^^^[34m^[[m[0m[34m^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^[34m^[[m[0m[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H25,1[10C13%[7;1H[?25h[?25l[53;90H~@k[7;1H[53;90H   [6;1H[53;101H4[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [7;1H[1;52r[1;1H[2L[1;53r[1;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m20[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0muse atomic_proof::atomic_protocol:::[2;1H{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[34m^[[m[0m[34m^M[m[53;100H[K[53;100H23,1[10C12%[7;1H[?25h[?25l[53;90H~@k[7;1H[53;90H   [6;1H[53;101H2[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H21,1[10C12%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[2L[1;53r[1;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[34m^[[m[0m[34m^M
^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/activation.rs:20:56[34m^[[m[0m[34m^M[m[53;100H[K[53;100H20,1[10C10%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[2L[1;53r[1;1H[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[1m:[34m^[[m[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestioo[2;1Hn)[34m^M[m[53;100H[K[53;100H19,1[10C10%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^M[m[53;100H[K[53;100H18,1[11C9%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m= [34m^[[m[0m[34m^[[m[0m[34m^[[m[1mnote[34m^[[m[0m[34m^[[m[0m: `#[warn(unused_imports)]` on by default[34m^[[m[0m[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H17,1[11C8%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H16,1[11C7%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[2L[1;53r[1;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m16[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0muse crate::MyInt;[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m     [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^[34m^[[m[0m[34m^M[m[53;100H[K[53;100H15,1[11C6%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H14,1[11C5%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mmat/src/protocols/proj.rs:16:5[34m^[[m[0m[34m^M[m[53;100H[K[53;100H13,1[11C5%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [7;1H[1;52r[1;1H[2L[1;53r[1;1H[34m^[[m]2;cargo test-verbose test_nnprotocol[34m^G^[[m]1;cargo[34m^G^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `crate::MM[2;1HyInt`[34m^[[m[0m[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H12,1[11C4%[7;1H[?25h[?25l[53;90H~@k[7;1H[53;90H   [6;1H[53;101H1[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H$ [34m^[[m[Kscript output.log[34m^[[m[17Dcargo test-verbose test_nnprotocol[34m^[[m[?1l[34m^[[m>[34m^[[m[?2004l[34m^M^M[m[53;100H[K[53;100H10,1[11C3%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[01;32m~/git/evalyn[34m^[[m[00m on [34m^[[m[35mî‚ [1;40Hmain[34m^[[m[31m![34m^[[m[00m âŒš[1;61H[34m^[[m[01;31m11:34:11[34m^[[m[00m[34m^M[m[53;100H[K[53;100H9,1[12C2%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H$ [34m^[[m[K[34m^[[m[?1h[34m^[[m=[34m^[[m[?2004h[34m^M^M^[[m[A[34m^[[m[A[34m^[[m[0m[34m^[[m[27m[34m^[[m[24m[34m^[[m[J[34m^M[m[53;100H[K[53;100H8,1[12C2%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [8;1H[1;52r[1;1H[4L[1;53r[1;1H[34m^[[m[1m[34m^[[m[7m%[34m^[[m[27m[34m^[[m[1m[34m^[[m[0m[89C  [2;1H [25C[34m^M[m [34m^M^[[m]2;luck@DESKTOP-RLSIS6U:~/git/evalyn[34m^G^[[m]1;~/git/evalyn[34m^G^[[m]7;file://DESKTOP-RLSIS6UU[3;1H/home/luck/git/evalyn[34m^[[m\[34m^M^[[m[0m[34m^[[m[27m[34m^[[m[24m[34m^[[m[J[34m^M
^[[m[01;32m~/git/evalyn[34m^[[m[00m âŒš[4;32H[34m^[[m[01;31m11:34:11[34m^[[m[00m[34m^M[m[53;100H[K[53;100H7,1[12C0%[8;1H[?25h[?25l[53;90H~@k[8;1H[53;90H   [7;1H[53;100H6[7;1H[?25h[?25l[53;90H~@k[7;1H[53;90H   [6;1H[53;100H5[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1HScript started on 2025-08-21 11:34:11+08:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="117" LINES="53"][53;100H[K[53;100H4,1[11CTop[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [5;1H[53;100H3[5;1H[?25h[?25l[53;90H~@k[5;1H[53;90H   [2;1H[53;100H2[2;1H[?25h[?25l[53;90H~@k[2;1H[53;90H   [1;1H[53;100H1[1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [2;1H[53;100H2[2;1H[?25h[?25l[53;90H~@k[2;1H[53;90H   [5;1H[53;100H3[5;1H[?25h[?25l[53;90H~@k[5;1H[53;90H   [6;1H[53;100H4[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [7;1H[53;100H5[7;1H[?25h[?25l[53;90H~@k[7;1H[53;90H   [8;1H[53;100H6[8;1H[?25h[?25l[53;90H~@k[8;1H[53;90H   [9;1H[53;100H7[9;1H[?25h[?25l[53;90H~@k[9;1H[53;90H   [11;1H[53;100H8[11;1H[?25h[?25l[53;90H~@k[11;1H[53;90H   [12;1H[53;100H9[12;1H[?25h[?25l[53;90H~@k[12;1H[53;90H   [13;1H[53;100H10,1[13;1H[?25h[?25l[53;90H~@k[13;1H[53;90H   [14;1H[53;101H1[14;1H[?25h[?25l[53;90H~@k[14;1H[53;90H   [15;1H[53;101H2[15;1H[?25h[?25l[53;90H~@k[15;1H[53;90H   [16;1H[53;101H3[16;1H[?25h[?25l[53;90H~@k[16;1H[53;90H   [17;1H[53;101H4[17;1H[?25h[?25l[53;90H~@k[17;1H[53;90H   [18;1H[53;101H5[18;1H[?25h[?25l[53;90H~@k[18;1H[53;90H   [20;1H[53;101H6[20;1H[?25h[?25l[53;90H~@k[20;1H[53;90H   [21;1H[53;101H7[21;1H[?25h[?25l[53;90H~@k[21;1H[53;90H   [22;1H[53;101H8[22;1H[?25h[?25l[53;90H~@k[22;1H[53;90H   [23;1H[53;101H9[23;1H[?25h[?25l[53;90H~@k[23;1H[53;90H   [25;1H[53;100H20[25;1H[?25h[?25l[53;90H~@k[25;1H[53;90H   [27;1H[53;101H1[27;1H[?25h[?25l[53;90H~@k[27;1H[53;90H   [28;1H[53;101H2[28;1H[?25h[?25l[53;90H~@k[28;1H[53;90H   [29;1H[53;101H3[29;1H[?25h[?25l[53;90H~@k[29;1H[53;90H   [30;1H[53;101H4[30;1H[?25h[?25l[53;90H~@k[30;1H[53;90H   [31;1H[53;101H5[31;1H[?25h[?25l[53;90H~@k[31;1H[53;90H   [32;1H[53;101H6[32;1H[?25h[?25l[53;90H~@k[32;1H[53;90H   [33;1H[53;101H7[33;1H[?25h[?25l[53;90H~@k[33;1H[53;90H   [34;1H[53;101H8[34;1H[?25h[?25l[53;90H~@k[34;1H[53;90H   [35;1H[53;101H9[35;1H[?25h[?25l[53;90H~@k[35;1H[53;90H   [36;1H[53;100H30[36;1H[?25h[?25l[53;90H~@k[36;1H[53;90H   [37;1H[53;101H1[37;1H[?25h[?25l[53;90H~@k[37;1H[53;90H   [38;1H[53;101H2[38;1H[?25h[?25l[53;90H~@k[38;1H[53;90H   [39;1H[53;101H3[39;1H[?25h[?25l[53;90H~@k[39;1H[53;90H   [41;1H[53;101H4[41;1H[?25h[?25l[53;90H~@k[41;1H[53;90H   [43;1H[53;101H5[43;1H[?25h[?25l[53;90H~@k[43;1H[53;90H   [44;1H[53;101H6[44;1H[?25h[?25l[53;90H~@k[44;1H[53;90H   [45;1H[53;101H7[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [46;1H[53;101H8[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [46;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H39,1[11C0%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [45;1H[1;52r[1;1H[3M[1;53r[50;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m34[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0muse ark_std::One;[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m     [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^[34m^[[m[0m[34m^M
^M[m[53;100H[K[53;100H40,1[11C1%[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [46;1H[53;101H1[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H2[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `Zero`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H43,1[11C2%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/range.rs:13:28[34m^[[m[0m[34m^M[m[53;100H[K[53;100H44,1[11C2%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H45,1[11C3%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [45;1H[1;52r[1;1H[3M[1;53r[50;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m13[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0muse ark_std::{UniformRand, Zero};[34m^[[[m[51;1H[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[28C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^[34m^[[m[0m[34m^M[m[53;100H[K[53;100H46,1[11C5%[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [46;1H[53;101H7[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H8[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H49,1[11C5%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: function `mat_myint_to_field` is never used[34m^[[m[0m[34m^M[m[53;100H[K[53;100H50,1[11C6%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/utils/mock_nn.rs:455:4[34m^[[m[0m[34m^M
^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H51,1[11C7%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m455[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0mfn mat_myint_to_field<F: PrimeFiell[52;1Hd>(mat: Vec<Vec<MyInt>>) -> Vec<Vec<F>> {[34m^[[m[0m[34m^M[m[53;100H[K[53;100H52,1[11C9%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H3[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^^^^^^^[34m^[[m[0m[34m^M[m[53;100H[K[53;100H54,1[10C10%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m= [34m^[[m[0m[34m^[[m[0m[34m^[[m[1mnote[34m^[[m[0m[34m^[[m[0m: `#[warn(dead_code)]` on by default[34m^[[m[0m[34m^M[m[53;100H[K[53;100H55,1[10C10%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H6[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `mat::utils::matdef::MatOps`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H57,1[10C12%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/lookup.rs:1288:13[34m^[[m[0m[34m^M[m[53;100H[K[53;100H58,1[10C12%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m     [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m1288[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[8Cuse mat::utils::matdef::M[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H59,1[10C13%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;100H60[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[50;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m1288[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m        use mat::utils::matdef::MM[51;1HatOps;[34m^[[m[0m[34m^M
^[[m[0m     [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[13C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^[34m^[[m[0m[34m^M[m[53;100H[K[53;100H61,1[10C14%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H2[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H63,1[10C15%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `ark_ff::Zero`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H64,1[10C15%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/utils/matop.rs:268:9[34m^[[m[0m[34m^M
^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H65,1[10C17%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m268[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m    use ark_ff::Zero;[34m^[[m[0m[34m^M[m[53;100H[K[53;100H66,1[10C18%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[9C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^[34m^[[m[0m[34m^M[m[53;100H[K[53;100H67,1[10C18%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H68,1[10C19%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused imports: `UniformRand` and `test_rng`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H69,1[10C20%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/utils/matop.rs:269:19[34m^[[m[0m[34m^M[m[53;100H[K[53;100H70,1[10C21%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H71,1[10C21%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m269[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m    use ark_std::{test_rng, Uniforr[52;1HmRand};[34m^[[m[0m[34m^M[m[53;100H[K[53;100H72,1[10C23%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H3[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[19C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^[34m^[[m[0m[34m^[[m[0m  [34m^[[m[0m[34m^[[m[0m[34m^^[52;1H[[m[1m[34m^[[m[33m^^^^^^^^^^^[34m^[[m[0m[34m^M[m[53;100H[K[53;100H74,1[10C23%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H5[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused import: `ark_std::test_rng`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H76,1[10C24%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [46;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/utils/mock_nn.rs:466:9[34m^[[m[0m[34m^M[m[53;100H[K[53;100H77,1[10C25%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m466[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m    use ark_std::test_rng;[34m^[[m[0m[34m^M[m[53;100H[K[53;100H78,1[10C26%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[9C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^^^^^^[34m^[[m[0m[34m^M[m[53;100H[K[53;100H79,1[10C27%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused variable: `depth`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H80,1[10C28%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H1[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/activation.rs:428:13[34m^[[m[0m[34m^M[m[53;100H[K[53;100H82,1[10C29%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H83,1[10C29%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m428[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[8Clet depth = 1;  // single  [52;1Hlayer for easier reasoning[34m^[[m[0m[34m^M[m[53;100H[K[53;100H84,1[10C31%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H5[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[13C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mm[52;1Hhelp: if this is intentional, prefix it with an underscore: `_depth`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H86,1[10C32%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H7[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H88,1[10C33%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m= [34m^[[m[0m[34m^[[m[0m[34m^[[m[1mnote[34m^[[m[0m[34m^[[m[0m: `#[warn(unused_variables)]` on by default[34m^[[m[0m[34m^M
^M[m[53;100H[K[53;100H89,1[10C34%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused variable: `rng`[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/activation.rs:506:17[34m^[[m[0m[34m^M[m[53;100H[K[53;100H90,1[10C35%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m506[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[8Clet mut rng = test_rng();[34m^[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H91,1[10C36%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H2[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m506[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m        let mut rng = test_rng();[34m^^[52;1H[[m[0m[34m^M[m[53;100H[K[53;100H93,1[10C37%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[17C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33[52;1H3mhelp: if this is intentional, prefix it with an underscore: `_rng`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H94,1[10C38%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;101H5[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H96,1[10C39%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [45;1H[1;52r[1;1H[3M[1;53r[50;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: variable does not need to be mutable[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/activation.rs:506:13[34m^[[m[0m[34m^M
^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H97,1[10C41%[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [45;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m506[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[8Clet mut rng = test_rng();[34m^^[52;1H[[m[0m[34m^M[m[53;100H[K[53;100H98,1[10C42%[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [47;1H[53;101H9[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[13C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m----[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^[34m^[[m[00[52;1Hm[34m^M[m[53;100H[K[53;100H100,1[9C43%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H1[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[13C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H102,1[9C43%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[13C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12mhelp: remove this `mut`[34m^[[m[0m[34m^M
^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H103,1[9C45%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m= [34m^[[m[0m[34m^[[m[0m[34m^[[m[1mnote[34m^[[m[0m[34m^[[m[0m: `#[warn(unused_mut)]` on by default[34m^[[m[0m[34m^M
^M[m[53;100H[K[53;100H104,1[9C46%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused variable: `par_commit_cache`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H105,1[9C47%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/nn.rs:293:13[34m^[[m[0m[34m^M[m[53;100H[K[53;100H106,1[9C47%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H107,1[9C48%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m293[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[8Clet par_commit_cache = nn..[52;1Hpar_commit_cache.clone();[34m^[[m[0m[34m^M[m[53;100H[K[53;100H108,1[9C49%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H9[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[13C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^^^^^[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0mm[52;1H[34m^[[m[1m[34m^[[m[33mhelp: if this is intentional, prefix it with an underscore: `_par_commit_cache`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H110,1[9C50%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H1[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H112,1[9C51%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused variable: `witness_commit_cache`[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/nn.rs:295:13[34m^[[m[0m[34m^M[m[53;100H[K[53;100H113,1[9C52%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [45;1H[1;52r[1;1H[3M[1;53r[50;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m295[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[8Clet witness_commit_cache ==[52;1H nn.witness_commit_cache.clone();[34m^[[m[0m[34m^M[m[53;100H[K[53;100H114,1[9C54%[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [47;1H[53;102H5[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[13C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^^^^^^^^^[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^^[52;1H[[m[0m[34m^[[m[1m[34m^[[m[33mhelp: if this is intentional, prefix it with an underscore: `_witness_commit_cache`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H116,1[9C54%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H7[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H118,1[9C55%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused variable: `leaves_com_cache`[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/nn.rs:297:26[34m^[[m[0m[34m^M[m[53;100H[K[53;100H119,1[9C57%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [45;1H[1;52r[1;1H[3M[1;53r[50;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M
^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m297[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[8Clet (leaves_com, leaves_coo[52;1Hm_cache) = nn.mock_nn.commit_to_leaves(&nn.pcsrs);[34m^[[m[0m[34m^M[m[53;100H[K[53;100H120,1[9C58%[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [47;1H[53;102H1[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[26C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^^^^^[34m^[[m[0m[34m^[[m[[[52;1H0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mhelp: if this is intentional, prefix it with an underscore: `_leaves_com_cache`[34m^[[m[0m[34m^M[m[53;100H[K[53;100H122,1[9C59%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H3[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H124,1[9C60%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [45;1H[1;52r[1;1H[3M[1;53r[50;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m: unused `PairingOutput` that must be used[34m^[[m[0m[34m^M
^[[m[0m   [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m--> [34m^[[m[0m[34m^[[m[0mcomposite/src/protocols/nn.rs:290:9[34m^[[m[0m[34m^M
^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H125,1[9C62%[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [45;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m290[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[8Cnn.commit_to_witness();[34m^[[m[[[52;1H0m[34m^M[m[53;100H[K[53;100H126,1[9C62%[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [47;1H[53;102H7[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[9C[34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[33m^^^^^^^^^^^^^^^^^^^^^^[34m^[[m[0m[34m^M[m[53;100H[K[53;100H128,1[9C63%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H129,1[9C64%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m= [34m^[[m[0m[34m^[[m[0m[34m^[[m[1mnote[34m^[[m[0m[34m^[[m[0m: `#[warn(unused_must_use)]` on by default[34m^[[m[0m[34m^M[m[53;100H[K[53;100H130,1[9C65%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;14mhelp[34m^[[m[0m[34m^[[m[0m: use `let _ = ...` to ignore the resulting value[34m^[[m[0m[34m^M
^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^M[m[53;100H[K[53;100H131,1[9C66%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [45;1H[1;52r[1;1H[3M[1;53r[50;1H[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m290[34m^[[m[0m[34m^[[m[0m [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m| [34m^[[m[0m[34m^[[m[0m[8C[34m^[[m[0m[34m^[[m[0m[34m^[[m[38;5;10mlet _ = [34m^[[m[0m[34m^[[[m[51;1H[0mnn.commit_to_witness();[34m^[[m[0m[34m^M
^[[m[0m    [34m^[[m[0m[34m^[[m[0m[34m^[[m[1m[34m^[[m[38;5;12m|[34m^[[m[0m[34m^[[m[0m[9C[34m^[[m[0m[34m^[[m[0m[34m^[[m[38;5;10m+++++++[34m^[[m[0m[34m^M[m[53;100H[K[53;100H132,1[9C67%[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [46;1H[53;102H3[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H4[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^M
^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[1m:[34m^[[m[0m `composite` (lib) generated 7 warnings (run `cargo fix --lib -p composite` to appl[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H135,1[9C68%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H6[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [45;1H[1;52r[1;1H[3M[1;53r[49;1H[34m^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[1m:[34m^[[m[0m `composite` (lib) generated 7 warnings (run `cargo fix --lib -p composite` to appll[50;1Hy 3 suggestions)[34m^M
^[[m[1m[34m^[[m[33mwarning[34m^[[m[0m[34m^[[m[1m:[34m^[[m[0m `composite` (lib test) generated 14 warnings (3 duplicates) (run `cargo fix --lib  [52;1H-p composite --tests` to apply 5 suggestions)[34m^M[m[53;100H[K[53;100H137,1[9C70%[45;1H[?25h[?25l[53;90H~@k[45;1H[53;90H   [47;1H[53;102H8[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[1m[34m^[[m[32m    Finished[34m^[[m[0m `release` profile [optimized + debuginfo] target(s) in 0.10s[34m^M[m[53;100H[K[53;100H139,1[9C70%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[1m[34m^[[m[32m     Running[34m^[[m[0m unittests src/lib.rs (target/release/deps/ark_pcs_bench_templates-d7c7839af3e416aa)[34m^M
^M[m[53;100H[K[53;100H140,1[9C72%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1Hrunning 0 tests[34m^M
^M[m[53;100H[K[53;100H141,1[9C73%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1Htest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s[34m^M[m[53;100H[K[53;100H142,1[9C73%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H143,1[9C74%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[1m[34m^[[m[32m     Running[34m^[[m[0m unittests src/lib.rs (target/release/deps/ark_poly_commit-e7da8c0b1f10bd4b)[34m^M[m[53;100H[K[53;100H144,1[9C75%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H145,1[9C76%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1Hrunning 0 tests[34m^M[m[53;100H[K[53;100H146,1[9C76%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H147,1[9C77%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1Htest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 118 filtered out; finished in 0.00s[34m^M[m[53;100H[K[53;100H148,1[9C78%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H149,1[9C78%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H[34m^[[m[1m[34m^[[m[32m     Running[34m^[[m[0m unittests src/lib.rs (target/release/deps/atomic_proof-bc8f98c3ea58e58f)[34m^M
^M[m[53;100H[K[53;100H150,1[9C80%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H1[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1Hrunning 0 tests[34m^M
^M[m[53;100H[K[53;100H152,1[9C81%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H3[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1Htest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 104 filtered out; finished in 0.00s[34m^M[m[53;100H[K[53;100H154,1[9C82%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H155,1[9C82%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^[[m[1m[34m^[[m[32m     Running[34m^[[m[0m unittests src/lib.rs (target/release/deps/composite-2ca65516b9c183d8)[34m^M[m[53;100H[K[53;100H156,1[9C83%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H[34m^M[m[53;100H[K[53;100H157,1[9C84%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1Hrunning 1 test[34m^M[m
************************************************************************[34m^M[m[53;100H[K[53;100H158,1[9C85%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H9[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H========Preparing NN parameters=========================================[34m^M[m
Table Len: 2^18[34m^M[m[53;100H[K[53;100H160,1[9C86%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H1[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H========End Preparing NN parameters=========================================[34m^M[m[53;100H[K[53;100H162,1[9C87%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H************************************************************************[34m^M[m[53;100H[K[53;100H163,1[9C88%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H************************************************************************[34m^M[m[53;100H[K[53;100H164,1[9C89%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H========Preparing SRS parameters=========================================[34m^M[m[53;100H[K[53;100H165,1[9C89%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1HSRS size: 1378040 B[34m^M[m
Setup time: 1.121926 seconds[34m^M[m[53;100H[K[53;100H166,1[9C91%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H7[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1H========End Setup=========================================[34m^M[m
************************************************************************[34m^M[m[53;100H[K[53;100H168,1[9C92%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H9[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H======================Unverified NN Feed Forward ============[34m^M[m[53;100H[K[53;100H170,1[9C93%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1HFeed forward completed in 0.008171 seconds[34m^M[m[53;100H[K[53;100H171,1[9C94%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1H=================================================[34m^M[m[53;100H[K[53;100H172,1[9C94%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1Htest protocols::nn::tests::test_nnprotocol has been running for over 60 seconds[34m^M[m[53;100H[K[53;100H173,1[9C95%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [46;1H[1;52r[1;1H[2M[1;53r[51;1HTable Len: 2^18[34m^M
^M[m[53;100H[K[53;100H174,1[9C97%[46;1H[?25h[?25l[53;90H~@k[46;1H[53;90H   [47;1H[53;102H5[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1Hthread 'protocols::nn::tests::test_nnprotocol' panicked at composite/src/utils/mock_nn.rs:239:9:[34m^M[m[53;100H[K[53;100H176,1[9C97%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [47;1H[1;52r[52;1H
[1;53r[52;1Hassertion `left == right` failed[34m^M[m[53;100H[K[53;100H177,1[9C98%[47;1H[?25h[?25l[53;90H~@k[47;1H[53;90H   [48;1H[53;102H8[48;1H[?25h[?25l[53;90H~@k[48;1H[53;90H   [49;1H[53;102H9[49;1H[?25h[?25l[53;101H80[50;1H[?25h[?25l[53;90H~@k[50;1H[53;90H   [51;1H[53;102H1[51;1H[?25h[?25l[53;90H~@k[51;1H[53;90H   [52;1H[53;102H2[52;1H[?25h[?25l[53;90H~@k[52;1H[53;90H   [1;1H  left: [0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127,,[2;1H 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 1277[3;1H, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 0, 1277[4;1H, 0, 0, 127, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 11[5;1H27, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0,  [6;1H0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 11[7;1H27, 0, 127, 127, 127, 0, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 1277[8;1H, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 58, 0, 127, 127, 127, 127, 0, 0, 0, 0, 0, 127, 127, 0, 0,  [9;1H0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 0, 0, 0, 11[10;1H27, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 0,  [11;1H127, 0, 0, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0,  [12;1H127, 0, 127, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127,  [13;1H0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127,  [14;1H0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127,,[15;1H 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 1277[16;1H, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127,,[17;1H 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 123, 00[18;1H, 0, 127, 127, 0, 0, 0, 120, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 0,  [19;1H0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 0, 122[20;1H7, 0, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127,,[21;1H 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 40, 0, 0, 0, 0, 127, 127, 127, 0, 1277[22;1H, 127, 0, 127, 127, 0, 127, 0, 127, 37, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 122[23;1H7, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 122[24;1H7, 127, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 1277[25;1H, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0,,[26;1H 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0,,[27;1H 0, 127, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 1, 0, 0, 127, 127, 0, 0, 0, 0, 127, 00[28;1H, 0, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 1277[29;1H, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 122[30;1H7, 15, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 1277[31;1H, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 1277[32;1H, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127,  [33;1H0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 127, 127, 1277[34;1H, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127,,[35;1H 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 122[36;1H7, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 122[37;1H7, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 00[38;1H, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 11[39;1H27, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127,,[40;1H 127, 127, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0,  [41;1H127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0,,[42;1H 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 00[43;1H, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 126, 127, 0,,[44;1H 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0,,[45;1H 127, 0, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 00[46;1H, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 122[47;1H7, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0,  [48;1H127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127,,[49;1H 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 11[50;1H27, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 127,,[51;1H 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 00[52;1H, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127,[53;102H3[12C9[1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H right: [3241, 13748, 17362, 2159, 3946, 19677, 6280, 24119, 26967, 29984, 26069, 16210, 17589, 3664, 9626, 3045, 2799[2;1H89, 23308, 4846, 25255, 1741, 5270, 25359, 1679, 27639, 18956, 26229, 10094, 17272, 22205, 11984, 16654, 18135, 2693,,[3;1H 26131, 22947, 27295, 30214, 20095, 19399, 17444, 14742, 11729, 31823, 29849, 11101, 28983, 5864, 6376, 21245, 9418,  [4;1H26450, 15421, 2047, 26933, 4971, 18857, 3405, 18735, 13362, 26559, 20389, 1918, 11380, 20192, 23981, 19626, 3523, 4033[5;1H0, 29976, 28544, 16814, 25593, 32206, 6481, 5683, 26275, 25009, 6598, 13047, 11858, 14405, 5950, 18254, 6840, 7845, 11[6;1H8315, 30625, 13741, 10440, 272, 9702, 15760, 4806, 28760, 14853, 1269, 11358, 21570, 7559, 6908, 9556, 24953, 29464,  [7;1H16853, 32354, 7962, 26626, 20934, 5199, 7955, 30601, 13211, 32038, 28527, 6971, 23142, 4531, 2761, 8252, 29287, 104955[8;1H, 1803, 17370, 26017, 16163, 28990, 8653, 16420, 16343, 16326, 16226, 16341, 16357, 16344, 16307, 16347, 16432, 163966[9;1H, 16336, 16378, 16269, 16477, 16424, 16371, 16369, 16381, 16403, 16326, 16441, 16328, 16305, 16324, 16334, 16329, 1644[10;1H82, 16320, 16373, 16468, 16501, 16347, 16389, 16523, 16435, 16481, 16293, 16250, 16354, 16412, 16437, 16356, 16409, 11[11;1H6259, 16426, 16349, 16318, 16417, 16265, 16428, 16397, 16451, 16368, 16380, 16304, 16393, 16417, 16399, 16331, 16425,,[12;1H 16454, 16265, 16423, 16432, 16390, 16318, 16330, 16395, 16473, 16409, 16451, 16475, 16323, 16336, 16507, 16345, 16388[13;1H5, 16279, 16373, 16452, 16517, 16379, 16435, 16325, 16297, 16440, 16322, 16418, 16352, 16251, 16383, 16323, 16419, 166[14;1H385, 16444, 16423, 16193, 16258, 16321, 16382, 16379, 16422, 16398, 16296, 16352, 16302, 16506, 16396, 16343, 16318,  [15;1H16317, 16550, 16622, 16368, 16354, 16462, 16390, 16521, 16265, 16416, 16419, 16394, 16329, 16409, 16418, 16458, 164655[16;1H, 16507, 16385, 16347, 16277, 16255, 16380, 16426, 16274, 16400, 16491, 16389, 16392, 16323, 16327, 16365, 16430, 1633[17;1H76, 16367, 16312, 16441, 16272, 16451, 16286, 16345, 16281, 16425, 16409, 16406, 16316, 16414, 16375, 16403, 16289, 11[18;1H6285, 16437, 16288, 16616, 16274, 16302, 16297, 16389, 16394, 16399, 16512, 16236, 16460, 16358, 16437, 16563, 16301,,[19;1H 16475, 16330, 16429, 16336, 16388, 16311, 16402, 16331, 16432, 16352, 16471, 16429, 16301, 16341, 16299, 16475, 16377[20;1H4, 16496, 16454, 16294, 16337, 16446, 16349, 16295, 16325, 16459, 16391, 16373, 16407, 16356, 16373, 16387, 16473, 166[21;1H364, 16437, 16281, 16474, 16287, 16411, 16448, 16380, 16421, 16308, 16490, 16342, 16417, 16477, 16378, 16236, 16424,  [22;1H16440, 16236, 16494, 16407, 16373, 16386, 16355, 16525, 16498, 16410, 16379, 16328, 16506, 16490, 16367, 16323, 163533[23;1H, 16374, 16418, 16332, 16393, 16348, 16431, 16363, 16452, 16412, 16373, 16534, 16463, 16286, 16379, 16304, 16372, 1633[24;1H90, 16399, 16321, 16415, 16479, 16452, 16432, 16260, 16359, 16313, 16442, 16279, 16387, 16310, 16369, 16364, 16458, 11[25;1H6326, 16349, 16453, 16373, 16346, 16434, 16310, 16410, 16443, 16441, 16233, 16318, 16468, 16347, 16519, 16320, 16345,,[26;1H 16348, 16405, 16374, 16370, 16506, 16307, 16468, 16434, 16369, 16435, 16229, 16450, 16380, 16403, 16315, 16441, 16344[27;1H0, 16411, 16360, 16469, 16328, 16538, 16488, 16178, 16417, 16380, 16470, 16307, 16494, 16430, 16265, 16391, 16402, 166[28;1H443, 16306, 16365, 16431, 16325, 16390, 16280, 16453, 16440, 16349, 16441, 16284, 16405, 16280, 16426, 16337, 16432,  [29;1H16399, 16324, 16411, 16328, 16440, 16301, 16433, 16559, 16393, 16337, 16450, 16417, 16251, 16483, 16479, 16369, 164000[30;1H, 16354, 16438, 16444, 16384, 16378, 16260, 16633, 16528, 16314, 16263, 16367, 16384, 16424, 16289, 16460, 16383, 1644[31;1H11, 16265, 16449, 16357, 16297, 16505, 16435, 16325, 16428, 16272, 16386, 16425, 16424, 16267, 16342, 16458, 16358, 11[32;1H6321, 16297, 16258, 16360, 16476, 16321, 16405, 16303, 16389, 16276, 16453, 16286, 16309, 16367, 16331, 16298, 16386,,[33;1H 16317, 16394, 16363, 16424, 16282, 16248, 16488, 16341, 16570, 16347, 16314, 16313, 16420, 16386, 16306, 16501, 16233[34;1H2, 16413, 16348, 16419, 16443, 16221, 16391, 16369, 16379, 16396, 16421, 16368, 16468, 16369, 16437, 16409, 16493, 166[35;1H457, 16280, 16420, 16442, 16388, 16293, 16433, 16525, 16332, 16417, 16431, 16395, 16287, 16392, 16507, 16409, 16388,  [36;1H16289, 16448, 16375, 16312, 16480, 16255, 16439, 16326, 16410, 16248, 16423, 16382, 16383, 16347, 16366, 16372, 163300[37;1H, 16432, 16616, 16390, 16238, 16444, 16423, 16287, 16476, 16420, 16360, 16435, 16351, 16425, 16383, 16399, 16325, 1622[38;1H99, 16556, 16506, 16340, 16281, 16380, 16328, 16468, 16296, 16479, 16441, 16409, 16332, 16438, 16379, 16350, 16497, 11[39;1H6477, 16352, 16385, 16266, 16443, 16388, 16468, 16306, 16334, 16502, 16441, 16401, 16237, 16304, 16355, 16394, 16333,,[40;1H 16413, 16297, 16367, 16385, 16512, 16333, 16358, 16416, 16423, 16335, 16400, 16335, 16390, 16387, 16440, 16413, 16344[41;1H2, 16441, 16285, 16476, 16316, 16292, 16277, 16431, 16335, 16318, 16500, 16238, 16402, 16397, 16376, 16472, 16322, 166[42;1H477, 16420, 16349, 16390, 16449, 16338, 16414, 16419, 16433, 16325, 16504, 16467, 16299, 16413, 16367, 16440, 16346,  [43;1H16404, 16442, 16297, 16389, 16454, 16465, 16233, 16412, 16477, 16348, 16379, 16273, 16437, 16460, 16296, 16496, 162011[44;1H, 16425, 16330, 16540, 16321, 16382, 16425, 16417, 16340, 16320, 16450, 16354, 16395, 16465, 16368, 16216, 16452, 1644[45;1H46, 16329, 16447, 16369, 16360, 16412, 16375, 16486, 16446, 16468, 16348, 16348, 16550, 16451, 16363, 16308, 16411, 11[46;1H6388, 16497, 16331, 16450, 16360, 16352, 16329, 16404, 16390, 16341, 16531, 16484, 16343, 16388, 16204, 16403, 16409,,[47;1H 16383, 16307, 16297, 16450, 16403, 16357, 16274, 16261, 16380, 16470, 16328, 16381, 16296, 16409, 16339, 16467, 16277[48;1H7, 16325, 16387, 16339, 16375, 16428, 16318, 16387, 16362, 16482, 16320, 16290, 16473, 16354, 16526, 16321, 16294, 166[49;1H300, 16412, 16310, 16318, 16493, 16280, 16411, 16357, 16426, 16518, 16215, 16422, 16427, 16362, 16385, 16378, 16369,  [50;1H16451, 16420, 16380, 16315, 16495, 16537, 16278, 16451, 16410, 16382, 16316, 16417, 16512, 16340, 16447, 16423, 164288[51;1H, 16313, 16411, 16493, 16383, 16474, 16249, 16412, 16398, 16332, 16436, 16242, 16427, 16324, 16454, 16262, 16428, 1655[52;1H02, 16315, 16350, 16340, 16382, 16365, 16428, 16544, 16296, 16230, 16453, 16388, 16323, 16473, 16373, 16425, 16446, 1[53;102H4[11CBot[1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H  left: [0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127,,[2;1H 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 1277[3;1H, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 0, 1277[4;1H, 0, 0, 127, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 11[5;1H27, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0,  [6;1H0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 11[7;1H27, 0, 127, 127, 127, 0, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 1277[8;1H, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 58, 0, 127, 127, 127, 127, 0, 0, 0, 0, 0, 127, 127, 0, 0,  [9;1H0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 0, 0, 0, 11[10;1H27, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 0,  [11;1H127, 0, 0, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0,  [12;1H127, 0, 127, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127,  [13;1H0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127,  [14;1H0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127,,[15;1H 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 1277[16;1H, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127,,[17;1H 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 123, 00[18;1H, 0, 127, 127, 0, 0, 0, 120, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 0,  [19;1H0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 0, 122[20;1H7, 0, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127,,[21;1H 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 40, 0, 0, 0, 0, 127, 127, 127, 0, 1277[22;1H, 127, 0, 127, 127, 0, 127, 0, 127, 37, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 122[23;1H7, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 122[24;1H7, 127, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 1277[25;1H, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0,,[26;1H 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0,,[27;1H 0, 127, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 1, 0, 0, 127, 127, 0, 0, 0, 0, 127, 00[28;1H, 0, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 1277[29;1H, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 122[30;1H7, 15, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 1277[31;1H, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 1277[32;1H, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127,  [33;1H0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 127, 127, 1277[34;1H, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127,,[35;1H 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 122[36;1H7, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 122[37;1H7, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 00[38;1H, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 11[39;1H27, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127,,[40;1H 127, 127, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0,  [41;1H127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0,,[42;1H 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 00[43;1H, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 126, 127, 0,,[44;1H 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0,,[45;1H 127, 0, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 00[46;1H, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 122[47;1H7, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0,  [48;1H127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127,,[49;1H 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 11[50;1H27, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 127,,[51;1H 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 00[52;1H, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127,[53;102H3[11C99%[1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[1;52r[1;1H[L[1;53r[1;1Hassertion `left == right` failed[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H182,1[9C98%[1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [2;1H[1;52r[1;1H[2L[1;53r[1;1H[34m^M[m
thread 'protocols::nn::tests::test_nnprotocol' panicked at composite/src/utils/mock_nn.rs:239:9:[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H181,1[9C98%[2;1H[?25h[?25l[53;90H~@k[2;1H[53;90H   [3;1H[1;52r[1;1H[2L[1;53r[1;1Htest protocols::nn::tests::test_nnprotocol has been running for over 60 seconds[34m^M[m
Table Len: 2^18[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H180,1[9C98%[3;1H[?25h[?25l[53;90H~@k[3;1H[53;90H   [4;1H[1;52r[1;1H[2L[1;53r[1;1HFeed forward completed in 0.008171 seconds[34m^M[m
=================================================[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H179,1[9C98%[4;1H[?25h[?25l[53;90H~@k[4;1H[53;90H   [5;1H[1;52r[1;1H[2L[1;53r[1;1H************************************************************************[34m^M[m
======================Unverified NN Feed Forward ============[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H178,1[9C98%[5;1H[?25h[?25l[53;90H~@k[5;1H[53;90H   [6;1H[1;52r[1;1H[2L[1;53r[1;1HSetup time: 1.121926 seconds[34m^M[m
========End Setup=========================================[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H177,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1HSRS size: 1378040 B[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H176,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H========Preparing SRS parameters=========================================[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H175,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H************************************************************************[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H174,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H************************************************************************[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H173,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H========End Preparing NN parameters=========================================[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H172,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1HTable Len: 2^18[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H171,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H========Preparing NN parameters=========================================[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H170,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H************************************************************************[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H169,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1Hrunning 1 test[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H168,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H167,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^[[m[1m[34m^[[m[32m     Running[34m^[[m[0m unittests src/lib.rs (target/release/deps/composite-2ca65516b9c183d8)[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H166,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H165,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1Htest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 104 filtered out; finished in 0.00s[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H164,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [7;1H[53;102H5[7;1H[?25h[?25l[53;90H~@k[7;1H[53;90H   [8;1H[53;102H6[8;1H[?25h[?25l[53;90H~@k[8;1H[53;90H   [9;1H[53;102H7[9;1H[?25h[?25l[53;90H~@k[9;1H[53;90H   [10;1H[53;102H8[10;1H[?25h[?25l[53;90H~@k[10;1H[53;90H   [11;1H[53;102H9[11;1H[?25h[?25l[53;90H~@k[11;1H[53;90H   [12;1H[53;101H70[12;1H[?25h[?25l[53;90H~@k[12;1H[53;90H   [13;1H[53;102H1[13;1H[?25h[?25l[53;90H~@k[13;1H[53;90H   [14;1H[53;102H2[14;1H[?25h[?25l[53;90H~@k[14;1H[53;90H   [15;1H[53;102H3[15;1H[?25h[?25l[53;90H~@k[15;1H[53;90H   [16;1H[53;102H4[16;1H[?25h[?25l[53;90H~@k[16;1H[53;90H   [17;1H[53;102H5[17;1H[?25h[?25l[53;90H~@k[17;1H[53;90H   [18;1H[53;102H6[18;1H[?25h[?25l[53;90H~@k[18;1H[53;90H   [19;1H[53;102H7[19;1H[?25h[?25l[53;90H~@k[19;1H[53;90H   [20;1H[53;102H8[20;1H[?25h[?25l[53;90H~@k[20;1H[53;90H   [21;1H[53;102H9[21;1H[?25h[?25l[53;90H~@k[21;1H[53;90H   [22;1H[53;101H80[22;1H[?25h[?25l[53;90H~@k[22;1H[53;90H   [23;1H[53;102H1[23;1H[?25h[?25l[53;90H~@k[23;1H[53;90H   [22;1H[53;102H0[22;1H[?25h[?25l[53;90H~@k[22;1H[53;90H   [23;1H[53;102H1[23;1H[?25h[?25l[53;90H~@k[23;1H[53;90H   [24;1H[53;102H2[24;1H[?25h[?25l[53;90H~@k[24;1H[53;90H   [1;1H[1;52r[1;1H[24M[1;53r[28;1H, 0, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 1277[29;1H, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 122[30;1H7, 15, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 1277[31;1H, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 1277[32;1H, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127,  [33;1H0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 127, 127, 1277[34;1H, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127,,[35;1H 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 122[36;1H7, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 122[37;1H7, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 00[38;1H, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 11[39;1H27, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127,,[40;1H 127, 127, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0,  [41;1H127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0,,[42;1H 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 00[43;1H, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 126, 127, 0,,[44;1H 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0,,[45;1H 127, 0, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 00[46;1H, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 122[47;1H7, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0,  [48;1H127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127,,[49;1H 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 11[50;1H27, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 127,,[51;1H 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 00[52;1H, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127,[53;100H[K[53;100H183,1[9C99%[1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H right: [3241, 13748, 17362, 2159, 3946, 19677, 6280, 24119, 26967, 29984, 26069, 16210, 17589, 3664, 9626, 3045, 2799[2;1H89, 23308, 4846, 25255, 1741, 5270, 25359, 1679, 27639, 18956, 26229, 10094, 17272, 22205, 11984, 16654, 18135, 2693,,[3;1H 26131, 22947, 27295, 30214, 20095, 19399, 17444, 14742, 11729, 31823, 29849, 11101, 28983, 5864, 6376, 21245, 9418,  [4;1H26450, 15421, 2047, 26933, 4971, 18857, 3405, 18735, 13362, 26559, 20389, 1918, 11380, 20192, 23981, 19626, 3523, 4033[5;1H0, 29976, 28544, 16814, 25593, 32206, 6481, 5683, 26275, 25009, 6598, 13047, 11858, 14405, 5950, 18254, 6840, 7845, 11[6;1H8315, 30625, 13741, 10440, 272, 9702, 15760, 4806, 28760, 14853, 1269, 11358, 21570, 7559, 6908, 9556, 24953, 29464,  [7;1H16853, 32354, 7962, 26626, 20934, 5199, 7955, 30601, 13211, 32038, 28527, 6971, 23142, 4531, 2761, 8252, 29287, 104955[8;1H, 1803, 17370, 26017, 16163, 28990, 8653, 16420, 16343, 16326, 16226, 16341, 16357, 16344, 16307, 16347, 16432, 163966[9;1H, 16336, 16378, 16269, 16477, 16424, 16371, 16369, 16381, 16403, 16326, 16441, 16328, 16305, 16324, 16334, 16329, 1644[10;1H82, 16320, 16373, 16468, 16501, 16347, 16389, 16523, 16435, 16481, 16293, 16250, 16354, 16412, 16437, 16356, 16409, 11[11;1H6259, 16426, 16349, 16318, 16417, 16265, 16428, 16397, 16451, 16368, 16380, 16304, 16393, 16417, 16399, 16331, 16425,,[12;1H 16454, 16265, 16423, 16432, 16390, 16318, 16330, 16395, 16473, 16409, 16451, 16475, 16323, 16336, 16507, 16345, 16388[13;1H5, 16279, 16373, 16452, 16517, 16379, 16435, 16325, 16297, 16440, 16322, 16418, 16352, 16251, 16383, 16323, 16419, 166[14;1H385, 16444, 16423, 16193, 16258, 16321, 16382, 16379, 16422, 16398, 16296, 16352, 16302, 16506, 16396, 16343, 16318,  [15;1H16317, 16550, 16622, 16368, 16354, 16462, 16390, 16521, 16265, 16416, 16419, 16394, 16329, 16409, 16418, 16458, 164655[16;1H, 16507, 16385, 16347, 16277, 16255, 16380, 16426, 16274, 16400, 16491, 16389, 16392, 16323, 16327, 16365, 16430, 1633[17;1H76, 16367, 16312, 16441, 16272, 16451, 16286, 16345, 16281, 16425, 16409, 16406, 16316, 16414, 16375, 16403, 16289, 11[18;1H6285, 16437, 16288, 16616, 16274, 16302, 16297, 16389, 16394, 16399, 16512, 16236, 16460, 16358, 16437, 16563, 16301,,[19;1H 16475, 16330, 16429, 16336, 16388, 16311, 16402, 16331, 16432, 16352, 16471, 16429, 16301, 16341, 16299, 16475, 16377[20;1H4, 16496, 16454, 16294, 16337, 16446, 16349, 16295, 16325, 16459, 16391, 16373, 16407, 16356, 16373, 16387, 16473, 166[21;1H364, 16437, 16281, 16474, 16287, 16411, 16448, 16380, 16421, 16308, 16490, 16342, 16417, 16477, 16378, 16236, 16424,  [22;1H16440, 16236, 16494, 16407, 16373, 16386, 16355, 16525, 16498, 16410, 16379, 16328, 16506, 16490, 16367, 16323, 163533[23;1H, 16374, 16418, 16332, 16393, 16348, 16431, 16363, 16452, 16412, 16373, 16534, 16463, 16286, 16379, 16304, 16372, 1633[24;1H90, 16399, 16321, 16415, 16479, 16452, 16432, 16260, 16359, 16313, 16442, 16279, 16387, 16310, 16369, 16364, 16458, 11[25;1H6326, 16349, 16453, 16373, 16346, 16434, 16310, 16410, 16443, 16441, 16233, 16318, 16468, 16347, 16519, 16320, 16345,,[26;1H 16348, 16405, 16374, 16370, 16506, 16307, 16468, 16434, 16369, 16435, 16229, 16450, 16380, 16403, 16315, 16441, 16344[27;1H0, 16411, 16360, 16469, 16328, 16538, 16488, 16178, 16417, 16380, 16470, 16307, 16494, 16430, 16265, 16391, 16402, 166[28;1H443, 16306, 16365, 16431, 16325, 16390, 16280, 16453, 16440, 16349, 16441, 16284, 16405, 16280, 16426, 16337, 16432,  [29;1H16399, 16324, 16411, 16328, 16440, 16301, 16433, 16559, 16393, 16337, 16450, 16417, 16251, 16483, 16479, 16369, 164000[30;1H, 16354, 16438, 16444, 16384, 16378, 16260, 16633, 16528, 16314, 16263, 16367, 16384, 16424, 16289, 16460, 16383, 1644[31;1H11, 16265, 16449, 16357, 16297, 16505, 16435, 16325, 16428, 16272, 16386, 16425, 16424, 16267, 16342, 16458, 16358, 11[32;1H6321, 16297, 16258, 16360, 16476, 16321, 16405, 16303, 16389, 16276, 16453, 16286, 16309, 16367, 16331, 16298, 16386,,[33;1H 16317, 16394, 16363, 16424, 16282, 16248, 16488, 16341, 16570, 16347, 16314, 16313, 16420, 16386, 16306, 16501, 16233[34;1H2, 16413, 16348, 16419, 16443, 16221, 16391, 16369, 16379, 16396, 16421, 16368, 16468, 16369, 16437, 16409, 16493, 166[35;1H457, 16280, 16420, 16442, 16388, 16293, 16433, 16525, 16332, 16417, 16431, 16395, 16287, 16392, 16507, 16409, 16388,  [36;1H16289, 16448, 16375, 16312, 16480, 16255, 16439, 16326, 16410, 16248, 16423, 16382, 16383, 16347, 16366, 16372, 163300[37;1H, 16432, 16616, 16390, 16238, 16444, 16423, 16287, 16476, 16420, 16360, 16435, 16351, 16425, 16383, 16399, 16325, 1622[38;1H99, 16556, 16506, 16340, 16281, 16380, 16328, 16468, 16296, 16479, 16441, 16409, 16332, 16438, 16379, 16350, 16497, 11[39;1H6477, 16352, 16385, 16266, 16443, 16388, 16468, 16306, 16334, 16502, 16441, 16401, 16237, 16304, 16355, 16394, 16333,,[40;1H 16413, 16297, 16367, 16385, 16512, 16333, 16358, 16416, 16423, 16335, 16400, 16335, 16390, 16387, 16440, 16413, 16344[41;1H2, 16441, 16285, 16476, 16316, 16292, 16277, 16431, 16335, 16318, 16500, 16238, 16402, 16397, 16376, 16472, 16322, 166[42;1H477, 16420, 16349, 16390, 16449, 16338, 16414, 16419, 16433, 16325, 16504, 16467, 16299, 16413, 16367, 16440, 16346,  [43;1H16404, 16442, 16297, 16389, 16454, 16465, 16233, 16412, 16477, 16348, 16379, 16273, 16437, 16460, 16296, 16496, 162011[44;1H, 16425, 16330, 16540, 16321, 16382, 16425, 16417, 16340, 16320, 16450, 16354, 16395, 16465, 16368, 16216, 16452, 1644[45;1H46, 16329, 16447, 16369, 16360, 16412, 16375, 16486, 16446, 16468, 16348, 16348, 16550, 16451, 16363, 16308, 16411, 11[46;1H6388, 16497, 16331, 16450, 16360, 16352, 16329, 16404, 16390, 16341, 16531, 16484, 16343, 16388, 16204, 16403, 16409,,[47;1H 16383, 16307, 16297, 16450, 16403, 16357, 16274, 16261, 16380, 16470, 16328, 16381, 16296, 16409, 16339, 16467, 16277[48;1H7, 16325, 16387, 16339, 16375, 16428, 16318, 16387, 16362, 16482, 16320, 16290, 16473, 16354, 16526, 16321, 16294, 166[49;1H300, 16412, 16310, 16318, 16493, 16280, 16411, 16357, 16426, 16518, 16215, 16422, 16427, 16362, 16385, 16378, 16369,  [50;1H16451, 16420, 16380, 16315, 16495, 16537, 16278, 16451, 16410, 16382, 16316, 16417, 16512, 16340, 16447, 16423, 164288[51;1H, 16313, 16411, 16493, 16383, 16474, 16249, 16412, 16398, 16332, 16436, 16242, 16427, 16324, 16454, 16262, 16428, 1655[52;1H02, 16315, 16350, 16340, 16382, 16365, 16428, 16544, 16296, 16230, 16453, 16388, 16323, 16473, 16373, 16425, 16446, 1[53;102H4[11CBot[1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H  left: [0, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127,,[2;1H 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 1277[3;1H, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 0, 1277[4;1H, 0, 0, 127, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 0, 0, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 0, 127, 11[5;1H27, 0, 127, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0,  [6;1H0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 11[7;1H27, 0, 127, 127, 127, 0, 0, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 1277[8;1H, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 58, 0, 127, 127, 127, 127, 0, 0, 0, 0, 0, 127, 127, 0, 0,  [9;1H0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 127, 127, 0, 0, 0, 0, 11[10;1H27, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 0,  [11;1H127, 0, 0, 0, 127, 127, 127, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0,  [12;1H127, 0, 127, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127,  [13;1H0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127,  [14;1H0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127,,[15;1H 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 1277[16;1H, 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127,,[17;1H 0, 127, 0, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 123, 00[18;1H, 0, 127, 127, 0, 0, 0, 120, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127, 0, 0,  [19;1H0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 127, 0, 122[20;1H7, 0, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127,,[21;1H 127, 127, 0, 127, 127, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 40, 0, 0, 0, 0, 127, 127, 127, 0, 1277[22;1H, 127, 0, 127, 127, 0, 127, 0, 127, 37, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 127, 127, 0, 127, 0, 0, 127, 122[23;1H7, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 122[24;1H7, 127, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 1277[25;1H, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0,,[26;1H 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 0, 0, 127, 127, 0,,[27;1H 0, 127, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 1, 0, 0, 127, 127, 0, 0, 0, 0, 127, 00[28;1H, 0, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 1277[29;1H, 127, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 122[30;1H7, 15, 127, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 0, 0, 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 1277[31;1H, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 127, 0, 0, 0, 0, 1277[32;1H, 127, 0, 0, 127, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0, 127, 0, 127, 0, 127,  [33;1H0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 127, 127, 0, 0, 0, 127, 127, 0, 127, 127, 1277[34;1H, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 127, 0, 0, 127,,[35;1H 0, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 127, 127, 127, 0, 127, 127, 0, 0, 127, 127, 127, 127, 122[36;1H7, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 0, 127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 122[37;1H7, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 127, 0, 00[38;1H, 0, 127, 127, 0, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 127, 127, 0, 127, 11[39;1H27, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 127, 127, 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127,,[40;1H 127, 127, 127, 127, 127, 0, 0, 127, 0, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 0, 127, 127, 0, 0,  [41;1H127, 127, 127, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0,,[42;1H 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127, 00[43;1H, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 126, 127, 0,,[44;1H 127, 127, 0, 0, 127, 0, 0, 127, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 127, 127, 0, 127, 0, 127, 0, 0, 127, 127, 0,,[45;1H 127, 0, 0, 127, 127, 0, 0, 0, 127, 0, 127, 0, 0, 127, 127, 127, 0, 0, 127, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 00[46;1H, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 0, 122[47;1H7, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 0, 127, 0, 127, 127, 0,  [48;1H127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 0, 0, 0, 127, 0, 127, 127, 127, 127, 0, 127, 127, 127,,[49;1H 127, 0, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 127, 0, 127, 0, 0, 127, 127, 0, 0, 0, 127, 127, 0, 0, 0, 127, 127, 11[50;1H27, 0, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 0, 127, 0, 0, 127, 0, 0, 0, 127, 127, 0, 127, 0, 127, 0, 0, 0, 127, 127,,[51;1H 0, 127, 0, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127, 0, 127, 127, 00[52;1H, 127, 127, 127, 0, 0, 127, 0, 127, 0, 0, 127, 0, 127, 0, 127, 0, 127, 0, 127, 127, 0, 0, 127, 127, 0, 127, 127, 127,[53;102H3[11C99%[1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [1;1H[1;52r[1;1H[L[1;53r[1;1Hassertion `left == right` failed[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H182,1[9C98%[1;1H[?25h[?25l[53;90H~@k[1;1H[53;90H   [2;1H[1;52r[1;1H[2L[1;53r[1;1H[34m^M[m
thread 'protocols::nn::tests::test_nnprotocol' panicked at composite/src/utils/mock_nn.rs:239:9:[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H181,1[9C98%[2;1H[?25h[?25l[53;90H~@k[2;1H[53;90H   [3;1H[1;52r[1;1H[2L[1;53r[1;1Htest protocols::nn::tests::test_nnprotocol has been running for over 60 seconds[34m^M[m
Table Len: 2^18[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H180,1[9C98%[3;1H[?25h[?25l[53;90H~@k[3;1H[53;90H   [4;1H[1;52r[1;1H[2L[1;53r[1;1HFeed forward completed in 0.008171 seconds[34m^M[m
=================================================[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H179,1[9C98%[4;1H[?25h[?25l[53;90H~@k[4;1H[53;90H   [5;1H[1;52r[1;1H[2L[1;53r[1;1H************************************************************************[34m^M[m
======================Unverified NN Feed Forward ============[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H178,1[9C98%[5;1H[?25h[?25l[53;90H~@k[5;1H[53;90H   [6;1H[1;52r[1;1H[2L[1;53r[1;1HSetup time: 1.121926 seconds[34m^M[m
========End Setup=========================================[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H177,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1HSRS size: 1378040 B[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H176,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H========Preparing SRS parameters=========================================[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H175,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H************************************************************************[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H174,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H************************************************************************[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H173,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1H========End Preparing NN parameters=========================================[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H172,1[9C98%[6;1H[?25h[?25l[53;90H~@k[6;1H[53;90H   [6;1H[1;52r[1;1H[L[1;53r[1;1HTable Len: 2^18[34m^M[m[52;1H[94m@@@                                                                                                                  [m[53;100H[K[53;100H171,1[9C98%[6;1H[?25h[?25l[53;90H^X[6;1H[53;90H  [6;17H39[53;105H7[6;17H[?25h[?25l[53;90H^M[6;17H[53;90H  [7;1H[53;102H2,1 [7;1H[?25h[?25l[53;90He[7;1H[53;90H [7;5H[53;1H
[32mW12: Warning: File "output.log" has changed and the buffer was changed in Vim as well[m
[32mSee ":help W12" for more info.[m
[32m[O]K, (L)oad File, Load File (a)nd Options: [?25h[m[53;1H[K[1;1H[3L[?25l[1;1HTable Len: 2^18[34m^M[m
========End Preparing NN parameters=========================================[34m^M[m
************************************************************************[34m^M[m[53;100H[K[53;100H172,5[9C98%[7;5H[?25h[?25l[53;1HType  :qa!  and press <Enter> to abandon all changes and exit Vim[53;100H[K[53;100H172,5[9C98%[7;5H[?25h[?25l[53;90H:[7;5H[53;1H[K[53;1H:[?25hq![?25l[?2004l[>4;m[23;2t[23;1t[53;1H[K[53;1H[?1004l[?2004l[?1l>[?1049l[23;0;0t[?25h[>4;m[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m11:44:50[00m
$ [K[?1h=[?2004hvim output.log[14Dcargo test-verbose test_nnprotocol[34Dscript output.log                 [17D[17Dcargo test-verbose test_nnprotocol[?1l>[?2004l
]2;cargo test-verbose test_nnprotocol]1;cargo[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[32m   Compiling[0m composite v0.1.0 (/home/luck/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 160/166: composite(test), composite                                       [K[0m[1m[38;5;9merror[0m[0m[1m: path separator must be a double colon[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/matop.rs:253:62[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m253[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m...[0m[0m   col[i] = table_builder::phi(input.data[j][i], std:mem::size_of(MyShortInt) * 8); // Using 8-bit output[0m[0m[1m[38;5;12m...[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[38;5;9m^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: use a double colon instead[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m253[0m[0m [0m[0m[1m[38;5;12m| [0m[0m            col[i] = table_builder::phi(input.data[j][i], std:[0m[0m[38;5;10m:[0m[0mmem::size_of(MyShortInt) * 8); // Using 8-bit output bitwidth[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                                               [0m[0m[38;5;10m+[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite(test), composite                                       [K[0m[1m[38;5;9merror[E0423][0m[0m[1m: expected value, found type alias `MyShortInt`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/matop.rs:253:76[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m253[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m...[0m[0m   col[i] = table_builder::phi(input.data[j][i], std:mem::size_of(MyShortInt) * 8); // Using 8-bit output[0m[0m[1m[38;5;12m...[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                                                      [0m[0m[1m[38;5;9m^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9mnot a value[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite(test), composite                                       [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite(test), composite                                       [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:56:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m56[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite(test), composite                                       [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `PointInfo` and `PointsContainer`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:48:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m48[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::{MatContainerMyInt, PointsContainer, PointInfo};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite(test), composite                                       [K[0m[1m[38;5;9merror[E0061][0m[0m[1m: this function takes 0 arguments but 1 argument was supplied[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/matop.rs:253:59[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m253[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m...[0m[0m   col[i] = table_builder::phi(input.data[j][i], std:mem::size_of(MyShortInt) * 8); // Using 8-bit output[0m[0m[1m[38;5;12m...[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                                     [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;12m----------[0m[0m [0m[0m[1m[38;5;12munexpected argument[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;10mnote[0m[0m: function defined here[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0m/rustc/5795086bdfe7ed988aa53a110bd0692c33d8755b/library/core/src/mem/mod.rs:330:14[0m
[0m[1m[38;5;14mhelp[0m[0m: remove the extra argument[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m253[0m[0m [0m[0m[38;5;9m- [0m[0m            col[i] = table_builder::phi(input.data[j][i], std:mem::size_of([0m[0m[38;5;9mMyShortInt[0m[0m) * 8); // Using 8-bit output bitwidth[0m
[0m[1m[38;5;12m253[0m[0m [0m[0m[38;5;10m+ [0m[0m            col[i] = table_builder::phi(input.data[j][i], std:mem::size_of() * 8); // Using 8-bit output bitwidth[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite(test), composite                                       [K[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:15:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m15[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `ark_std::One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:34:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m34[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::One;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite(test), composite                                       [K[0m[1mSome errors have detailed explanations: E0061, E0423.[0m
[0m[1mFor more information about an error, try `rustc --explain E0061`.[0m
[1m[36m    Building[0m [=======================> ] 160/166: composite(test), composite                                       [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 6 warnings
[1m[31merror[0m[1m:[0m could not compile `composite` (lib) due to 3 previous errors; 6 warnings emitted
[1m[33mwarning[0m[1m:[0m build failed, waiting for other jobs to finish...
[1m[36m    Building[0m [=======================> ] 161/166: composite(test)                                                  [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::utils::matdef::MatOps`[0m
[0m    [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:1288:13[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1288[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        use mat::utils::matdef::MatOps;[0m
[0m     [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 161/166: composite(test)                                                  [K[0m[1m[33mwarning[0m[0m[1m: unused import: `ark_ff::Zero`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/matop.rs:268:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m268[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    use ark_ff::Zero;[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[33m^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused imports: `UniformRand` and `test_rng`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/matop.rs:269:19[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m269[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    use ark_std::{test_rng, UniformRand};[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                   [0m[0m[1m[33m^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 161/166: composite(test)                                                  [K[0m[1m[33mwarning[0m[0m[1m: unused import: `ark_std::test_rng`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:466:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m466[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    use ark_std::test_rng;[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[33m^^^^^^^^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 161/166: composite(test)                                                  [K[0m[1m[33mwarning[0m[0m[1m: unused variable: `depth`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:428:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m428[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let depth = 1;  // single layer for easier reasoning[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_depth`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 161/166: composite(test)                                                  [K[0m[1m[33mwarning[0m[0m[1m: unused variable: `rng`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:506:17[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m506[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let mut rng = test_rng();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                 [0m[0m[1m[33m^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_rng`[0m

[1m[36m    Building[0m [=======================> ] 161/166: composite(test)                                                  [K[0m[1m[33mwarning[0m[0m[1m: variable does not need to be mutable[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:506:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m506[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let mut rng = test_rng();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;12m----[0m[0m[1m[33m^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;12mhelp: remove this `mut`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_mut)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 161/166: composite(test)                                                  [K[0m[1m[33mwarning[0m[0m[1m: unused variable: `par_commit_cache`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:293:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m293[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let par_commit_cache = nn.par_commit_cache.clone();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_par_commit_cache`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `witness_commit_cache`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:295:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m295[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let witness_commit_cache = nn.witness_commit_cache.clone();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_witness_commit_cache`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `leaves_com_cache`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:297:26[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m297[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let (leaves_com, leaves_com_cache) = nn.mock_nn.commit_to_leaves(&nn.pcsrs);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                          [0m[0m[1m[33m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_leaves_com_cache`[0m

[1m[36m    Building[0m [=======================> ] 161/166: composite(test)                                                  [K[1m[33mwarning[0m[1m:[0m `composite` (lib test) generated 12 warnings (2 duplicates)
[1m[31merror[0m[1m:[0m could not compile `composite` (lib test) due to 3 previous errors; 12 warnings emitted
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m11:44:53[00m
$ [K[?1h=[?2004hcargo test-verbose test_nnprotocol[?1l>[?2004l
]2;cargo test-verbose test_nnprotocol]1;cargo[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[32m   Compiling[0m composite v0.1.0 (/home/luck/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:56:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m56[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `PointInfo` and `PointsContainer`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:48:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m48[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::{MatContainerMyInt, PointsContainer, PointInfo};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::utils::matdef::MatOps`[0m
[0m    [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:1288:13[0m
[0m     [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m1288[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        use mat::utils::matdef::MatOps;[0m
[0m     [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: unused import: `ark_ff::Zero`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/matop.rs:268:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m268[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    use ark_ff::Zero;[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[33m^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused imports: `UniformRand` and `test_rng`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/matop.rs:269:19[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m269[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    use ark_std::{test_rng, UniformRand};[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                   [0m[0m[1m[33m^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: unused import: `ark_std::test_rng`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:466:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m466[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    use ark_std::test_rng;[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[33m^^^^^^^^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:15:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m15[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `ark_std::One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:34:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m34[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::One;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: unused variable: `depth`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:428:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m428[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let depth = 1;  // single layer for easier reasoning[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_depth`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: unused variable: `rng`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:506:17[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m506[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let mut rng = test_rng();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                 [0m[0m[1m[33m^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_rng`[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: variable does not need to be mutable[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:506:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m506[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let mut rng = test_rng();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;12m----[0m[0m[1m[33m^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[38;5;12mhelp: remove this `mut`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_mut)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: unused variable: `par_commit_cache`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:293:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m293[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let par_commit_cache = nn.par_commit_cache.clone();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_par_commit_cache`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `witness_commit_cache`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:295:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m295[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let witness_commit_cache = nn.witness_commit_cache.clone();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_witness_commit_cache`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `leaves_com_cache`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:297:26[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m297[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let (leaves_com, leaves_com_cache) = nn.mock_nn.commit_to_leaves(&nn.pcsrs);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                          [0m[0m[1m[33m^^^^^^^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_leaves_com_cache`[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: function `mat_myint_to_field` is never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:455:4[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m455[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mfn mat_myint_to_field<F: PrimeField>(mat: Vec<Vec<MyInt>>) -> Vec<Vec<F>> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m    [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(dead_code)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[0m[1m[33mwarning[0m[0m[1m: unused `PairingOutput` that must be used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:290:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m290[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        nn.commit_to_witness();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_must_use)]` on by default[0m
[0m[1m[38;5;14mhelp[0m[0m: use `let _ = ...` to ignore the resulting value[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m290[0m[0m [0m[0m[1m[38;5;12m| [0m[0m        [0m[0m[38;5;10mlet _ = [0m[0mnn.commit_to_witness();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[38;5;10m+++++++[0m

[1m[36m    Building[0m [=======================> ] 160/166: composite, composite(test)                                       [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 7 warnings (run `cargo fix --lib -p composite` to apply 3 suggestions)
[1m[36m    Building[0m [=======================> ] 162/166: experiment_nn(example), test_fsbatch(test), fsbatch_tests(test...[1m[36m    Building[0m [=======================> ] 163/166: experiment_nn(example), test_fsbatch(test), composite(test)      [1m[36m    Building[0m [=======================> ] 164/166: experiment_nn(example), composite(test)                          [1m[36m    Building[0m [=======================> ] 165/166: composite(test)                                                  [K[1m[33mwarning[0m[1m:[0m `composite` (lib test) generated 14 warnings (3 duplicates) (run `cargo fix --lib -p composite --tests` to apply 5 suggestions)
[1m[32m    Finished[0m `release` profile [optimized + debuginfo] target(s) in 15.63s
[1m[32m     Running[0m unittests src/lib.rs (target/release/deps/ark_pcs_bench_templates-d7c7839af3e416aa)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/lib.rs (target/release/deps/ark_poly_commit-e7da8c0b1f10bd4b)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 118 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/lib.rs (target/release/deps/atomic_proof-bc8f98c3ea58e58f)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 104 filtered out; finished in 0.00s

[1m[32m     Running[0m unittests src/lib.rs (target/release/deps/composite-2ca65516b9c183d8)

running 1 test
************************************************************************
========Preparing NN parameters=========================================
Table Len: 2^18
========End Preparing NN parameters=========================================
************************************************************************
************************************************************************
========Preparing SRS parameters=========================================
SRS size: 1378040 B
Setup time: 1.126692 seconds
========End Setup=========================================
************************************************************************
======================Unverified NN Feed Forward ============
Feed forward completed in 0.008201 seconds
=================================================
test protocols::nn::tests::test_nnprotocol has been running for over 60 seconds
Table Len: 2^18
NN Feed Forward completed
************************************************************************
========Committing to Params=========================================
[SmartPC::commit_square_myint] vec_g_len=2^12, vec_h_len=2^12, input n=2^11, m=2^11
[SmartPC::commit_myint_via_full] vec_g_len=2^12, vec_h_len=2^12, input n=2^11, m=2^11
Tier 1 time: 34.378495346s
Committing to params took 35.810563 seconds
========End Committing to Params=========================================
************************************************************************
======================Unverified NN Feed Forward ============
Feed forward completed in 0.009105 seconds
=================================================
Table Len: 2^18
NN Feed Forward completed
========Committing to Auxiliaries=========================================
[SmartPC::commit_square_myint] vec_g_len=2^12, vec_h_len=2^12, input n=2^11, m=2^11
[SmartPC::commit_myint_via_full] vec_g_len=2^12, vec_h_len=2^12, input n=2^11, m=2^11
Tier 1 time: 1.571577012s
Committing to auxiliaries took 2.919910 seconds
========End Committing to Auxiliaries=========================================
[SmartPC::commit_square_myint] vec_g_len=2^12, vec_h_len=2^12, input n=2^11, m=2^11
[SmartPC::commit_myint_via_full] vec_g_len=2^12, vec_h_len=2^12, input n=2^11, m=2^11
Tier 1 time: 27.498383356s

thread 'protocols::nn::tests::test_nnprotocol' panicked at composite/src/protocols/nn.rs:300:9:
assertion `left == right` failed: Commit additive property failed
  left: PairingOutput(QuadExtField { c0: CubicExtField { c0: QuadExtField { c0: 3769511867020216885401571057603090210086796716946796063476738089863937564619193755900844538725173872487457800622407, c1: 3621014630054880729259599743658206964291353091412680654244057088962428768809368473902998306415183961429434732176495 }, c1: QuadExtField { c0: 1564705101662570852590607362966108969669471670183451199631715960176100001991428187225797534105691345515156866117049, c1: 1167732720069808527404622332771885672109354809338247559876159588297429513470316216035082196676837831917008049611967 }, c2: QuadExtField { c0: 2084689228098228950850769492598796179228272844465621161465329318393734896958529194718710013763360785419683572211578, c1: 3120775241726524027545354007619367068706843854350702127747542993367896326416911571553802321820237030166773828176109 } }, c1: CubicExtField { c0: QuadExtField { c0: 1829614192570082844621703090462386968962603781454702005535506828167855529224158659635779984911455057420515752132748, c1: 182684920556701801564725224727711771166844163682552857550455290611050055806087180136850771384959017365037287392438 }, c1: QuadExtField { c0: 786675674319746020332706917544805775518760795200941654465977789459873074249904291188798453124772553337661645187030, c1: 2013728672992270418655540490583764598146519968787169441902196243936063969529036389090376907307035105022483920902683 }, c2: QuadExtField { c0: 3754681152598806160486887274228218817559432449269715170115166396314665284795290713068539044730436872163187489493530, c1: 3947729920682557606292211077815533350359963580045371572848338352301788296018351614241830980976092361894858936828590 } } })
 right: PairingOutput(QuadExtField { c0: CubicExtField { c0: QuadExtField { c0: 3233003546149207069680792938723230185176682890530137929612714205277879666373668001294191778001972723166598720892235, c1: 3275464659201180819093166711590291301590934241617918995243804674380632057395841114060828411038911824948291872752996 }, c1: QuadExtField { c0: 2335494631782219150649656980317433269284000298070151376175052421580731563272391330974540665374542492256711062343810, c1: 3873201118677879652456791589378639004183304525516697599070861092589922475342374970520647423847796163431030766428565 }, c2: QuadExtField { c0: 3402737324157869465371683591055775341597480510989582601468384326216858946678870269411309246366317529992455687229479, c1: 2448275366445695403626446706700462557772244930175503430695980458823842308732517168793465230831658444379495155232587 } }, c1: CubicExtField { c0: QuadExtField { c0: 1397663371559146735950123751198662075351917926817350968821264258511529879679130115905934983333642483611135691457032, c1: 3732089683719861965425552085912482517610380289727039959697948222711745135450649749302954905292387242542534944382670 }, c1: QuadExtField { c0: 2888367784538137215298576541097118392888749253647736467041566813648563194686467077317161399188011274451946804017630, c1: 2041076431278951770073200556383992487556329956436724380040900904253640872509546057322633905602146328349073519921485 }, c2: QuadExtField { c0: 2939511021811381112150239229753863845684655025413370112191886735473703787397494035446511797255257922540757564579424, c1: 2241318841992622692646822304533912472442207652213259722528460890941751789983527352495638155152043708173200668323222 } } })
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
test protocols::nn::tests::test_nnprotocol ... FAILED

failures:

failures:
    protocols::nn::tests::test_nnprotocol

test result: FAILED. 0 passed; 1 failed; 0 ignored; 0 measured; 14 filtered out; finished in 168.90s

[1m[31merror[0m[1m:[0m test failed, to rerun pass `-p composite --lib`
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m11:48:13[00m
$ [K[?1h=[?2004hccargo r run+â€”â€”   _ru   -eax  xampe le experiment_nn.rs[?1l>[?2004l
]2;cargo run-example experiment_nn.rs]1;cargo[1m[31merror[0m[1m:[0m no example target named `experiment_nn.rs` in `composite` package

help: a target with a similar name exists: `experiment_nn`
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m11:49:00[00m
$ [K[?1h=[?2004hcargo run-example experiment_nn.rs   [?1l>[?2004l
]2;cargo run-example experiment_nn]1;cargo[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[32m   Compiling[0m composite v0.1.0 (/home/luck/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:56:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m56[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `PointInfo` and `PointsContainer`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:48:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m48[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::{MatContainerMyInt, PointsContainer, PointInfo};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:15:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m15[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `ark_std::One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:34:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m34[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::One;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: function `mat_myint_to_field` is never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:455:4[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m455[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mfn mat_myint_to_field<F: PrimeField>(mat: Vec<Vec<MyInt>>) -> Vec<Vec<F>> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m    [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(dead_code)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 7 warnings (run `cargo fix --lib -p composite` to apply 3 suggestions)
[1m[36m    Building[0m [=======================> ] 147/148: experiment_nn(example)                                           [K[1m[32m    Finished[0m `release` profile [optimized + debuginfo] target(s) in 4.28s
[1m[32m     Running[0m `target/release/examples/experiment_nn`
[log] writing to /home/luck/git/evalyn/composite/example/experiment.log
RAYON_NUM_THREADS: 64
************************************************************************
========Preparing NN parameters=========================================
=Table Len: 2^18
========End Preparing NN parameters=========================================
************************************************************************
************************************************************************
========Preparing SRS parameters=========================================
SRS size: 44792 B
Setup time: 0.064019 seconds
========End Setup=========================================
************************************************************************
======================Unverified NN Feed Forward ============
Feed forward completed in 0.000066 seconds
=================================================
=Table Len: 2^18
NN Feed Forward completed
************************************************************************
========Committing to Params=========================================
[SmartPC::commit_square_myint] vec_g_len=2^7, vec_h_len=2^7, input n=2^10, m=2^11
[SmartPC::commit_myint_via_full] vec_g_len=2^7, vec_h_len=2^7, input n=2^10, m=2^11

thread 'main' panicked at /home/luck/git/evalyn/poly-commit/src/smart_pc/mod.rs:277:29:
range end index 2048 out of range for slice of length 128
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m11:50:13[00m
$ [K[?1h=[?2004hcargo run-example experiment_nn[?1l>[?2004l
]2;cargo run-example experiment_nn]1;cargo[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[32m   Compiling[0m composite v0.1.0 (/home/luck/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:56:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m56[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `PointInfo` and `PointsContainer`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:48:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m48[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::{MatContainerMyInt, PointsContainer, PointInfo};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:15:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m15[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `ark_std::One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:34:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m34[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::One;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: function `mat_myint_to_field` is never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:455:4[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m455[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mfn mat_myint_to_field<F: PrimeField>(mat: Vec<Vec<MyInt>>) -> Vec<Vec<F>> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m    [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(dead_code)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 7 warnings (run `cargo fix --lib -p composite` to apply 3 suggestions)
[1m[36m    Building[0m [=======================> ] 147/148: experiment_nn(example)                                           [K[1m[32m    Finished[0m `release` profile [optimized + debuginfo] target(s) in 4.39s
[1m[32m     Running[0m `target/release/examples/experiment_nn`
[log] writing to /home/luck/git/evalyn/composite/example/experiment.log
RAYON_NUM_THREADS: 64
************************************************************************
========Preparing NN parameters=========================================
=Table Len: 2^18
========End Preparing NN parameters=========================================
************************************************************************
************************************************************************
========Preparing SRS parameters=========================================
SRS size: 1378040 B
Setup time: 1.119582 seconds
========End Setup=========================================
************************************************************************
======================Unverified NN Feed Forward ============
Feed forward completed in 0.000034 seconds
=================================================
=Table Len: 2^18
NN Feed Forward completed
************************************************************************
========Committing to Params=========================================
[SmartPC::commit_square_myint] vec_g_len=2^12, vec_h_len=2^12, input n=2^10, m=2^11
[SmartPC::commit_myint_via_full] vec_g_len=2^12, vec_h_len=2^12, input n=2^10, m=2^11
Tier 1 time: 6.05423765s
Committing to params took 6.728328 seconds
========End Committing to Params=========================================
************************************************************************
======================Unverified NN Feed Forward ============
Feed forward completed in 0.000038 seconds
=================================================
=Table Len: 2^18
NN Feed Forward completed
========Committing to Auxiliaries=========================================
[SmartPC::commit_square_myint] vec_g_len=2^12, vec_h_len=2^12, input n=2^10, m=2^11
[SmartPC::commit_myint_via_full] vec_g_len=2^12, vec_h_len=2^12, input n=2^10, m=2^11
Tier 1 time: 0.547636059s
Committing to auxiliaries took 1.157762 seconds
========End Committing to Auxiliaries=========================================
========Batch Leaf Projection=========================================
#### RAM usage at LiteBullet.reduce_prover Round 0 (before clear): Some(149196)
#### RAM usage at LiteBullet.reduce_prover Round 0 (after clear): Some(119984)
Batch Leaf projection took 0.436011 seconds
========End Batch Leaf projection======================================
========Open Leaf Commitment=========================================
[SmartPC::open] vec_g_len=4096, vec_h_len=4096, m=2048, n=1024
Leaf commitment openning proof size: 26416 B
Open Leaf projection took 4.202860 seconds
========End Open Leaf projection======================================
========Verify Leaf Commitment=========================================
Leaf commitment verification result: false
Verify Leaf projection took 0.052781 seconds
========End Verify Leaf projection======================================
peak_rss=203208KB
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m11:55:53[00m
$ [K[?1h=[?2004hsssh root @121.43.126.65[?1l>[?2004l
]2;ssh root@121.43.126.65]1;root@121.43.126.65root@121.43.126.65's password: 
Connection closed by 121.43.126.65 port 22
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m11:57:44[00m
$ [K[?1h=[?2004hssh root@121.43.126.65[?1l>[?2004l
]2;ssh root@121.43.126.65]1;root@121.43.126.65root@121.43.126.65's password: 
Welcome to Ubuntu 22.04.5 LTS (GNU/Linux 5.15.0-144-generic aarch64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Thu Aug 21 11:58:03 AM CST 2025

  System load:  0.0               Processes:             855
  Usage of /:   8.6% of 98.06GB   Users logged in:       0
  Memory usage: 0%                IPv4 address for eth0: 172.27.159.64
  Swap usage:   0%


Expanded Security Maintenance for Applications is not enabled.

2 updates can be applied immediately.
To see these additional updates run: apt list --upgradable

2 additional security updates can be applied with ESM Apps.
Learn more about enabling ESM Apps service at https://ubuntu.com/esm

New release '24.04.3 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log


Welcome to Alibaba Cloud Elastic Compute Service !

Last login: Thu Aug 21 11:00:54 2025 from 216.128.184.246
[?2004h]0;root@iZbp16qrp12smiartbzao1Z: ~root@iZbp16qrp12smiartbzao1Z:~# cd git
[?2004l[?2004h]0;root@iZbp16qrp12smiartbzao1Z: ~/gitroot@iZbp16qrp12smiartbzao1Z:~/git# cd evalyn
[?2004l[?2004h]0;root@iZbp16qrp12smiartbzao1Z: ~/git/evalynroot@iZbp16qrp12smiartbzao1Z:~/git/evalyn# git pull[K[K[K[K[K stash
[?2004lSaved working directory and index state WIP on main: 8045e48 wip
[?2004h]0;root@iZbp16qrp12smiartbzao1Z: ~/git/evalynroot@iZbp16qrp12smiartbzao1Z:~/git/evalyn# git pull
[?2004lremote: Enumerating objects: 35, done.[K
remote: Counting objects:   2% (1/35)[Kremote: Counting objects:   5% (2/35)[Kremote: Counting objects:   8% (3/35)[Kremote: Counting objects:  11% (4/35)[Kremote: Counting objects:  14% (5/35)[Kremote: Counting objects:  17% (6/35)[Kremote: Counting objects:  20% (7/35)[Kremote: Counting objects:  22% (8/35)[Kremote: Counting objects:  25% (9/35)[Kremote: Counting objects:  28% (10/35)[Kremote: Counting objects:  31% (11/35)[Kremote: Counting objects:  34% (12/35)[Kremote: Counting objects:  37% (13/35)[Kremote: Counting objects:  40% (14/35)[Kremote: Counting objects:  42% (15/35)[Kremote: Counting objects:  45% (16/35)[Kremote: Counting objects:  48% (17/35)[Kremote: Counting objects:  51% (18/35)[Kremote: Counting objects:  54% (19/35)[Kremote: Counting objects:  57% (20/35)[Kremote: Counting objects:  60% (21/35)[Kremote: Counting objects:  62% (22/35)[Kremote: Counting objects:  65% (23/35)[Kremote: Counting objects:  68% (24/35)[Kremote: Counting objects:  71% (25/35)[Kremote: Counting objects:  74% (26/35)[Kremote: Counting objects:  77% (27/35)[Kremote: Counting objects:  80% (28/35)[Kremote: Counting objects:  82% (29/35)[Kremote: Counting objects:  85% (30/35)[Kremote: Counting objects:  88% (31/35)[Kremote: Counting objects:  91% (32/35)[Kremote: Counting objects:  94% (33/35)[Kremote: Counting objects:  97% (34/35)[Kremote: Counting objects: 100% (35/35)[Kremote: Counting objects: 100% (35/35), done.[K
remote: Compressing objects:  11% (1/9)[Kremote: Compressing objects:  22% (2/9)[Kremote: Compressing objects:  33% (3/9)[Kremote: Compressing objects:  44% (4/9)[Kremote: Compressing objects:  55% (5/9)[Kremote: Compressing objects:  66% (6/9)[Kremote: Compressing objects:  77% (7/9)[Kremote: Compressing objects:  88% (8/9)[Kremote: Compressing objects: 100% (9/9)[Kremote: Compressing objects: 100% (9/9), done.[K
Unpacking objects:   5% (1/19)Unpacking objects:  10% (2/19)Unpacking objects:  15% (3/19)Unpacking objects:  21% (4/19)Unpacking objects:  26% (5/19)Unpacking objects:  31% (6/19)Unpacking objects:  36% (7/19)Unpacking objects:  42% (8/19)Unpacking objects:  47% (9/19)Unpacking objects:  52% (10/19)Unpacking objects:  57% (11/19)Unpacking objects:  63% (12/19)Unpacking objects:  68% (13/19)Unpacking objects:  73% (14/19)Unpacking objects:  78% (15/19)Unpacking objects:  84% (16/19)Unpacking objects:  89% (17/19)Unpacking objects:  94% (18/19)remote: Total 19 (delta 10), reused 19 (delta 10), pack-reused 0 (from 0)[K
Unpacking objects: 100% (19/19)Unpacking objects: 100% (19/19), 52.36 KiB | 110.00 KiB/s, done.
From github.com:mirandaprivate/evalyn
   8045e48..a4db364  main       -> origin/main
Updating 8045e48..a4db364
Fast-forward
 composite/example/experiment.log     |   7 [32m+[m
 composite/example/experiment_nn.rs   |   4 [32m+[m[31m-[m
 composite/src/protocols/nn.rs        |  11 [32m+[m[31m-[m
 composite/src/utils/matop.rs         |   2 [32m+[m[31m-[m
 composite/src/utils/mock_nn.rs       |   3 [32m+[m[31m-[m
 composite/src/utils/table_builder.rs |  35 [32m++[m[31m-[m
 mat/src/protocols/litebullet.rs      |   4 [32m+[m[31m-[m
 mat/src/protocols/proj.rs            |  10 [32m+[m[31m-[m
 output.log                           | 933 [32m++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++[m
 9 files changed, 977 insertions(+), 32 deletions(-)
 create mode 100644 output.log
[?2004h]0;root@iZbp16qrp12smiartbzao1Z: ~/git/evalynroot@iZbp16qrp12smiartbzao1Z:~/git/evalyn# cargo run-example experiment_nn
[?2004l[1m[32m   Compiling[0m mat v0.1.0 (/root/git/evalyn/mat)
[1m[36m    Building[0m [=======================> ] 146/151: mat                                                              [K[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 146/151: mat                                                              [K[1m[32m   Compiling[0m fsproof v0.1.0 (/root/git/evalyn/fsproof)
[1m[36m    Building[0m [=======================> ] 146/151: fsproof, mat                                                     [K[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[36m    Building[0m [=======================> ] 147/151: fsproof                                                          [K[1m[32m   Compiling[0m atomic_proof v0.1.0 (/root/git/evalyn/atomic_proof)
[1m[36m    Building[0m [=======================> ] 147/151: fsproof, atomic_proof                                            [1m[36m    Building[0m [=======================> ] 148/151: atomic_proof                                                     [K[1m[32m   Compiling[0m composite v0.1.0 (/root/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 148/151: atomic_proof, composite                                          [1m[36m    Building[0m [=======================> ] 149/151: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 149/151: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:56:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m56[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 149/151: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `PointInfo` and `PointsContainer`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:48:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m48[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::{MatContainerMyInt, PointsContainer, PointInfo};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 149/151: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:15:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m15[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `ark_std::One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:34:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m34[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::One;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 149/151: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 149/151: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: function `mat_myint_to_field` is never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/mock_nn.rs:455:4[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m455[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mfn mat_myint_to_field<F: PrimeField>(mat: Vec<Vec<MyInt>>) -> Vec<Vec<F>> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m    [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(dead_code)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 149/151: composite                                                        [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 7 warnings (run `cargo fix --lib -p composite` to apply 3 suggestions)
[1m[36m    Building[0m [=======================> ] 150/151: experiment_nn(example)                                           [K[1m[32m    Finished[0m `release` profile [optimized + debuginfo] target(s) in 5.13s
[1m[32m     Running[0m `target/release/examples/experiment_nn`
[log] writing to /root/git/evalyn/composite/example/experiment.log
RAYON_NUM_THREADS: 64
************************************************************************
========Preparing NN parameters=========================================
Table Len: 2^18
========End Preparing NN parameters=========================================
************************************************************************
************************************************************************
========Preparing SRS parameters=========================================
=SRS size: 22021880 B
Setup time: 2.020335 seconds
========End Setup=========================================
************************************************************************
======================Unverified NN Feed Forward ============
Feed forward completed in 10.822329 seconds
=================================================
=Table Len: 2^18
NN Feed Forward completed
************************************************************************
========Committing to Params=========================================
[SmartPC::commit_square_myint] vec_g_len=2^16, vec_h_len=2^16, input n=2^15, m=2^16
[SmartPC::commit_myint_via_full] vec_g_len=2^16, vec_h_len=2^16, input n=2^15, m=2^16
========================================Tier 1 time: 1186.992097491s
Committing to params took 1213.550721 seconds
========End Committing to Params=========================================
************************************************************************
======================Unverified NN Feed Forward ============
=Feed forward completed in 10.984689 seconds
=================================================
Table Len: 2^18
NN Feed Forward completed
========Committing to Auxiliaries=========================================
=[SmartPC::commit_square_myint] vec_g_len=2^16, vec_h_len=2^16, input n=2^15, m=2^16
[SmartPC::commit_myint_via_full] vec_g_len=2^16, vec_h_len=2^16, input n=2^15, m=2^16
Tier 1 time: 15.302170292s
=Committing to auxiliaries took 40.063033 seconds
========End Committing to Auxiliaries=========================================
========Batch Leaf Projection=========================================
==#### RAM usage at LiteBullet.reduce_prover Round 0 (before clear): Some(112036096)
#### RAM usage at LiteBullet.reduce_prover Round 0 (after clear): Some(86935672)
Batch Leaf projection took 74.619039 seconds
========End Batch Leaf projection======================================
========Open Leaf Commitment=========================================
=[SmartPC::open] vec_g_len=65536, vec_h_len=65536, m=65536, n=32768
==Leaf commitment openning proof size: 37936 B
Open Leaf projection took 97.155969 seconds
========End Open Leaf projection======================================
========Verify Leaf Commitment=========================================
Leaf commitment verification result: false
Verify Leaf projection took 0.080903 seconds
========End Verify Leaf projection======================================
peak_rss=112036096KB
[?2004h]0;root@iZbp16qrp12smiartbzao1Z: ~/git/evalynroot@iZbp16qrp12smiartbzao1Z:~/git/evalyn# Connection to 121.43.126.65 closed by remote host.
Connection to 121.43.126.65 closed.
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m12:27:59[00m
$ [K[?1h=[?2004hssudo apt install cloc[?1l>[?2004l
]2;sudo apt install cloc]1;apt[sudo] password for luck: 
Reading package lists... 0%Reading package lists... 100%Reading package lists... Done
Building dependency tree... 0%Building dependency tree... 0%Building dependency tree... 50%Building dependency tree... 50%Building dependency tree... Done
Reading state information... 0% Reading state information... 0%Reading state information... Done
The following additional packages will be installed:
  libalgorithm-diff-perl libalgorithm-diff-xs-perl libb-hooks-endofscope-perl libb-hooks-op-check-perl
  libclass-method-modifiers-perl libclass-xsaccessor-perl libdevel-callchecker-perl libdynaloader-functions-perl
  libimport-into-perl libmodule-implementation-perl libmodule-runtime-perl libmoo-perl libnamespace-clean-perl
  libpackage-stash-perl libpackage-stash-xs-perl libparallel-forkmanager-perl libparams-classify-perl
  libregexp-common-perl librole-tiny-perl libsub-exporter-progressive-perl libsub-identify-perl libsub-name-perl
  libsub-quote-perl libtry-tiny-perl libvariable-magic-perl
Suggested packages:
  libscalar-number-perl libxstring-perl
The following NEW packages will be installed:
  cloc libalgorithm-diff-perl libalgorithm-diff-xs-perl libb-hooks-endofscope-perl libb-hooks-op-check-perl
  libclass-method-modifiers-perl libclass-xsaccessor-perl libdevel-callchecker-perl libdynaloader-functions-perl
  libimport-into-perl libmodule-implementation-perl libmodule-runtime-perl libmoo-perl libnamespace-clean-perl
  libpackage-stash-perl libpackage-stash-xs-perl libparallel-forkmanager-perl libparams-classify-perl
  libregexp-common-perl librole-tiny-perl libsub-exporter-progressive-perl libsub-identify-perl libsub-name-perl
  libsub-quote-perl libtry-tiny-perl libvariable-magic-perl
0 upgraded, 26 newly installed, 0 to remove and 32 not upgraded.
Need to get 737 kB of archives.
After this operation, 2583 kB of additional disk space will be used.
Do you want to continue? [Y/n] y
[33m0% [Working][0m            Ign:1 http://archive.ubuntu.com/ubuntu noble/main amd64 libalgorithm-diff-perl all 1.201-1
[33m0% [Working][0m[33m0% [Waiting for headers][0m[33m0% [Waiting for headers][0m[33m0% [Waiting for headers][0m[33m0% [Waiting for headers][0m                        Get:2 http://archive.ubuntu.com/ubuntu noble/main amd64 libclass-method-modifiers-perl all 2.15-1 [16.1 kB]
[33m1% [2 libclass-method-modifiers-perl 12.4 kB/16.1 kB 77%][0m[33m                                                         3% [Waiting for headers][0m                        Get:3 http://archive.ubuntu.com/ubuntu noble/main amd64 libclass-xsaccessor-perl amd64 1.19-4build4 [33.1 kB]
[33m3% [3 libclass-xsaccessor-perl 2606 B/33.1 kB 8%][0m[33m                                                 7% [Waiting for headers][0m                        Get:4 http://archive.ubuntu.com/ubuntu noble/main amd64 libb-hooks-op-check-perl amd64 0.22-3build1 [9518 B]
[33m7% [4 libb-hooks-op-check-perl 2607 B/9518 B 27%][0m[33m                                                 9% [Waiting for headers][0m                        Get:5 http://archive.ubuntu.com/ubuntu noble/main amd64 libdynaloader-functions-perl all 0.003-3 [12.1 kB]
[33m9% [5 libdynaloader-functions-perl 2606 B/12.1 kB 22%][0m[33m10% [5 libdynaloader-functions-perl 9846 B/12.1 kB 81%][0m[33m                                                       11% [Waiting for headers][0m                         Get:6 http://archive.ubuntu.com/ubuntu noble/main amd64 libdevel-callchecker-perl amd64 0.008-2build3 [13.2 kB]
[33m11% [6 libdevel-callchecker-perl 2606 B/13.2 kB 20%][0m[33m11% [6 libdevel-callchecker-perl 5502 B/13.2 kB 42%][0m[33m                                                    13% [Waiting for headers][0m                         Get:7 http://archive.ubuntu.com/ubuntu noble/main amd64 libparams-classify-perl amd64 0.015-2build5 [20.1 kB]
[33m13% [7 libparams-classify-perl 0 B/20.1 kB 0%]                                                         13.6 kB/s 48s[0m[33m16% [Working]                                                                                          13.6 kB/s 46s[0m                                                                                                                    Get:8 http://archive.ubuntu.com/ubuntu noble/main amd64 libmodule-runtime-perl all 0.016-2 [16.4 kB]
[33m16% [8 libmodule-runtime-perl 2606 B/16.4 kB 16%]                                                      13.6 kB/s 46s[0m[33m18% [Waiting for headers]                                                                              13.6 kB/s 45s[0m                                                                                                                    Get:9 http://archive.ubuntu.com/ubuntu noble/main amd64 libimport-into-perl all 1.002005-2 [10.7 kB]
[33m19% [9 libimport-into-perl 2606 B/10.7 kB 24%]                                                         13.6 kB/s 45s[0m[33m20% [Waiting for headers]                                                                              13.6 kB/s 44s[0m                                                                                                                    Get:10 http://archive.ubuntu.com/ubuntu noble/main amd64 librole-tiny-perl all 2.002004-1 [16.3 kB]
[33m21% [10 librole-tiny-perl 2606 B/16.3 kB 16%]                                                          13.6 kB/s 44s[0m[33m23% [Working]                                                                                          13.6 kB/s 43s[0m                                                                                                                    Get:11 http://archive.ubuntu.com/ubuntu noble/main amd64 libsub-quote-perl all 2.006008-1ubuntu1 [20.7 kB]
[33m23% [11 libsub-quote-perl 2606 B/20.7 kB 13%]                                                          13.6 kB/s 43s[0m[33m26% [Waiting for headers]                                                                              13.6 kB/s 41s[0m                                                                                                                    Get:12 http://archive.ubuntu.com/ubuntu noble/main amd64 libmoo-perl all 2.005005-1 [47.4 kB]
[33m26% [12 libmoo-perl 2606 B/47.4 kB 5%]                                                                 13.6 kB/s 41s[0m[33m32% [Waiting for headers]                                                                              13.6 kB/s 38s[0m                                                                                                                    Get:13 http://archive.ubuntu.com/ubuntu noble/universe amd64 libparallel-forkmanager-perl all 2.02-1 [27.7 kB]
[33m32% [13 libparallel-forkmanager-perl 2606 B/27.7 kB 9%]                                                13.6 kB/s 38s[0m[33m36% [Working]                                                                                          13.6 kB/s 36s[0m                                                                                                                    Get:14 http://archive.ubuntu.com/ubuntu noble/main amd64 libregexp-common-perl all 2017060201-3 [171 kB]
[33m36% [14 libregexp-common-perl 2604 B/171 kB 2%]                                                        13.6 kB/s 36s[0m[33m53% [14 libregexp-common-perl 158 kB/171 kB 92%]                                                       13.6 kB/s 24s[0m[33m55% [Working]                                                                                          13.6 kB/s 23s[0m                                                                                                                    Get:15 http://archive.ubuntu.com/ubuntu noble/universe amd64 cloc all 1.98-1 [107 kB]
[33m55% [15 cloc 2604 B/107 kB 2%]                                                                         13.6 kB/s 23s[0m[33m67% [Working]                                                                                          13.6 kB/s 15s[0m                                                                                                                    Get:16 http://archive.ubuntu.com/ubuntu noble/main amd64 libalgorithm-diff-xs-perl amd64 0.04-8build3 [11.2 kB]
[33m68% [16 libalgorithm-diff-xs-perl 2606 B/11.2 kB 23%]                                                  13.6 kB/s 15s[0m[33m69% [Working]                                                                                          13.6 kB/s 15s[0m                                                                                                                    Get:17 http://archive.ubuntu.com/ubuntu noble/main amd64 libtry-tiny-perl all 0.31-2 [20.8 kB]
[33m70% [17 libtry-tiny-perl 2606 B/20.8 kB 13%]                                                           13.6 kB/s 14s[0m[33m72% [Working]                                                                                          13.6 kB/s 13s[0m                                                                                                                    Get:18 http://archive.ubuntu.com/ubuntu noble/main amd64 libmodule-implementation-perl all 0.09-2 [12.0 kB]
[33m73% [18 libmodule-implementation-perl 2606 B/12.0 kB 22%]                                               73.9 kB/s 2s[0m[33m74% [Working]                                                                                           73.9 kB/s 2s[0m                                                                                                                    Get:19 http://archive.ubuntu.com/ubuntu noble/main amd64 libsub-exporter-progressive-perl all 0.001013-3 [6718 B]
[33m75% [19 libsub-exporter-progressive-perl 2607 B/6718 B 39%]                                             73.9 kB/s 2s[0m[33m76% [Working]                                                                                           73.9 kB/s 2s[0m                                                                                                                    Get:20 http://archive.ubuntu.com/ubuntu noble/main amd64 libvariable-magic-perl amd64 0.63-1build3 [35.1 kB]
[33m76% [20 libvariable-magic-perl 2606 B/35.1 kB 7%]                                                       73.9 kB/s 2s[0m[33m80% [Working]                                                                                           73.9 kB/s 1s[0m                                                                                                                    Get:21 http://archive.ubuntu.com/ubuntu noble/main amd64 libb-hooks-endofscope-perl all 0.28-1 [15.8 kB]
[33m81% [21 libb-hooks-endofscope-perl 5502 B/15.8 kB 35%]                                                  73.9 kB/s 1s[0m[33m83% [Working]                                                                                           73.9 kB/s 1s[0m                                                                                                                    Get:22 http://archive.ubuntu.com/ubuntu noble/main amd64 libpackage-stash-perl all 0.40-1 [19.5 kB]
[33m83% [22 libpackage-stash-perl 2606 B/19.5 kB 13%]                                                       73.9 kB/s 1s[0m[33m86% [Working]                                                                                           73.9 kB/s 1s[0m                                                                                                                    Get:23 http://archive.ubuntu.com/ubuntu noble/main amd64 libsub-identify-perl amd64 0.14-3build3 [9786 B]
[33m86% [23 libsub-identify-perl 2607 B/9786 B 27%]                                                         73.9 kB/s 1s[0m[33m88% [Working]                                                                                           73.9 kB/s 1s[0m                                                                                                                    Get:24 http://archive.ubuntu.com/ubuntu noble/main amd64 libsub-name-perl amd64 0.27-1build3 [10.8 kB]
[33m88% [24 libsub-name-perl 2606 B/10.8 kB 24%]                                                            73.9 kB/s 1s[0m[33m90% [Working]                                                                                           73.9 kB/s 1s[0m                                                                                                                    Get:25 http://archive.ubuntu.com/ubuntu noble/main amd64 libnamespace-clean-perl all 0.27-2 [14.0 kB]
[33m90% [25 libnamespace-clean-perl 2606 B/14.0 kB 19%]                                                     73.9 kB/s 0s[0m[33m92% [Working]                                                                                           73.9 kB/s 0s[0m                                                                                                                    Get:26 http://archive.ubuntu.com/ubuntu noble/main amd64 libpackage-stash-xs-perl amd64 0.30-1build4 [18.7 kB]
[33m92% [26 libpackage-stash-xs-perl 2606 B/18.7 kB 14%]                                                    73.9 kB/s 0s[0m[33m95% [Working]                                                                                           73.9 kB/s 0s[0m                                                                                                                    Get:1 http://archive.ubuntu.com/ubuntu noble/main amd64 libalgorithm-diff-perl all 1.201-1 [41.8 kB]
[33m95% [1 libalgorithm-diff-perl 2606 B/41.8 kB 6%]                                                        73.9 kB/s 0s[0m[33m100% [Working]                                                                                          73.9 kB/s 0s[0m                                                                                                                    Fetched 737 kB in 17s (44.6 kB/s)

7[0;52r8[1ASelecting previously unselected package libalgorithm-diff-perl.
(Reading database ... (Reading database ... 5%(Reading database ... 10%(Reading database ... 15%(Reading database ... 20%(Reading database ... 25%(Reading database ... 30%(Reading database ... 35%(Reading database ... 40%(Reading database ... 45%(Reading database ... 50%(Reading database ... 55%(Reading database ... 60%(Reading database ... 65%(Reading database ... 70%(Reading database ... 75%(Reading database ... 80%(Reading database ... 85%(Reading database ... 90%(Reading database ... 95%(Reading database ... 100%(Reading database ... 46684 files and directories currently installed.)
Preparing to unpack .../00-libalgorithm-diff-perl_1.201-1_all.deb ...
7[53;0f[42m[30mProgress: [  0%][49m[39m [...............................................................................................] 8Unpacking libalgorithm-diff-perl (1.201-1) ...
7[53;0f[42m[30mProgress: [  2%][49m[39m [#..............................................................................................] 8Selecting previously unselected package libclass-method-modifiers-perl.
Preparing to unpack .../01-libclass-method-modifiers-perl_2.15-1_all.deb ...
7[53;0f[42m[30mProgress: [  3%][49m[39m [##.............................................................................................] 8Unpacking libclass-method-modifiers-perl (2.15-1) ...
7[53;0f[42m[30mProgress: [  4%][49m[39m [###............................................................................................] 8Selecting previously unselected package libclass-xsaccessor-perl.
Preparing to unpack .../02-libclass-xsaccessor-perl_1.19-4build4_amd64.deb ...
7[53;0f[42m[30mProgress: [  5%][49m[39m [####...........................................................................................] 8Unpacking libclass-xsaccessor-perl (1.19-4build4) ...
7[53;0f[42m[30mProgress: [  6%][49m[39m [#####..........................................................................................] 8Selecting previously unselected package libb-hooks-op-check-perl:amd64.
Preparing to unpack .../03-libb-hooks-op-check-perl_0.22-3build1_amd64.deb ...
7[53;0f[42m[30mProgress: [  7%][49m[39m [######.........................................................................................] 8Unpacking libb-hooks-op-check-perl:amd64 (0.22-3build1) ...
7[53;0f[42m[30mProgress: [  8%][49m[39m [#######........................................................................................] 8Selecting previously unselected package libdynaloader-functions-perl.
Preparing to unpack .../04-libdynaloader-functions-perl_0.003-3_all.deb ...
7[53;0f[42m[30mProgress: [  9%][49m[39m [########.......................................................................................] 8Unpacking libdynaloader-functions-perl (0.003-3) ...
7[53;0f[42m[30mProgress: [ 10%][49m[39m [#########......................................................................................] 8Selecting previously unselected package libdevel-callchecker-perl:amd64.
Preparing to unpack .../05-libdevel-callchecker-perl_0.008-2build3_amd64.deb ...
7[53;0f[42m[30mProgress: [ 10%][49m[39m [#########......................................................................................] 8Unpacking libdevel-callchecker-perl:amd64 (0.008-2build3) ...
7[53;0f[42m[30mProgress: [ 11%][49m[39m [##########.....................................................................................] 8Selecting previously unselected package libparams-classify-perl:amd64.
Preparing to unpack .../06-libparams-classify-perl_0.015-2build5_amd64.deb ...
7[53;0f[42m[30mProgress: [ 12%][49m[39m [###########....................................................................................] 8Unpacking libparams-classify-perl:amd64 (0.015-2build5) ...
7[53;0f[42m[30mProgress: [ 13%][49m[39m [############...................................................................................] 8Selecting previously unselected package libmodule-runtime-perl.
Preparing to unpack .../07-libmodule-runtime-perl_0.016-2_all.deb ...
7[53;0f[42m[30mProgress: [ 14%][49m[39m [#############..................................................................................] 8Unpacking libmodule-runtime-perl (0.016-2) ...
7[53;0f[42m[30mProgress: [ 15%][49m[39m [##############.................................................................................] 8Selecting previously unselected package libimport-into-perl.
Preparing to unpack .../08-libimport-into-perl_1.002005-2_all.deb ...
7[53;0f[42m[30mProgress: [ 16%][49m[39m [###############................................................................................] 8Unpacking libimport-into-perl (1.002005-2) ...
7[53;0f[42m[30mProgress: [ 17%][49m[39m [################...............................................................................] 8Selecting previously unselected package librole-tiny-perl.
Preparing to unpack .../09-librole-tiny-perl_2.002004-1_all.deb ...
7[53;0f[42m[30mProgress: [ 18%][49m[39m [#################..............................................................................] 8Unpacking librole-tiny-perl (2.002004-1) ...
7[53;0f[42m[30mProgress: [ 19%][49m[39m [##################.............................................................................] 8Selecting previously unselected package libsub-quote-perl.
Preparing to unpack .../10-libsub-quote-perl_2.006008-1ubuntu1_all.deb ...
7[53;0f[42m[30mProgress: [ 20%][49m[39m [###################............................................................................] 8Unpacking libsub-quote-perl (2.006008-1ubuntu1) ...
Selecting previously unselected package libmoo-perl.
Preparing to unpack .../11-libmoo-perl_2.005005-1_all.deb ...
7[53;0f[42m[30mProgress: [ 22%][49m[39m [####################...........................................................................] 8Unpacking libmoo-perl (2.005005-1) ...
7[53;0f[42m[30mProgress: [ 23%][49m[39m [#####################..........................................................................] 8Selecting previously unselected package libparallel-forkmanager-perl.
Preparing to unpack .../12-libparallel-forkmanager-perl_2.02-1_all.deb ...
7[53;0f[42m[30mProgress: [ 24%][49m[39m [######################.........................................................................] 8Unpacking libparallel-forkmanager-perl (2.02-1) ...
7[53;0f[42m[30mProgress: [ 25%][49m[39m [#######################........................................................................] 8Selecting previously unselected package libregexp-common-perl.
Preparing to unpack .../13-libregexp-common-perl_2017060201-3_all.deb ...
7[53;0f[42m[30mProgress: [ 26%][49m[39m [########################.......................................................................] 8Unpacking libregexp-common-perl (2017060201-3) ...
7[53;0f[42m[30mProgress: [ 27%][49m[39m [#########################......................................................................] 8Selecting previously unselected package cloc.
Preparing to unpack .../14-cloc_1.98-1_all.deb ...
7[53;0f[42m[30mProgress: [ 28%][49m[39m [##########################.....................................................................] 8Unpacking cloc (1.98-1) ...
7[53;0f[42m[30mProgress: [ 29%][49m[39m [###########################....................................................................] 8Selecting previously unselected package libalgorithm-diff-xs-perl:amd64.
Preparing to unpack .../15-libalgorithm-diff-xs-perl_0.04-8build3_amd64.deb ...
7[53;0f[42m[30mProgress: [ 30%][49m[39m [############################...................................................................] 8Unpacking libalgorithm-diff-xs-perl:amd64 (0.04-8build3) ...
7[53;0f[42m[30mProgress: [ 30%][49m[39m [############################...................................................................] 8Selecting previously unselected package libtry-tiny-perl.
Preparing to unpack .../16-libtry-tiny-perl_0.31-2_all.deb ...
7[53;0f[42m[30mProgress: [ 31%][49m[39m [#############################..................................................................] 8Unpacking libtry-tiny-perl (0.31-2) ...
7[53;0f[42m[30mProgress: [ 32%][49m[39m [##############################.................................................................] 8Selecting previously unselected package libmodule-implementation-perl.
Preparing to unpack .../17-libmodule-implementation-perl_0.09-2_all.deb ...
7[53;0f[42m[30mProgress: [ 33%][49m[39m [###############################................................................................] 8Unpacking libmodule-implementation-perl (0.09-2) ...
7[53;0f[42m[30mProgress: [ 34%][49m[39m [################################...............................................................] 8Selecting previously unselected package libsub-exporter-progressive-perl.
Preparing to unpack .../18-libsub-exporter-progressive-perl_0.001013-3_all.deb ...
7[53;0f[42m[30mProgress: [ 35%][49m[39m [#################################..............................................................] 8Unpacking libsub-exporter-progressive-perl (0.001013-3) ...
7[53;0f[42m[30mProgress: [ 36%][49m[39m [##################################.............................................................] 8Selecting previously unselected package libvariable-magic-perl.
Preparing to unpack .../19-libvariable-magic-perl_0.63-1build3_amd64.deb ...
7[53;0f[42m[30mProgress: [ 37%][49m[39m [###################################............................................................] 8Unpacking libvariable-magic-perl (0.63-1build3) ...
7[53;0f[42m[30mProgress: [ 38%][49m[39m [####################################...........................................................] 8Selecting previously unselected package libb-hooks-endofscope-perl.
Preparing to unpack .../20-libb-hooks-endofscope-perl_0.28-1_all.deb ...
7[53;0f[42m[30mProgress: [ 39%][49m[39m [#####################################..........................................................] 8Unpacking libb-hooks-endofscope-perl (0.28-1) ...
7[53;0f[42m[30mProgress: [ 40%][49m[39m [######################################.........................................................] 8Selecting previously unselected package libpackage-stash-perl.
Preparing to unpack .../21-libpackage-stash-perl_0.40-1_all.deb ...
Unpacking libpackage-stash-perl (0.40-1) ...
7[53;0f[42m[30mProgress: [ 42%][49m[39m [#######################################........................................................] 8Selecting previously unselected package libsub-identify-perl.
Preparing to unpack .../22-libsub-identify-perl_0.14-3build3_amd64.deb ...
7[53;0f[42m[30mProgress: [ 43%][49m[39m [########################################.......................................................] 8Unpacking libsub-identify-perl (0.14-3build3) ...
7[53;0f[42m[30mProgress: [ 44%][49m[39m [#########################################......................................................] 8Selecting previously unselected package libsub-name-perl:amd64.
Preparing to unpack .../23-libsub-name-perl_0.27-1build3_amd64.deb ...
7[53;0f[42m[30mProgress: [ 45%][49m[39m [##########################################.....................................................] 8Unpacking libsub-name-perl:amd64 (0.27-1build3) ...
7[53;0f[42m[30mProgress: [ 46%][49m[39m [###########################################....................................................] 8Selecting previously unselected package libnamespace-clean-perl.
Preparing to unpack .../24-libnamespace-clean-perl_0.27-2_all.deb ...
7[53;0f[42m[30mProgress: [ 47%][49m[39m [############################################...................................................] 8Unpacking libnamespace-clean-perl (0.27-2) ...
7[53;0f[42m[30mProgress: [ 48%][49m[39m [#############################################..................................................] 8Selecting previously unselected package libpackage-stash-xs-perl:amd64.
Preparing to unpack .../25-libpackage-stash-xs-perl_0.30-1build4_amd64.deb ...
7[53;0f[42m[30mProgress: [ 49%][49m[39m [##############################################.................................................] 8Unpacking libpackage-stash-xs-perl:amd64 (0.30-1build4) ...
7[53;0f[42m[30mProgress: [ 50%][49m[39m [###############################################................................................] 8Setting up libdynaloader-functions-perl (0.003-3) ...
7[53;0f[42m[30mProgress: [ 50%][49m[39m [###############################################................................................] 87[53;0f[42m[30mProgress: [ 51%][49m[39m [################################################...............................................] 8Setting up libclass-method-modifiers-perl (2.15-1) ...
7[53;0f[42m[30mProgress: [ 52%][49m[39m [#################################################..............................................] 87[53;0f[42m[30mProgress: [ 53%][49m[39m [##################################################.............................................] 8Setting up libalgorithm-diff-perl (1.201-1) ...
7[53;0f[42m[30mProgress: [ 54%][49m[39m [###################################################............................................] 87[53;0f[42m[30mProgress: [ 55%][49m[39m [####################################################...........................................] 8Setting up libsub-identify-perl (0.14-3build3) ...
7[53;0f[42m[30mProgress: [ 56%][49m[39m [#####################################################..........................................] 87[53;0f[42m[30mProgress: [ 57%][49m[39m [######################################################.........................................] 8Setting up libtry-tiny-perl (0.31-2) ...
7[53;0f[42m[30mProgress: [ 58%][49m[39m [#######################################################........................................] 87[53;0f[42m[30mProgress: [ 59%][49m[39m [########################################################.......................................] 8Setting up libregexp-common-perl (2017060201-3) ...
7[53;0f[42m[30mProgress: [ 60%][49m[39m [#########################################################......................................] 8Setting up libpackage-stash-xs-perl:amd64 (0.30-1build4) ...
7[53;0f[42m[30mProgress: [ 62%][49m[39m [##########################################################.....................................] 87[53;0f[42m[30mProgress: [ 63%][49m[39m [###########################################################....................................] 8Setting up libvariable-magic-perl (0.63-1build3) ...
7[53;0f[42m[30mProgress: [ 64%][49m[39m [############################################################...................................] 87[53;0f[42m[30mProgress: [ 65%][49m[39m [#############################################################..................................] 8Setting up libb-hooks-op-check-perl:amd64 (0.22-3build1) ...
7[53;0f[42m[30mProgress: [ 66%][49m[39m [##############################################################.................................] 87[53;0f[42m[30mProgress: [ 67%][49m[39m [###############################################################................................] 8Setting up libsub-exporter-progressive-perl (0.001013-3) ...
7[53;0f[42m[30mProgress: [ 68%][49m[39m [################################################################...............................] 87[53;0f[42m[30mProgress: [ 69%][49m[39m [#################################################################..............................] 8Setting up libsub-name-perl:amd64 (0.27-1build3) ...
7[53;0f[42m[30mProgress: [ 70%][49m[39m [##################################################################.............................] 87[53;0f[42m[30mProgress: [ 70%][49m[39m [##################################################################.............................] 8Setting up librole-tiny-perl (2.002004-1) ...
7[53;0f[42m[30mProgress: [ 71%][49m[39m [###################################################################............................] 87[53;0f[42m[30mProgress: [ 72%][49m[39m [####################################################################...........................] 8Setting up libsub-quote-perl (2.006008-1ubuntu1) ...
7[53;0f[42m[30mProgress: [ 73%][49m[39m [#####################################################################..........................] 87[53;0f[42m[30mProgress: [ 74%][49m[39m [######################################################################.........................] 8Setting up libclass-xsaccessor-perl (1.19-4build4) ...
7[53;0f[42m[30mProgress: [ 75%][49m[39m [#######################################################################........................] 87[53;0f[42m[30mProgress: [ 76%][49m[39m [########################################################################.......................] 8Setting up libalgorithm-diff-xs-perl:amd64 (0.04-8build3) ...
7[53;0f[42m[30mProgress: [ 77%][49m[39m [#########################################################################......................] 87[53;0f[42m[30mProgress: [ 78%][49m[39m [##########################################################################.....................] 8Setting up libdevel-callchecker-perl:amd64 (0.008-2build3) ...
7[53;0f[42m[30mProgress: [ 79%][49m[39m [###########################################################################....................] 87[53;0f[42m[30mProgress: [ 80%][49m[39m [############################################################################...................] 8Setting up libparams-classify-perl:amd64 (0.015-2build5) ...
7[53;0f[42m[30mProgress: [ 82%][49m[39m [#############################################################################..................] 8Setting up libmodule-runtime-perl (0.016-2) ...
7[53;0f[42m[30mProgress: [ 83%][49m[39m [##############################################################################.................] 87[53;0f[42m[30mProgress: [ 84%][49m[39m [###############################################################################................] 8Setting up libmodule-implementation-perl (0.09-2) ...
7[53;0f[42m[30mProgress: [ 85%][49m[39m [################################################################################...............] 87[53;0f[42m[30mProgress: [ 86%][49m[39m [#################################################################################..............] 8Setting up libpackage-stash-perl (0.40-1) ...
7[53;0f[42m[30mProgress: [ 87%][49m[39m [##################################################################################.............] 87[53;0f[42m[30mProgress: [ 88%][49m[39m [###################################################################################............] 8Setting up libimport-into-perl (1.002005-2) ...
7[53;0f[42m[30mProgress: [ 89%][49m[39m [####################################################################################...........] 87[53;0f[42m[30mProgress: [ 90%][49m[39m [#####################################################################################..........] 8Setting up libmoo-perl (2.005005-1) ...
7[53;0f[42m[30mProgress: [ 90%][49m[39m [#####################################################################################..........] 87[53;0f[42m[30mProgress: [ 91%][49m[39m [######################################################################################.........] 8Setting up libparallel-forkmanager-perl (2.02-1) ...
7[53;0f[42m[30mProgress: [ 92%][49m[39m [#######################################################################################........] 87[53;0f[42m[30mProgress: [ 93%][49m[39m [########################################################################################.......] 8Setting up libb-hooks-endofscope-perl (0.28-1) ...
7[53;0f[42m[30mProgress: [ 94%][49m[39m [#########################################################################################......] 87[53;0f[42m[30mProgress: [ 95%][49m[39m [##########################################################################################.....] 8Setting up cloc (1.98-1) ...
7[53;0f[42m[30mProgress: [ 96%][49m[39m [###########################################################################################....] 87[53;0f[42m[30mProgress: [ 97%][49m[39m [############################################################################################...] 8Setting up libnamespace-clean-perl (0.27-2) ...
7[53;0f[42m[30mProgress: [ 98%][49m[39m [#############################################################################################..] 87[53;0f[42m[30mProgress: [ 99%][49m[39m [##############################################################################################.] 8Processing triggers for man-db (2.12.0-4build2) ...

7[0;53r8[1A[J[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m16:30:41[00m
$ [K[?1h=[?2004hccloc ./[?1l>[?2004l
]2;cloc ./]1;cloc     100 files     200 files     300 files     400 files     500 files     600 files     700 files     800 files     900 files    1000 files    1100 files    1200 files    1300 files    1400 files    1500 files    1600 files    1700 files    1800 files    1900 files    2000 files    2100 files    2200 files    2300 files    2400 files    2500 files    2600 files    2700 files    2800 files    2900 files    3000 files    3100 files    3200 files    3300 files    3400 files    3500 files    3600 files    3700 files    3800 files    3900 files    4000 files    4100 files    4200 files    4300 files    4400 files    4500 files    4600 files    4682 text files.
classified 3150 filesDuplicate file check 3150 files (1248 known unique)Unique:      100 files                                          Unique:      200 files                                          Unique:      300 files                                          Unique:      400 files                                          Unique:      500 files                                          Unique:      600 files                                          Unique:      700 files                                          Unique:      800 files                                          Unique:      900 files                                          Unique:     1000 files                                          Unique:     1100 files                                          Unique:     1200 files                                              1831 unique files.                              
Counting:  100Counting:  200Counting:  300Counting:  400Counting:  500Counting:  600Counting:  700Counting:  800Counting:  900Counting:  1000Counting:  1100Counting:  1200Counting:  1300Counting:  1400Counting:  1500Counting:  1600Counting:  1700Counting:  1800   18642 files ignored.

github.com/AlDanial/cloc v 1.98  T=5.68 s (322.1 files/s, 39535.3 lines/s)
------------------------------------------------------------------------------------
Language                          files          blank        comment           code
------------------------------------------------------------------------------------
Rust                                104          11553           4319          54562
C                                   194           7396           5949          47105
D                                   690           1290              0          21221
C/C++ Header                        169           2696           5991          17154
Bourne Shell                         68           2985           1528          16255
XML                                   7            266             21           5111
Perl                                  1            597            911           4215
Bourne Again Shell                    3            348            366           3285
m4                                    2            401            165           3054
make                                  3            222             51           2031
YAML                                  4             12             61            549
JSON                                547              0              0            547
Markdown                              3            222              0            458
C++                                   6             68             28            372
TOML                                  9             75             33            276
Python                                3            104            100            268
Text                                  6              7              0            253
Visual Studio Solution                2              2              2            122
awk                                   2              6             22             80
XSLT                                  7              0              0             37
SVG                                   1              0              0              1
------------------------------------------------------------------------------------
SUM:                               1831          28250          19547         176956
------------------------------------------------------------------------------------
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m16:30:54[00m
$ [K[?1h=[?2004hccd composite[?1l>[?2004l
]2;cd composite]1;cd[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn/composite]1;..lyn/composite]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn/composite\[0m[27m[24m[J
[01;32m~/git/evalyn/composite[00m on [35mî‚  main[31m![00m âŒš [01;31m17:14:36[00m
$ [K[?1h=[?2004hccargo check[?1l>[?2004l
]2;cargo check]1;cargo[1m[32m    Checking[0m ark-poly-commit v0.5.0 (/home/luck/git/evalyn/poly-commit)
[1m[36m    Building[0m [======================>  ] 110/115: ark-poly-commit                                                  [K[1m[32m    Checking[0m mat v0.1.0 (/home/luck/git/evalyn/mat)
[1m[36m    Building[0m [=======================> ] 111/115: mat                                                              [K[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 111/115: mat                                                              [K[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[32m    Checking[0m fsproof v0.1.0 (/home/luck/git/evalyn/fsproof)
[1m[36m    Building[0m [=======================> ] 112/115: fsproof                                                          [K[1m[32m    Checking[0m atomic_proof v0.1.0 (/home/luck/git/evalyn/atomic_proof)
[1m[36m    Building[0m [=======================> ] 113/115: atomic_proof                                                     [K[1m[32m    Checking[0m composite v0.1.0 (/home/luck/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[0m[1m[38;5;9merror[0m[0m[1m: expected identifier, found `}`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:456:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m456[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        }[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[38;5;9m^[0m[0m [0m[0m[1m[38;5;9mexpected identifier[0m

[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:55:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m55[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused imports: `BatchPoint` and `MatMul`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:29:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m29[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    BatchPoint,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m32[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    MatMul,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[0m[1m[38;5;9merror[E0609][0m[0m[1m: no field `inputs_hat` on type `AtomicMultiPoP<<E as Pairing>::ScalarField>`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:436:41[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m436[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                    lin_comb.atomic_pop.inputs_hat[0],[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                         [0m[0m[1m[38;5;9m^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9munknown field[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: a field with a similar name exists[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m436[0m[0m [0m[0m[38;5;9m- [0m[0m                    lin_comb.atomic_pop.[0m[0m[38;5;9minputs_hat[0m[0m[0],[0m
[0m[1m[38;5;12m436[0m[0m [0m[0m[38;5;10m+ [0m[0m                    lin_comb.atomic_pop.[0m[0m[38;5;10mhat_inputs[0m[0m[0],[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[0m[1m[38;5;9merror[E0609][0m[0m[1m: no field `inputs_hat` on type `AtomicMultiPoP<<E as Pairing>::ScalarField>`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:445:41[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m445[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                    lin_comb.atomic_pop.inputs_hat[1],[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                         [0m[0m[1m[38;5;9m^^^^^^^^^^[0m[0m [0m[0m[1m[38;5;9munknown field[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: a field with a similar name exists[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m445[0m[0m [0m[0m[38;5;9m- [0m[0m                    lin_comb.atomic_pop.[0m[0m[38;5;9minputs_hat[0m[0m[1],[0m
[0m[1m[38;5;12m445[0m[0m [0m[0m[38;5;10m+ [0m[0m                    lin_comb.atomic_pop.[0m[0m[38;5;10mhat_inputs[0m[0m[1],[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:32:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m32[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_ff::{PrimeField, UniformRand, One};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[0m[1mFor more information about this error, try `rustc --explain E0609`.[0m
[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 5 warnings
[1m[31merror[0m[1m:[0m could not compile `composite` (lib) due to 3 previous errors; 5 warnings emitted
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn/composite]1;..lyn/composite]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn/composite\[0m[27m[24m[J
[01;32m~/git/evalyn/composite[00m on [35mî‚  main[31m![00m âŒš [01;31m17:14:43[00m
$ [K[?1h=[?2004hcargo check[?1l>[?2004l
]2;cargo check]1;cargo[1m[32m    Checking[0m ark-poly-commit v0.5.0 (/home/luck/git/evalyn/poly-commit)
[1m[36m    Building[0m [======================>  ] 110/115: ark-poly-commit                                                  [K[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:248:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m248[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[1m[36m    Building[0m [======================>  ] 110/115: ark-poly-commit                                                  [K[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:296:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m296[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[1m[36m    Building[0m [======================>  ] 110/115: ark-poly-commit                                                  [K[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:362:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m362[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[1m[36m    Building[0m [======================>  ] 110/115: ark-poly-commit                                                  [K[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:400:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m400[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[1m[36m    Building[0m [======================>  ] 110/115: ark-poly-commit                                                  [K[1m[33mwarning[0m[1m:[0m `ark-poly-commit` (lib) generated 4 warnings
[1m[32m    Checking[0m mat v0.1.0 (/home/luck/git/evalyn/mat)
[1m[36m    Building[0m [=======================> ] 111/115: mat                                                              [K[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 111/115: mat                                                              [K[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[32m    Checking[0m fsproof v0.1.0 (/home/luck/git/evalyn/fsproof)
[1m[36m    Building[0m [=======================> ] 112/115: fsproof                                                          [K[1m[32m    Checking[0m atomic_proof v0.1.0 (/home/luck/git/evalyn/atomic_proof)
[1m[36m    Building[0m [=======================> ] 113/115: atomic_proof                                                     [K[1m[32m    Checking[0m composite v0.1.0 (/home/luck/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[0m[1m[38;5;9merror[0m[0m[1m: expected identifier, found `}`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:456:9[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m456[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        }[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m         [0m[0m[1m[38;5;9m^[0m[0m [0m[0m[1m[38;5;9mexpected identifier[0m

[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:55:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m55[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused imports: `BatchPoint` and `MatMul`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:29:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m29[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    BatchPoint,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m
[0m[1m[38;5;12m...[0m
[0m[1m[38;5;12m32[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    MatMul,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:32:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m32[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_ff::{PrimeField, UniformRand, One};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^[0m

[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 114/115: composite                                                        [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 5 warnings
[1m[31merror[0m[1m:[0m could not compile `composite` (lib) due to 1 previous error; 5 warnings emitted
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn/composite]1;..lyn/composite]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn/composite\[0m[27m[24m[J
[01;32m~/git/evalyn/composite[00m on [35mî‚  main[31m![00m âŒš [01;31m17:17:57[00m
$ [K[?1h=[?2004hccargo run-example examp   periment_nn[?1l>[?2004l
]2;cargo run-example experiment_nn]1;cargo[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:248:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m248[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:296:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m296[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:362:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m362[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:400:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m400[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[1m[33mwarning[0m[1m:[0m `ark-poly-commit` (lib) generated 4 warnings
[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[32m   Compiling[0m composite v0.1.0 (/home/luck/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[38;5;9merror[E0412][0m[0m[1m: cannot find type `DenseMatFieldCM` in this scope[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:466:24[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m466[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m            let b_mat: DenseMatFieldCM<E::ScalarField>;[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                        [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m::: [0m[0m/home/luck/git/evalyn/mat/src/utils/matdef.rs:244:1[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m244[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct DenseMatCM<I, F>[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m---------------------------[0m[0m [0m[0m[1m[38;5;12msimilarly named struct `DenseMatCM` defined here[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: a struct with a similar name exists[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m466[0m[0m [0m[0m[38;5;9m- [0m[0m            let b_mat: [0m[0m[38;5;9mDenseMatFieldCM[0m[0m<E::ScalarField>;[0m
[0m[1m[38;5;12m466[0m[0m [0m[0m[38;5;10m+ [0m[0m            let b_mat: [0m[0m[38;5;10mDenseMatCM[0m[0m<E::ScalarField>;[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: consider importing this struct[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m3[0m[0m   [0m[0m[38;5;10m+ use mat::DenseMatFieldCM;[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:55:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m55[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `BatchPoint`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:29:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m29[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    BatchPoint,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[38;5;9merror[E0608][0m[0m[1m: cannot index into a value of type `DenseMatCM<i64, <E as Pairing>::ScalarField>`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:468:91[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m468[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                b_mat = matop::myint_to_field_mat::<E::ScalarField>(&self.mock_nn.nn_input[i]);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                                                                           [0m[0m[1m[38;5;9m^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:32:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m32[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_ff::{PrimeField, UniformRand, One};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1mSome errors have detailed explanations: E0412, E0608.[0m
[0m[1mFor more information about an error, try `rustc --explain E0412`.[0m
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 5 warnings
[1m[31merror[0m[1m:[0m could not compile `composite` (lib) due to 2 previous errors; 5 warnings emitted
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn/composite]1;..lyn/composite]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn/composite\[0m[27m[24m[J
[01;32m~/git/evalyn/composite[00m on [35mî‚  main[31m![00m âŒš [01;31m17:42:48[00m
$ [K[?1h=[?2004hcargo run-example experiment_nn[?1l>[?2004l
]2;cargo run-example experiment_nn]1;cargo[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:248:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m248[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:296:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m296[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:362:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m362[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:400:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m400[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[1m[33mwarning[0m[1m:[0m `ark-poly-commit` (lib) generated 4 warnings
[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[32m   Compiling[0m composite v0.1.0 (/home/luck/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[38;5;9merror[E0412][0m[0m[1m: cannot find type `DenseMatFieldCM` in this scope[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:466:24[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m466[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m            let b_mat: DenseMatFieldCM<E::ScalarField>;[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                        [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m::: [0m[0m/home/luck/git/evalyn/mat/src/utils/matdef.rs:244:1[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m244[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct DenseMatCM<I, F>[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m---------------------------[0m[0m [0m[0m[1m[38;5;12msimilarly named struct `DenseMatCM` defined here[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: a struct with a similar name exists[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m466[0m[0m [0m[0m[38;5;9m- [0m[0m            let b_mat: [0m[0m[38;5;9mDenseMatFieldCM[0m[0m<E::ScalarField>;[0m
[0m[1m[38;5;12m466[0m[0m [0m[0m[38;5;10m+ [0m[0m            let b_mat: [0m[0m[38;5;10mDenseMatCM[0m[0m<E::ScalarField>;[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: consider importing this struct[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m3[0m[0m   [0m[0m[38;5;10m+ use mat::DenseMatFieldCM;[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:55:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m55[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `BatchPoint`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:29:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m29[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    BatchPoint,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[38;5;9merror[E0608][0m[0m[1m: cannot index into a value of type `DenseMatCM<i64, <E as Pairing>::ScalarField>`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:468:91[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m468[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                b_mat = matop::myint_to_field_mat::<E::ScalarField>(&self.mock_nn.nn_input[i]);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                                                                           [0m[0m[1m[38;5;9m^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:32:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m32[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_ff::{PrimeField, UniformRand, One};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1mSome errors have detailed explanations: E0412, E0608.[0m
[0m[1mFor more information about an error, try `rustc --explain E0412`.[0m
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 5 warnings
[1m[31merror[0m[1m:[0m could not compile `composite` (lib) due to 2 previous errors; 5 warnings emitted
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn/composite]1;..lyn/composite]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn/composite\[0m[27m[24m[J
[01;32m~/git/evalyn/composite[00m on [35mî‚  main[31m![00m âŒš [01;31m17:44:45[00m
$ [K[?1h=[?2004hcargo run-example experiment_nn[?1l>[?2004l
]2;cargo run-example experiment_nn]1;cargo[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:248:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m248[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:296:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m296[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:362:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m362[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:400:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m400[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[1m[33mwarning[0m[1m:[0m `ark-poly-commit` (lib) generated 4 warnings
[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[32m   Compiling[0m composite v0.1.0 (/home/luck/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[38;5;9merror[E0412][0m[0m[1m: cannot find type `DenseMatFieldCM` in this scope[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:466:24[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m466[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m            let b_mat: DenseMatFieldCM<E::ScalarField>;[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                        [0m[0m[1m[38;5;9m^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m::: [0m[0m/home/luck/git/evalyn/mat/src/utils/matdef.rs:244:1[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m244[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mpub struct DenseMatCM<I, F>[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m [0m[0m[1m[38;5;12m---------------------------[0m[0m [0m[0m[1m[38;5;12msimilarly named struct `DenseMatCM` defined here[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: a struct with a similar name exists[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m466[0m[0m [0m[0m[38;5;9m- [0m[0m            let b_mat: [0m[0m[38;5;9mDenseMatFieldCM[0m[0m<E::ScalarField>;[0m
[0m[1m[38;5;12m466[0m[0m [0m[0m[38;5;10m+ [0m[0m            let b_mat: [0m[0m[38;5;10mDenseMatCM[0m[0m<E::ScalarField>;[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;14mhelp[0m[0m: consider importing this struct[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m3[0m[0m   [0m[0m[38;5;10m+ use mat::DenseMatFieldCM;[0m
[0m    [0m[0m[1m[38;5;12m|[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:55:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m55[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `BatchPoint`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:29:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m29[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    BatchPoint,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[38;5;9merror[E0608][0m[0m[1m: cannot index into a value of type `DenseMatCM<i64, <E as Pairing>::ScalarField>`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:468:91[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m468[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                b_mat = matop::myint_to_field_mat::<E::ScalarField>(&self.mock_nn.nn_input[i]);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                                                                           [0m[0m[1m[38;5;9m^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:32:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m32[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_ff::{PrimeField, UniformRand, One};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1mSome errors have detailed explanations: E0412, E0608.[0m
[0m[1mFor more information about an error, try `rustc --explain E0412`.[0m
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 5 warnings
[1m[31merror[0m[1m:[0m could not compile `composite` (lib) due to 2 previous errors; 5 warnings emitted
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn/composite]1;..lyn/composite]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn/composite\[0m[27m[24m[J
[01;32m~/git/evalyn/composite[00m on [35mî‚  main[31m![00m âŒš [01;31m17:46:00[00m
$ [K[?1h=[?2004hcargo run-example experiment_nn[?1l>[?2004l
]2;cargo run-example experiment_nn]1;cargo[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:248:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m248[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:296:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m296[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:362:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m362[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:400:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m400[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[1m[33mwarning[0m[1m:[0m `ark-poly-commit` (lib) generated 4 warnings
[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[32m   Compiling[0m composite v0.1.0 (/home/luck/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:55:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m55[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `BatchPoint`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:29:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m29[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    BatchPoint,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[38;5;9merror[E0608][0m[0m[1m: cannot index into a value of type `DenseMatCM<i64, <E as Pairing>::ScalarField>`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:468:91[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m468[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                b_mat = matop::myint_to_field_mat::<E::ScalarField>(&self.mock_nn.nn_input[i]);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                                                                           [0m[0m[1m[38;5;9m^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:32:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m32[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_ff::{PrimeField, UniformRand, One};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1mFor more information about this error, try `rustc --explain E0608`.[0m
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 5 warnings
[1m[31merror[0m[1m:[0m could not compile `composite` (lib) due to 1 previous error; 5 warnings emitted
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn/composite]1;..lyn/composite]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn/composite\[0m[27m[24m[J
[01;32m~/git/evalyn/composite[00m on [35mî‚  main[31m![00m âŒš [01;31m17:46:10[00m
$ [K[?1h=[?2004hcargo run-example experiment_nn[?1l>[?2004l
]2;cargo run-example experiment_nn]1;cargo[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:248:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m248[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:296:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m296[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:362:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m362[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:400:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m400[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[1m[33mwarning[0m[1m:[0m `ark-poly-commit` (lib) generated 4 warnings
[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[32m   Compiling[0m composite v0.1.0 (/home/luck/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:55:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m55[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `BatchPoint`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:29:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m29[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    BatchPoint,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[38;5;9merror[E0608][0m[0m[1m: cannot index into a value of type `DenseMatCM<i64, <E as Pairing>::ScalarField>`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:468:91[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m468[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m                b_mat = matop::myint_to_field_mat::<E::ScalarField>(&self.mock_nn.nn_input[i]);[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m                                                                                           [0m[0m[1m[38;5;9m^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:32:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m32[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_ff::{PrimeField, UniformRand, One};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1mFor more information about this error, try `rustc --explain E0608`.[0m
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 5 warnings
[1m[31merror[0m[1m:[0m could not compile `composite` (lib) due to 1 previous error; 5 warnings emitted
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn/composite]1;..lyn/composite]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn/composite\[0m[27m[24m[J
[01;32m~/git/evalyn/composite[00m on [35mî‚  main[31m![00m âŒš [01;31m17:46:33[00m
$ [K[?1h=[?2004hcargo run-example experiment_nn[?1l>[?2004l
]2;cargo run-example experiment_nn]1;cargo[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:248:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m248[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_variables)]` on by default[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:296:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m296[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:362:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m362[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[0m[1m[33mwarning[0m[0m[1m: unused variable: `tier1_time`[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mpoly-commit/src/smart_pc/mod.rs:400:13[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m400[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m        let tier1_time = timer.elapsed().as_secs_f64();[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m             [0m[0m[1m[33m^^^^^^^^^^[0m[0m [0m[0m[1m[33mhelp: if this is intentional, prefix it with an underscore: `_tier1_time`[0m

[1m[33mwarning[0m[1m:[0m `ark-poly-commit` (lib) generated 4 warnings
[0m[1m[33mwarning[0m[0m[1m: unused import: `crate::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mmat/src/protocols/proj.rs:16:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m16[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse crate::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[33mwarning[0m[1m:[0m `mat` (lib) generated 1 warning (run `cargo fix --lib -p mat` to apply 1 suggestion)
[1m[32m   Compiling[0m composite v0.1.0 (/home/luck/git/evalyn/composite)
[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused imports: `AtomicMatProtocolInput` and `MatOp`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/activation.rs:20:56[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m20[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse atomic_proof::atomic_protocol::{AtomicMatProtocol, AtomicMatProtocolInput, MatOp};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                                        [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^^^^^[0m[0m  [0m[0m[1m[33m^^^^^[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m   [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(unused_imports)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `mat::MyInt`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:55:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m55[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse mat::MyInt;[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `BatchPoint`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/nn.rs:29:5[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m29[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0m    BatchPoint,[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m     [0m[0m[1m[33m^^^^^^^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: unused import: `One`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/lookup.rs:32:39[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m32[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_ff::{PrimeField, UniformRand, One};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                                       [0m[0m[1m[33m^^^[0m

[0m[1m[33mwarning[0m[0m[1m: unused import: `Zero`[0m
[0m  [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/protocols/range.rs:13:28[0m
[0m   [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m13[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0muse ark_std::{UniformRand, Zero};[0m
[0m   [0m[0m[1m[38;5;12m|[0m[0m                            [0m[0m[1m[33m^^^^[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[0m[1m[33mwarning[0m[0m[1m: function `mat_myint_to_field` is never used[0m
[0m   [0m[0m[1m[38;5;12m--> [0m[0mcomposite/src/utils/matop.rs:106:4[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m[1m[38;5;12m106[0m[0m [0m[0m[1m[38;5;12m|[0m[0m [0m[0mfn mat_myint_to_field<F: PrimeField>(mat: Vec<Vec<MyInt>>) -> Vec<Vec<F>> {[0m
[0m    [0m[0m[1m[38;5;12m|[0m[0m    [0m[0m[1m[33m^^^^^^^^^^^^^^^^^^[0m
[0m    [0m[0m[1m[38;5;12m|[0m
[0m    [0m[0m[1m[38;5;12m= [0m[0m[1mnote[0m[0m: `#[warn(dead_code)]` on by default[0m

[1m[36m    Building[0m [=======================> ] 146/148: composite                                                        [K[1m[33mwarning[0m[1m:[0m `composite` (lib) generated 6 warnings (run `cargo fix --lib -p composite` to apply 3 suggestions)
[1m[36m    Building[0m [=======================> ] 147/148: experiment_nn(example)                                           [K[1m[32m    Finished[0m `release` profile [optimized + debuginfo] target(s) in 5.37s
[1m[32m     Running[0m `/home/luck/git/evalyn/target/release/examples/experiment_nn`
[log] writing to /home/luck/git/evalyn/composite/example/experiment.log
RAYON_NUM_THREADS: 64
************************************************************************
========Preparing NN parameters=========================================
^C

[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn/composite]1;..lyn/composite]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn/composite\[0m[27m[24m[J
[01;32m~/git/evalyn/composite[00m on [35mî‚  main[31m![00m âŒš [01;31m17:47:17[00m
$ [K[?1h=[?2004h[?1l>[?2004l
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn/composite]1;..lyn/composite]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn/composite\[0m[27m[24m[J
[01;32m~/git/evalyn/composite[00m on [35mî‚  main[31m![00m âŒš [01;31m17:47:17[00m
$ [K[?1h=[?2004hccd ..[?1l>[?2004l
]2;cd ..]1;cd[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m17:47:35[00m
$ [K[?1h=[?2004hggit add .[?1l>[?2004l
]2;git add .]1;git[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m17:47:37[00m
$ [K[?1h=[?2004hnnin n  ggit commit[?1l>[?2004l
]2;git commit]1;githint: Waiting for your editor to close the file... [?2004h[?1049h[22;0;0t[1;53r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[51;52H(B[0;7m[ Reading... ](B[m[51;51H(B[0;7m[ Read 27 lines ](B[m[H(B[0;7m  GNU nano 7.2                          /home/luck/git/evalyn/.git/COMMIT_EDITMSG                                    [1;116H(B[m[52d(B[0;7m^G(B[m Help[52;17H(B[0;7m^O(B[m Write Out    (B[0;7m^W(B[m Where Is     (B[0;7m^K(B[m Cut[52;65H(B[0;7m^T(B[m Execute[81G(B[0;7m^C(B[m Location     (B[0;7mM-U(B[m Undo[53d(B[0;7m^X(B[m Exit[53;17H(B[0;7m^R(B[m Read File    (B[0;7m^\(B[m Replace[49G(B[0;7m^U(B[m Paste[53;65H(B[0;7m^J(B[m Justify[81G(B[0;7m^/(B[m Go To Line   (B[0;7mM-E(B[m Redo[3d[36m# Please enter the commit message for your changes. Lines starting[4d# with '#' will be ignored, and an empty message aborts the commit.[5d#[6d# On branch main[7d# Your branch is up to date with 'origin/main'.[8d#[9d# Changes to be committed:[10d#[38;5;208m       [36mmodified:   atomic_proof/src/protocols/concat.rs[11d#[38;5;208m       [36mmodified:   atomic_proof/src/utils.rs[12d#[38;5;208m       [36mmodified:   composite/example/experiment.log[13d#[38;5;208m       [36mmodified:   composite/example/experiment_nn.rs[14d#[38;5;208m       [36mmodified:   composite/src/protocols/activation.rs[15d#[38;5;208m       [36mmodified:   composite/src/protocols/fsbatch_groth.rs[16d#[38;5;208m       [36mmodified:   composite/src/protocols/lookup.rs[17d#[38;5;208m       [36mmodified:   composite/src/protocols/nn.rs[18d#[38;5;208m       [36mmodified:   composite/src/utils/matop.rs[19d#[38;5;208m       [36mmodified:   composite/src/utils/mock_nn.rs[20d#[38;5;208m       [36mmodified:   composite/src/utils/table_builder.rs[21d#[38;5;208m       [36mmodified:   mat/src/protocols/batchpcs.rs[22d#[38;5;208m       [36mmodified:   mat/src/utils/matdef.rs[23d#[38;5;208m       [36mmodified:   output.log[24d#[38;5;208m       [36mmodified:   poly-commit/src/smart_pc/mod.rs[25d#[26d# Changes not staged for commit:[27d#[38;5;208m       [36mmodified:   output.log[28d#[2d[39m(B[m[?12l[?25h[?25l[1;83H(B[0;7m*[116G(B[m[?12l[?25h[2dW[?25l[?12l[?25hi[?25l[?12l[?25hp[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h[K[?25l[?12l[?25hi[?25l[?12l[?25h6[?25l[?12l[?25h4[?25l[?12l[?25h [?25l[?12l[?25he[?25l[?12l[?25hx[?25l[?12l[?25ha[?25l[?12l[?25hm[?25l[?12l[?25hp[?25l[?12l[?25hl[?25l[?12l[?25he[?25l[?12l[?25h [?25l[?12l[?25hs[?25l[51d[K[?12l[?25h[2;14Hu[?25l[?12l[?25hn[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25hr[?25l[?12l[?25hu[?25l[?12l[?25hn[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25hp[?25l[?12l[?25hr[?25l[?12l[?25he[?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25h [?25l[?12l[?25hr[?25l[?12l[?25hu[?25l[?12l[?25hn[?25l[51d(B[0;7mSave modified buffer?                                                                                                [52;1H Y(B[m Yes[K[53d(B[0;7m N(B[m No  [53;18H(B[0;7mC(B[m Cancel[K[51;23H[?12l[?25h[?25l[52d(B[0;7m^G(B[m Help[52;30H(B[0;7mM-D(B[m DOS Format[52;59H(B[0;7mM-A(B[m Append[52;88H(B[0;7mM-B(B[m Backup File[53d(B[0;7m^C(B[m Cancel[17G             (B[0;7mM-M(B[m Mac Format[53;59H(B[0;7mM-P(B[m Prepend[53;88H(B[0;7m^T(B[m Browse[51d(B[0;7mFile Name to Write: /home/luck/git/evalyn/.git/COMMIT_EDITMSG(B[m[?12l[?25h[?25l[51;51H[1K (B[0;7m[ Writing... ](B[m[K[1;83H(B[0;7m [116G(B[m[51;50H(B[0;7m[ Wrote 27 lines ](B[m[J[53d[?12l[?25h[53;1H[?1049l[23;0;0t[?1l>[?2004l[K[main 4455eea] i64 example run
 15 files changed, 1703 insertions(+), 85 deletions(-)
[1m[7m%[27m[1m[0m                                                                                                                     ]2;luck@DESKTOP-RLSIS6U:~/git/evalyn]1;~/git/evalyn]7;file://DESKTOP-RLSIS6U/home/luck/git/evalyn\[0m[27m[24m[J
[01;32m~/git/evalyn[00m on [35mî‚  main[31m![00m âŒš [01;31m17:48:01[00m
$ [K[?1h=[?2004hggit push[?1l>[?2004l
]2;git push]1;gitEnumerating objects: 61, done.
Counting objects:   1% (1/61)Counting objects:   3% (2/61)Counting objects:   4% (3/61)Counting objects:   6% (4/61)Counting objects:   8% (5/61)Counting objects:   9% (6/61)Counting objects:  11% (7/61)Counting objects:  13% (8/61)Counting objects:  14% (9/61)Counting objects:  16% (10/61)Counting objects:  18% (11/61)Counting objects:  19% (12/61)Counting objects:  21% (13/61)Counting objects:  22% (14/61)Counting objects:  24% (15/61)Counting objects:  26% (16/61)Counting objects:  27% (17/61)Counting objects:  29% (18/61)Counting objects:  31% (19/61)Counting objects:  32% (20/61)Counting objects:  34% (21/61)Counting objects:  36% (22/61)Counting objects:  37% (23/61)Counting objects:  39% (24/61)Counting objects:  40% (25/61)Counting objects:  42% (26/61)Counting objects:  44% (27/61)Counting objects:  45% (28/61)Counting objects:  47% (29/61)Counting objects:  49% (30/61)Counting objects:  50% (31/61)Counting objects:  52% (32/61)Counting objects:  54% (33/61)Counting objects:  55% (34/61)Counting objects:  57% (35/61)Counting objects:  59% (36/61)Counting objects:  60% (37/61)Counting objects:  62% (38/61)Counting objects:  63% (39/61)Counting objects:  65% (40/61)Counting objects:  67% (41/61)Counting objects:  68% (42/61)Counting objects:  70% (43/61)Counting objects:  72% (44/61)Counting objects:  73% (45/61)Counting objects:  75% (46/61)Counting objects:  77% (47/61)Counting objects:  78% (48/61)Counting objects:  80% (49/61)Counting objects:  81% (50/61)Counting objects:  83% (51/61)Counting objects:  85% (52/61)Counting objects:  86% (53/61)Counting objects:  88% (54/61)Counting objects:  90% (55/61)Counting objects:  91% (56/61)Counting objects:  93% (57/61)Counting objects:  95% (58/61)Counting objects:  96% (59/61)Counting objects:  98% (60/61)Counting objects: 100% (61/61)Counting objects: 100% (61/61), done.
Delta compression using up to 12 threads
Compressing objects:   3% (1/32)Compressing objects:   6% (2/32)Compressing objects:   9% (3/32)Compressing objects:  12% (4/32)Compressing objects:  15% (5/32)Compressing objects:  18% (6/32)Compressing objects:  21% (7/32)Compressing objects:  25% (8/32)Compressing objects:  28% (9/32)Compressing objects:  31% (10/32)Compressing objects:  34% (11/32)Compressing objects:  37% (12/32)Compressing objects:  40% (13/32)Compressing objects:  43% (14/32)Compressing objects:  46% (15/32)Compressing objects:  50% (16/32)Compressing objects:  53% (17/32)Compressing objects:  56% (18/32)Compressing objects:  59% (19/32)Compressing objects:  62% (20/32)Compressing objects:  65% (21/32)Compressing objects:  68% (22/32)Compressing objects:  71% (23/32)Compressing objects:  75% (24/32)Compressing objects:  78% (25/32)Compressing objects:  81% (26/32)Compressing objects:  84% (27/32)Compressing objects:  87% (28/32)Compressing objects:  90% (29/32)Compressing objects:  93% (30/32)Compressing objects:  96% (31/32)Compressing objects: 100% (32/32)Compressing objects: 100% (32/32), done.
Writing objects:   3% (1/32)Writing objects:   6% (2/32)Writing objects:   9% (3/32)Writing objects:  12% (4/32)Writing objects:  15% (5/32)Writing objects:  18% (6/32)Writing objects:  21% (7/32)Writing objects:  25% (8/32)Writing objects:  28% (9/32)Writing objects:  31% (10/32)Writing objects:  34% (11/32)Writing objects:  37% (12/32)Writing objects:  40% (13/32)Writing objects:  43% (14/32)Writing objects:  46% (15/32)Writing object